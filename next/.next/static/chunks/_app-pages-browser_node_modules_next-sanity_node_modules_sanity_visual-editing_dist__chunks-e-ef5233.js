/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_next-sanity_node_modules_sanity_visual-editing_dist__chunks-e-ef5233"],{

/***/ "(app-pages-browser)/./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAFTS_PREFIX: function() { return /* binding */ DRAFTS_PREFIX; },\n/* harmony export */   createEditUrl: function() { return /* binding */ createEditUrl; },\n/* harmony export */   get: function() { return /* binding */ get; },\n/* harmony export */   getPublishedId: function() { return /* binding */ getPublishedId; },\n/* harmony export */   jsonPath: function() { return /* binding */ jsonPath; },\n/* harmony export */   jsonPathToStudioPath: function() { return /* binding */ jsonPathToStudioPath; },\n/* harmony export */   parseJsonPath: function() { return /* binding */ parseJsonPath; },\n/* harmony export */   reKeySegment: function() { return /* binding */ reKeySegment; },\n/* harmony export */   resolveEditInfo: function() { return /* binding */ resolveEditInfo; },\n/* harmony export */   resolveMapping: function() { return /* binding */ resolveMapping; },\n/* harmony export */   resolveStudioBaseRoute: function() { return /* binding */ resolveStudioBaseRoute; },\n/* harmony export */   studioPath: function() { return /* binding */ studioPath; },\n/* harmony export */   studioPathToJsonPath: function() { return /* binding */ studioPathToJsonPath; },\n/* harmony export */   toString: function() { return /* binding */ toString; },\n/* harmony export */   walkMap: function() { return /* binding */ walkMap; }\n/* harmony export */ });\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(parsePathSegment);\n}\nfunction parsePathSegment(segment) {\n  return isIndexSegment(segment) ? parseIndexSegment(segment) : isKeySegment(segment) ? parseKeySegment(segment) : isIndexTuple(segment) ? parseIndexTupleSegment(segment) : segment;\n}\nfunction parseIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction parseKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction parseIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nvar studioPath = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  fromString,\n  get,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  reKeySegment,\n  toString\n});\nconst DRAFTS_PREFIX = \"drafts.\";\nfunction getPublishedId(id) {\n  return id.startsWith(DRAFTS_PREFIX) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction studioPathToJsonPath(path) {\n  return (typeof path == \"string\" ? fromString(path) : path).map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (Array.isArray(segment))\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`);\n    if (isContentSourceMapParsedPathKeyedSegment(segment))\n      return segment;\n    if (segment._key)\n      return { _key: segment._key, _index: -1 };\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction isContentSourceMapParsedPathKeyedSegment(segment) {\n  return typeof segment == \"object\" && \"_key\" in segment && \"_index\" in segment;\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!(csm != null && csm.mappings))\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  return isArray(value) ? value.map((v, idx) => {\n    if (isRecord(v)) {\n      const _key = v._key;\n      if (typeof _key == \"string\")\n        return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n    }\n    return walkMap(v, mappingFn, path.concat(idx));\n  }) : isRecord(value) ? Object.fromEntries(\n    Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n  ) : mappingFn(value, path);\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), _id.startsWith(DRAFTS_PREFIX) && searchParams.set(\"isDraft\", \"\");\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveEditInfo(options) {\n  const { resultSourceMap: csm, resultPath } = options, { mapping, pathSuffix } = resolveMapping(resultPath, csm) || {};\n  if (!mapping || mapping.source.type === \"literal\" || mapping.source.type === \"unknown\")\n    return;\n  const sourceDoc = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path];\n  if (sourceDoc && sourcePath) {\n    const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n      typeof options.studioUrl == \"function\" ? options.studioUrl(sourceDoc) : options.studioUrl\n    );\n    if (!baseUrl)\n      return;\n    const { _id, _type, _projectId, _dataset } = sourceDoc;\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset\n    };\n  }\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\n\n//# sourceMappingURL=resolveEditInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vercel/stega/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@vercel/stega/dist/index.mjs ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERCEL_STEGA_REGEX: function() { return /* binding */ f; },\n/* harmony export */   legacyStegaEncode: function() { return /* binding */ y; },\n/* harmony export */   vercelStegaClean: function() { return /* binding */ O; },\n/* harmony export */   vercelStegaCombine: function() { return /* binding */ C; },\n/* harmony export */   vercelStegaDecode: function() { return /* binding */ G; },\n/* harmony export */   vercelStegaDecodeAll: function() { return /* binding */ $; },\n/* harmony export */   vercelStegaEncode: function() { return /* binding */ E; },\n/* harmony export */   vercelStegaSplit: function() { return /* binding */ _; }\n/* harmony export */ });\nvar s={0:8203,1:8204,2:8205,3:8290,4:8291,5:8288,6:65279,7:8289,8:119155,9:119156,a:119157,b:119158,c:119159,d:119160,e:119161,f:119162},c={0:8203,1:8204,2:8205,3:65279},u=new Array(4).fill(String.fromCodePoint(c[0])).join(\"\"),m=String.fromCharCode(0);function E(t){let e=JSON.stringify(t);return`${u}${Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(4).padStart(4,\"0\")).map(o=>String.fromCodePoint(c[o])).join(\"\")}).join(\"\")}`}function y(t){let e=JSON.stringify(t);return Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(16).padStart(2,\"0\")).map(o=>String.fromCodePoint(s[o])).join(\"\")}).join(\"\")}function I(t){return!Number.isNaN(Number(t))||/[a-z]/i.test(t)&&!/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t)?!1:Boolean(Date.parse(t))}function T(t){try{new URL(t,t.startsWith(\"/\")?\"https://acme.com\":void 0)}catch{return!1}return!0}function C(t,e,r=\"auto\"){return r===!0||r===\"auto\"&&(I(t)||T(t))?t:`${t}${E(e)}`}var x=Object.fromEntries(Object.entries(c).map(t=>t.reverse())),g=Object.fromEntries(Object.entries(s).map(t=>t.reverse())),S=`${Object.values(s).map(t=>`\\\\u{${t.toString(16)}}`).join(\"\")}`,f=new RegExp(`[${S}]{4,}`,\"gu\");function G(t){let e=t.match(f);if(!!e)return h(e[0],!0)[0]}function $(t){let e=t.match(f);if(!!e)return e.map(r=>h(r)).flat()}function h(t,e=!1){let r=Array.from(t);if(r.length%2===0){if(r.length%4||!t.startsWith(u))return A(r,e)}else throw new Error(\"Encoded data has invalid length\");let n=[];for(let o=r.length*.25;o--;){let p=r.slice(o*4,o*4+4).map(d=>x[d.codePointAt(0)]).join(\"\");n.unshift(String.fromCharCode(parseInt(p,4)))}if(e){n.shift();let o=n.indexOf(m);return o===-1&&(o=n.length),[JSON.parse(n.slice(0,o).join(\"\"))]}return n.join(\"\").split(m).filter(Boolean).map(o=>JSON.parse(o))}function A(t,e){var d;let r=[];for(let i=t.length*.5;i--;){let a=`${g[t[i*2].codePointAt(0)]}${g[t[i*2+1].codePointAt(0)]}`;r.unshift(String.fromCharCode(parseInt(a,16)))}let n=[],o=[r.join(\"\")],p=10;for(;o.length;){let i=o.shift();try{if(n.push(JSON.parse(i)),e)return n}catch(a){if(!p--)throw a;let l=+((d=a.message.match(/\\sposition\\s(\\d+)$/))==null?void 0:d[1]);if(!l)throw a;o.unshift(i.substring(0,l),i.substring(l))}}return n}function _(t){var e;return{cleaned:t.replace(f,\"\"),encoded:((e=t.match(f))==null?void 0:e[0])||\"\"}}function O(t){return t&&JSON.parse(_(JSON.stringify(t)).cleaned)}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdmVyY2VsL3N0ZWdhL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxpSUFBaUksSUFBSSw2QkFBNkIsbUZBQW1GLGNBQWMsd0JBQXdCLFNBQVMsRUFBRSxFQUFFLHNCQUFzQixzQkFBc0IsNEZBQTRGLEdBQUcsZUFBZSxHQUFHLEdBQUcsRUFBRSxJQUFJLDZGQUE2RixXQUFXLEVBQUUsY0FBYyx3QkFBd0IsNkJBQTZCLHNCQUFzQiw0RkFBNEYsR0FBRyxlQUFlLEdBQUcsR0FBRyxFQUFFLElBQUksOEZBQThGLFdBQVcsY0FBYyxxRUFBcUUsRUFBRSxxQkFBcUIsSUFBSSxnREFBZ0QsY0FBYyxJQUFJLHVEQUF1RCxNQUFNLFNBQVMsU0FBUyx5QkFBeUIsNkNBQTZDLEVBQUUsRUFBRSxLQUFLLEVBQUUsaUlBQWlJLDZCQUE2QixFQUFFLGdCQUFnQixZQUFZLG1CQUFtQixFQUFFLEVBQUUsR0FBRyxRQUFRLGNBQWMsaUJBQWlCLDRCQUE0QixjQUFjLGlCQUFpQixvQ0FBb0MsbUJBQW1CLG9CQUFvQixtQkFBbUIsOENBQThDLHdEQUF3RCxTQUFTLHVCQUF1QixJQUFJLEVBQUUsOERBQThELDhDQUE4QyxNQUFNLFVBQVUsbUJBQW1CLGdFQUFnRSxpRUFBaUUsZ0JBQWdCLE1BQU0sU0FBUyxzQkFBc0IsSUFBSSxFQUFFLFNBQVMseUJBQXlCLEVBQUUsMkJBQTJCLEVBQUUsK0NBQStDLDZCQUE2QixLQUFLLFNBQVMsRUFBRSxnQkFBZ0IsSUFBSSxvQ0FBb0MsU0FBUyxnQkFBZ0IscUVBQXFFLGNBQWMsNENBQTRDLFNBQVMsY0FBYyxNQUFNLE9BQU8sd0VBQXdFLGNBQWMsbURBQXNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdmVyY2VsL3N0ZWdhL2Rpc3QvaW5kZXgubWpzPzE3MmEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHM9ezA6ODIwMywxOjgyMDQsMjo4MjA1LDM6ODI5MCw0OjgyOTEsNTo4Mjg4LDY6NjUyNzksNzo4Mjg5LDg6MTE5MTU1LDk6MTE5MTU2LGE6MTE5MTU3LGI6MTE5MTU4LGM6MTE5MTU5LGQ6MTE5MTYwLGU6MTE5MTYxLGY6MTE5MTYyfSxjPXswOjgyMDMsMTo4MjA0LDI6ODIwNSwzOjY1Mjc5fSx1PW5ldyBBcnJheSg0KS5maWxsKFN0cmluZy5mcm9tQ29kZVBvaW50KGNbMF0pKS5qb2luKFwiXCIpLG09U3RyaW5nLmZyb21DaGFyQ29kZSgwKTtmdW5jdGlvbiBFKHQpe2xldCBlPUpTT04uc3RyaW5naWZ5KHQpO3JldHVybmAke3V9JHtBcnJheS5mcm9tKGUpLm1hcChyPT57bGV0IG49ci5jaGFyQ29kZUF0KDApO2lmKG4+MjU1KXRocm93IG5ldyBFcnJvcihgT25seSBBU0NJSSBlZGl0IGluZm8gY2FuIGJlIGVuY29kZWQuIEVycm9yIGF0dGVtcHRpbmcgdG8gZW5jb2RlICR7ZX0gb24gY2hhcmFjdGVyICR7cn0gKCR7bn0pYCk7cmV0dXJuIEFycmF5LmZyb20obi50b1N0cmluZyg0KS5wYWRTdGFydCg0LFwiMFwiKSkubWFwKG89PlN0cmluZy5mcm9tQ29kZVBvaW50KGNbb10pKS5qb2luKFwiXCIpfSkuam9pbihcIlwiKX1gfWZ1bmN0aW9uIHkodCl7bGV0IGU9SlNPTi5zdHJpbmdpZnkodCk7cmV0dXJuIEFycmF5LmZyb20oZSkubWFwKHI9PntsZXQgbj1yLmNoYXJDb2RlQXQoMCk7aWYobj4yNTUpdGhyb3cgbmV3IEVycm9yKGBPbmx5IEFTQ0lJIGVkaXQgaW5mbyBjYW4gYmUgZW5jb2RlZC4gRXJyb3IgYXR0ZW1wdGluZyB0byBlbmNvZGUgJHtlfSBvbiBjaGFyYWN0ZXIgJHtyfSAoJHtufSlgKTtyZXR1cm4gQXJyYXkuZnJvbShuLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLFwiMFwiKSkubWFwKG89PlN0cmluZy5mcm9tQ29kZVBvaW50KHNbb10pKS5qb2luKFwiXCIpfSkuam9pbihcIlwiKX1mdW5jdGlvbiBJKHQpe3JldHVybiFOdW1iZXIuaXNOYU4oTnVtYmVyKHQpKXx8L1thLXpdL2kudGVzdCh0KSYmIS9cXGQrKD86Wy06XFwvXVxcZCspezJ9KD86VFxcZCsoPzpbLTpcXC9dXFxkKyl7MSwyfShcXC5cXGQrKT9aPyk/Ly50ZXN0KHQpPyExOkJvb2xlYW4oRGF0ZS5wYXJzZSh0KSl9ZnVuY3Rpb24gVCh0KXt0cnl7bmV3IFVSTCh0LHQuc3RhcnRzV2l0aChcIi9cIik/XCJodHRwczovL2FjbWUuY29tXCI6dm9pZCAwKX1jYXRjaHtyZXR1cm4hMX1yZXR1cm4hMH1mdW5jdGlvbiBDKHQsZSxyPVwiYXV0b1wiKXtyZXR1cm4gcj09PSEwfHxyPT09XCJhdXRvXCImJihJKHQpfHxUKHQpKT90OmAke3R9JHtFKGUpfWB9dmFyIHg9T2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKGMpLm1hcCh0PT50LnJldmVyc2UoKSkpLGc9T2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKHMpLm1hcCh0PT50LnJldmVyc2UoKSkpLFM9YCR7T2JqZWN0LnZhbHVlcyhzKS5tYXAodD0+YFxcXFx1eyR7dC50b1N0cmluZygxNil9fWApLmpvaW4oXCJcIil9YCxmPW5ldyBSZWdFeHAoYFske1N9XXs0LH1gLFwiZ3VcIik7ZnVuY3Rpb24gRyh0KXtsZXQgZT10Lm1hdGNoKGYpO2lmKCEhZSlyZXR1cm4gaChlWzBdLCEwKVswXX1mdW5jdGlvbiAkKHQpe2xldCBlPXQubWF0Y2goZik7aWYoISFlKXJldHVybiBlLm1hcChyPT5oKHIpKS5mbGF0KCl9ZnVuY3Rpb24gaCh0LGU9ITEpe2xldCByPUFycmF5LmZyb20odCk7aWYoci5sZW5ndGglMj09PTApe2lmKHIubGVuZ3RoJTR8fCF0LnN0YXJ0c1dpdGgodSkpcmV0dXJuIEEocixlKX1lbHNlIHRocm93IG5ldyBFcnJvcihcIkVuY29kZWQgZGF0YSBoYXMgaW52YWxpZCBsZW5ndGhcIik7bGV0IG49W107Zm9yKGxldCBvPXIubGVuZ3RoKi4yNTtvLS07KXtsZXQgcD1yLnNsaWNlKG8qNCxvKjQrNCkubWFwKGQ9PnhbZC5jb2RlUG9pbnRBdCgwKV0pLmpvaW4oXCJcIik7bi51bnNoaWZ0KFN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQocCw0KSkpfWlmKGUpe24uc2hpZnQoKTtsZXQgbz1uLmluZGV4T2YobSk7cmV0dXJuIG89PT0tMSYmKG89bi5sZW5ndGgpLFtKU09OLnBhcnNlKG4uc2xpY2UoMCxvKS5qb2luKFwiXCIpKV19cmV0dXJuIG4uam9pbihcIlwiKS5zcGxpdChtKS5maWx0ZXIoQm9vbGVhbikubWFwKG89PkpTT04ucGFyc2UobykpfWZ1bmN0aW9uIEEodCxlKXt2YXIgZDtsZXQgcj1bXTtmb3IobGV0IGk9dC5sZW5ndGgqLjU7aS0tOyl7bGV0IGE9YCR7Z1t0W2kqMl0uY29kZVBvaW50QXQoMCldfSR7Z1t0W2kqMisxXS5jb2RlUG9pbnRBdCgwKV19YDtyLnVuc2hpZnQoU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChhLDE2KSkpfWxldCBuPVtdLG89W3Iuam9pbihcIlwiKV0scD0xMDtmb3IoO28ubGVuZ3RoOyl7bGV0IGk9by5zaGlmdCgpO3RyeXtpZihuLnB1c2goSlNPTi5wYXJzZShpKSksZSlyZXR1cm4gbn1jYXRjaChhKXtpZighcC0tKXRocm93IGE7bGV0IGw9KygoZD1hLm1lc3NhZ2UubWF0Y2goL1xcc3Bvc2l0aW9uXFxzKFxcZCspJC8pKT09bnVsbD92b2lkIDA6ZFsxXSk7aWYoIWwpdGhyb3cgYTtvLnVuc2hpZnQoaS5zdWJzdHJpbmcoMCxsKSxpLnN1YnN0cmluZyhsKSl9fXJldHVybiBufWZ1bmN0aW9uIF8odCl7dmFyIGU7cmV0dXJue2NsZWFuZWQ6dC5yZXBsYWNlKGYsXCJcIiksZW5jb2RlZDooKGU9dC5tYXRjaChmKSk9PW51bGw/dm9pZCAwOmVbMF0pfHxcIlwifX1mdW5jdGlvbiBPKHQpe3JldHVybiB0JiZKU09OLnBhcnNlKF8oSlNPTi5zdHJpbmdpZnkodCkpLmNsZWFuZWQpfWV4cG9ydHtmIGFzIFZFUkNFTF9TVEVHQV9SRUdFWCx5IGFzIGxlZ2FjeVN0ZWdhRW5jb2RlLE8gYXMgdmVyY2VsU3RlZ2FDbGVhbixDIGFzIHZlcmNlbFN0ZWdhQ29tYmluZSxHIGFzIHZlcmNlbFN0ZWdhRGVjb2RlLCQgYXMgdmVyY2VsU3RlZ2FEZWNvZGVBbGwsRSBhcyB2ZXJjZWxTdGVnYUVuY29kZSxfIGFzIHZlcmNlbFN0ZWdhU3BsaXR9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vercel/stega/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/compute-scroll-into-view/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/compute-scroll-into-view/dist/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compute: function() { return /* binding */ r; }\n/* harmony export */ });\nconst t=t=>\"object\"==typeof t&&null!=t&&1===t.nodeType,e=(t,e)=>(!e||\"hidden\"!==t)&&(\"visible\"!==t&&\"clip\"!==t),n=(t,n)=>{if(t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth){const o=getComputedStyle(t,null);return e(o.overflowY,n)||e(o.overflowX,n)||(t=>{const e=(t=>{if(!t.ownerDocument||!t.ownerDocument.defaultView)return null;try{return t.ownerDocument.defaultView.frameElement}catch(t){return null}})(t);return!!e&&(e.clientHeight<t.scrollHeight||e.clientWidth<t.scrollWidth)})(t)}return!1},o=(t,e,n,o,l,r,i,s)=>r<t&&i>e||r>t&&i<e?0:r<=t&&s<=n||i>=e&&s>=n?r-t-o:i>e&&s<n||r<t&&s>n?i-e+l:0,l=t=>{const e=t.parentElement;return null==e?t.getRootNode().host||null:e},r=(e,r)=>{var i,s,d,h;if(\"undefined\"==typeof document)return[];const{scrollMode:c,block:f,inline:u,boundary:a,skipOverflowHiddenElements:g}=r,p=\"function\"==typeof a?a:t=>t!==a;if(!t(e))throw new TypeError(\"Invalid target\");const m=document.scrollingElement||document.documentElement,w=[];let W=e;for(;t(W)&&p(W);){if(W=l(W),W===m){w.push(W);break}null!=W&&W===document.body&&n(W)&&!n(document.documentElement)||null!=W&&n(W,g)&&w.push(W)}const b=null!=(s=null==(i=window.visualViewport)?void 0:i.width)?s:innerWidth,H=null!=(h=null==(d=window.visualViewport)?void 0:d.height)?h:innerHeight,{scrollX:y,scrollY:M}=window,{height:v,width:E,top:x,right:C,bottom:I,left:R}=e.getBoundingClientRect(),{top:T,right:B,bottom:F,left:V}=(t=>{const e=window.getComputedStyle(t);return{top:parseFloat(e.scrollMarginTop)||0,right:parseFloat(e.scrollMarginRight)||0,bottom:parseFloat(e.scrollMarginBottom)||0,left:parseFloat(e.scrollMarginLeft)||0}})(e);let k=\"start\"===f||\"nearest\"===f?x-T:\"end\"===f?I+F:x+v/2-T+F,D=\"center\"===u?R+E/2-V+B:\"end\"===u?C+B:R-V;const L=[];for(let t=0;t<w.length;t++){const e=w[t],{height:n,width:l,top:r,right:i,bottom:s,left:d}=e.getBoundingClientRect();if(\"if-needed\"===c&&x>=0&&R>=0&&I<=H&&C<=b&&x>=r&&I<=s&&R>=d&&C<=i)return L;const h=getComputedStyle(e),a=parseInt(h.borderLeftWidth,10),g=parseInt(h.borderTopWidth,10),p=parseInt(h.borderRightWidth,10),W=parseInt(h.borderBottomWidth,10);let T=0,B=0;const F=\"offsetWidth\"in e?e.offsetWidth-e.clientWidth-a-p:0,V=\"offsetHeight\"in e?e.offsetHeight-e.clientHeight-g-W:0,S=\"offsetWidth\"in e?0===e.offsetWidth?0:l/e.offsetWidth:0,X=\"offsetHeight\"in e?0===e.offsetHeight?0:n/e.offsetHeight:0;if(m===e)T=\"start\"===f?k:\"end\"===f?k-H:\"nearest\"===f?o(M,M+H,H,g,W,M+k,M+k+v,v):k-H/2,B=\"start\"===u?D:\"center\"===u?D-b/2:\"end\"===u?D-b:o(y,y+b,b,a,p,y+D,y+D+E,E),T=Math.max(0,T+M),B=Math.max(0,B+y);else{T=\"start\"===f?k-r-g:\"end\"===f?k-s+W+V:\"nearest\"===f?o(r,s,n,g,W+V,k,k+v,v):k-(r+n/2)+V/2,B=\"start\"===u?D-d-a:\"center\"===u?D-(d+l/2)+F/2:\"end\"===u?D-i+p+F:o(d,i,l,a,p+F,D,D+E,E);const{scrollLeft:t,scrollTop:h}=e;T=0===X?0:Math.max(0,Math.min(h+T/X,e.scrollHeight-n/X+V)),B=0===S?0:Math.max(0,Math.min(t+B/S,e.scrollWidth-l/S+F)),k+=h-T,D+=t-B}L.push({el:e,top:T,left:B})}return L};//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jb21wdXRlLXNjcm9sbC1pbnRvLXZpZXcvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMEhBQTBILCtEQUErRCxpQ0FBaUMsZ0RBQWdELGFBQWEsOERBQThELElBQUksZ0RBQWdELFNBQVMsYUFBYSxLQUFLLHdFQUF3RSxLQUFLLFNBQVMseUdBQXlHLHdCQUF3Qiw0Q0FBNEMsV0FBVyxZQUFZLHlDQUF5QyxNQUFNLHNFQUFzRSxxQ0FBcUMsK0NBQStDLGlFQUFpRSxRQUFRLEtBQUssV0FBVyxFQUFFLGlCQUFpQixVQUFVLE1BQU0sMkZBQTJGLHlKQUF5SixvQkFBb0IsU0FBUywrQ0FBK0MsNEJBQTRCLDhCQUE4QixNQUFNLG1DQUFtQyxPQUFPLGlLQUFpSyxLQUFLLHdHQUF3RyxXQUFXLFlBQVksV0FBVyxLQUFLLGNBQWMsK0NBQStDLDJCQUEyQiw0RUFBNEUsa0tBQWtLLFlBQVksNE9BQTRPLHNNQUFzTSxLQUFLLGlMQUFpTCxNQUFNLHlCQUF5QixHQUFHLG1JQUFtSSxRQUFRLGtCQUFrQixFQUFFLFVBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jb21wdXRlLXNjcm9sbC1pbnRvLXZpZXcvZGlzdC9pbmRleC5qcz9hZGIyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHQ9dD0+XCJvYmplY3RcIj09dHlwZW9mIHQmJm51bGwhPXQmJjE9PT10Lm5vZGVUeXBlLGU9KHQsZSk9PighZXx8XCJoaWRkZW5cIiE9PXQpJiYoXCJ2aXNpYmxlXCIhPT10JiZcImNsaXBcIiE9PXQpLG49KHQsbik9PntpZih0LmNsaWVudEhlaWdodDx0LnNjcm9sbEhlaWdodHx8dC5jbGllbnRXaWR0aDx0LnNjcm9sbFdpZHRoKXtjb25zdCBvPWdldENvbXB1dGVkU3R5bGUodCxudWxsKTtyZXR1cm4gZShvLm92ZXJmbG93WSxuKXx8ZShvLm92ZXJmbG93WCxuKXx8KHQ9Pntjb25zdCBlPSh0PT57aWYoIXQub3duZXJEb2N1bWVudHx8IXQub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldylyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIHQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5mcmFtZUVsZW1lbnR9Y2F0Y2godCl7cmV0dXJuIG51bGx9fSkodCk7cmV0dXJuISFlJiYoZS5jbGllbnRIZWlnaHQ8dC5zY3JvbGxIZWlnaHR8fGUuY2xpZW50V2lkdGg8dC5zY3JvbGxXaWR0aCl9KSh0KX1yZXR1cm4hMX0sbz0odCxlLG4sbyxsLHIsaSxzKT0+cjx0JiZpPmV8fHI+dCYmaTxlPzA6cjw9dCYmczw9bnx8aT49ZSYmcz49bj9yLXQtbzppPmUmJnM8bnx8cjx0JiZzPm4/aS1lK2w6MCxsPXQ9Pntjb25zdCBlPXQucGFyZW50RWxlbWVudDtyZXR1cm4gbnVsbD09ZT90LmdldFJvb3ROb2RlKCkuaG9zdHx8bnVsbDplfSxyPShlLHIpPT57dmFyIGkscyxkLGg7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIGRvY3VtZW50KXJldHVybltdO2NvbnN0e3Njcm9sbE1vZGU6YyxibG9jazpmLGlubGluZTp1LGJvdW5kYXJ5OmEsc2tpcE92ZXJmbG93SGlkZGVuRWxlbWVudHM6Z309cixwPVwiZnVuY3Rpb25cIj09dHlwZW9mIGE/YTp0PT50IT09YTtpZighdChlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCB0YXJnZXRcIik7Y29uc3QgbT1kb2N1bWVudC5zY3JvbGxpbmdFbGVtZW50fHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdz1bXTtsZXQgVz1lO2Zvcig7dChXKSYmcChXKTspe2lmKFc9bChXKSxXPT09bSl7dy5wdXNoKFcpO2JyZWFrfW51bGwhPVcmJlc9PT1kb2N1bWVudC5ib2R5JiZuKFcpJiYhbihkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpfHxudWxsIT1XJiZuKFcsZykmJncucHVzaChXKX1jb25zdCBiPW51bGwhPShzPW51bGw9PShpPXdpbmRvdy52aXN1YWxWaWV3cG9ydCk/dm9pZCAwOmkud2lkdGgpP3M6aW5uZXJXaWR0aCxIPW51bGwhPShoPW51bGw9PShkPXdpbmRvdy52aXN1YWxWaWV3cG9ydCk/dm9pZCAwOmQuaGVpZ2h0KT9oOmlubmVySGVpZ2h0LHtzY3JvbGxYOnksc2Nyb2xsWTpNfT13aW5kb3cse2hlaWdodDp2LHdpZHRoOkUsdG9wOngscmlnaHQ6Qyxib3R0b206SSxsZWZ0OlJ9PWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkse3RvcDpULHJpZ2h0OkIsYm90dG9tOkYsbGVmdDpWfT0odD0+e2NvbnN0IGU9d2luZG93LmdldENvbXB1dGVkU3R5bGUodCk7cmV0dXJue3RvcDpwYXJzZUZsb2F0KGUuc2Nyb2xsTWFyZ2luVG9wKXx8MCxyaWdodDpwYXJzZUZsb2F0KGUuc2Nyb2xsTWFyZ2luUmlnaHQpfHwwLGJvdHRvbTpwYXJzZUZsb2F0KGUuc2Nyb2xsTWFyZ2luQm90dG9tKXx8MCxsZWZ0OnBhcnNlRmxvYXQoZS5zY3JvbGxNYXJnaW5MZWZ0KXx8MH19KShlKTtsZXQgaz1cInN0YXJ0XCI9PT1mfHxcIm5lYXJlc3RcIj09PWY/eC1UOlwiZW5kXCI9PT1mP0krRjp4K3YvMi1UK0YsRD1cImNlbnRlclwiPT09dT9SK0UvMi1WK0I6XCJlbmRcIj09PXU/QytCOlItVjtjb25zdCBMPVtdO2ZvcihsZXQgdD0wO3Q8dy5sZW5ndGg7dCsrKXtjb25zdCBlPXdbdF0se2hlaWdodDpuLHdpZHRoOmwsdG9wOnIscmlnaHQ6aSxib3R0b206cyxsZWZ0OmR9PWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7aWYoXCJpZi1uZWVkZWRcIj09PWMmJng+PTAmJlI+PTAmJkk8PUgmJkM8PWImJng+PXImJkk8PXMmJlI+PWQmJkM8PWkpcmV0dXJuIEw7Y29uc3QgaD1nZXRDb21wdXRlZFN0eWxlKGUpLGE9cGFyc2VJbnQoaC5ib3JkZXJMZWZ0V2lkdGgsMTApLGc9cGFyc2VJbnQoaC5ib3JkZXJUb3BXaWR0aCwxMCkscD1wYXJzZUludChoLmJvcmRlclJpZ2h0V2lkdGgsMTApLFc9cGFyc2VJbnQoaC5ib3JkZXJCb3R0b21XaWR0aCwxMCk7bGV0IFQ9MCxCPTA7Y29uc3QgRj1cIm9mZnNldFdpZHRoXCJpbiBlP2Uub2Zmc2V0V2lkdGgtZS5jbGllbnRXaWR0aC1hLXA6MCxWPVwib2Zmc2V0SGVpZ2h0XCJpbiBlP2Uub2Zmc2V0SGVpZ2h0LWUuY2xpZW50SGVpZ2h0LWctVzowLFM9XCJvZmZzZXRXaWR0aFwiaW4gZT8wPT09ZS5vZmZzZXRXaWR0aD8wOmwvZS5vZmZzZXRXaWR0aDowLFg9XCJvZmZzZXRIZWlnaHRcImluIGU/MD09PWUub2Zmc2V0SGVpZ2h0PzA6bi9lLm9mZnNldEhlaWdodDowO2lmKG09PT1lKVQ9XCJzdGFydFwiPT09Zj9rOlwiZW5kXCI9PT1mP2stSDpcIm5lYXJlc3RcIj09PWY/byhNLE0rSCxILGcsVyxNK2ssTStrK3Ysdik6ay1ILzIsQj1cInN0YXJ0XCI9PT11P0Q6XCJjZW50ZXJcIj09PXU/RC1iLzI6XCJlbmRcIj09PXU/RC1iOm8oeSx5K2IsYixhLHAseStELHkrRCtFLEUpLFQ9TWF0aC5tYXgoMCxUK00pLEI9TWF0aC5tYXgoMCxCK3kpO2Vsc2V7VD1cInN0YXJ0XCI9PT1mP2stci1nOlwiZW5kXCI9PT1mP2stcytXK1Y6XCJuZWFyZXN0XCI9PT1mP28ocixzLG4sZyxXK1YsayxrK3Ysdik6ay0ocituLzIpK1YvMixCPVwic3RhcnRcIj09PXU/RC1kLWE6XCJjZW50ZXJcIj09PXU/RC0oZCtsLzIpK0YvMjpcImVuZFwiPT09dT9ELWkrcCtGOm8oZCxpLGwsYSxwK0YsRCxEK0UsRSk7Y29uc3R7c2Nyb2xsTGVmdDp0LHNjcm9sbFRvcDpofT1lO1Q9MD09PVg/MDpNYXRoLm1heCgwLE1hdGgubWluKGgrVC9YLGUuc2Nyb2xsSGVpZ2h0LW4vWCtWKSksQj0wPT09Uz8wOk1hdGgubWF4KDAsTWF0aC5taW4odCtCL1MsZS5zY3JvbGxXaWR0aC1sL1MrRikpLGsrPWgtVCxEKz10LUJ9TC5wdXNoKHtlbDplLHRvcDpULGxlZnQ6Qn0pfXJldHVybiBMfTtleHBvcnR7ciBhcyBjb21wdXRlfTsvLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/compute-scroll-into-view/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/controller.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/controller.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   O: function() { return /* binding */ l; },\n/* harmony export */   c: function() { return /* binding */ L; },\n/* harmony export */   v: function() { return /* binding */ a; }\n/* harmony export */ });\n/* harmony import */ var _create_data_attribute_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-data-attribute.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js\");\n/* harmony import */ var _vercel_stega__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vercel/stega */ \"(app-pages-browser)/./node_modules/@vercel/stega/dist/index.mjs\");\nlet o;const r=new Uint8Array(16);function s(){if(!o&&(o=typeof crypto<\"u\"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!o))throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");return o(r)}const i=[];for(let e=0;e<256;++e)i.push((e+256).toString(16).slice(1));var c={randomUUID:typeof crypto<\"u\"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function a(e,t,n){if(c.randomUUID&&!t&&!e)return c.randomUUID();const o=(e=e||{}).random||(e.rng||s)();return o[6]=15&o[6]|64,o[8]=63&o[8]|128,function(e,t=0){return i[e[t+0]]+i[e[t+1]]+i[e[t+2]]+i[e[t+3]]+\"-\"+i[e[t+4]]+i[e[t+5]]+\"-\"+i[e[t+6]]+i[e[t+7]]+\"-\"+i[e[t+8]]+i[e[t+9]]+\"-\"+i[e[t+10]]+i[e[t+11]]+i[e[t+12]]+i[e[t+13]]+i[e[t+14]]+i[e[t+15]]}(o)}const l=\"sanity-visual-editing\";function u(e){const{display:t}=window.getComputedStyle(e);if(\"inline\"!==t)return e;const n=e.parentElement;return n?u(n):null}function d(e,o=!1){return r=e,_vercel_stega__WEBPACK_IMPORTED_MODULE_0__.VERCEL_STEGA_REGEX.lastIndex=0,_vercel_stega__WEBPACK_IMPORTED_MODULE_0__.VERCEL_STEGA_REGEX.test(r)?function(e,t=!1){var o;try{const r=(0,_vercel_stega__WEBPACK_IMPORTED_MODULE_0__.vercelStegaDecode)(e);return r&&\"sanity.io\"===r.origin?(t&&(r.href=null==(o=r.href)?void 0:o.replace(\".alt\",\"\")),r):null}catch(t){return console.error(\"Failed to decode stega for string: \",e,\"with the original error: \",t),null}}(e,o):null;var r}const m=e=>e.nodeType===Node.ELEMENT_NODE,f=e=>\"IMG\"===e.tagName,v=e=>\"TIME\"===e.tagName,p=e=>\"SVG\"===e.tagName.toUpperCase();function y(e){return\"path\"in e}function g(e,t){let n=e.split(\".\"),o=t.split(\".\");const r=Math.min(n.length,o.length);return n=n.slice(0,r).reverse(),o=o.slice(0,r).reverse(),n.reduce(((e,t,n)=>t===o[n]?[...e,t]:[]),[]).reverse().join(\".\")}function h(e){if(!e.length||!e.map((e=>y(e))).every(((e,t,n)=>e===n[0])))return;if(!y(e[0]))return e[0];const t=e.filter(y);let n=e[0];const o=[\"projectId\",\"dataset\",\"id\",\"baseUrl\",\"workspace\",\"tool\"];for(let e=1;e<t.length;e++){const r=t[e];if(o.some((e=>r[e]!==(null==n?void 0:n[e])))){n=void 0;break}n.path=g(n.path,r.path)}return n}function E(t){var n,o,r;const s=[];function i(t,n){const o=(0,_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_1__.N)(n);if(!o)return;const r=u(t);r&&s.push({elements:{element:t,measureElement:r},sanity:o})}if(t)for(const e of t.childNodes){const{nodeType:t,parentElement:c,textContent:a}=e;if(m(e)&&void 0!==(null==(n=e.dataset)?void 0:n.sanityEditTarget)){const t=E(e).map((({sanity:e})=>e));if(!t.map((e=>y(e))).every(((e,t,n)=>e===n[0])))continue;const n=h(t);n&&s.push({elements:{element:e,measureElement:e},sanity:n})}else if(t===Node.TEXT_NODE&&c&&a){const e=d(a);if(!e)continue;i(c,e)}else if(m(e)){if(\"SCRIPT\"===e.tagName||e.id===l)continue;if(null!=(o=e.dataset)&&o.sanity)i(e,e.dataset.sanity);else if(null!=(r=e.dataset)&&r.sanityEditInfo)i(e,e.dataset.sanityEditInfo);else{if(f(e)){const t=d(e.alt,!0);if(!t)continue;i(e,t);continue}if(v(e)){const t=d(e.dateTime,!0);if(!t)continue;i(e,t)}else if(p(e)){if(!e.ariaLabel)continue;const t=d(e.ariaLabel,!0);if(!t)continue;i(e,t)}}s.push(...E(e))}}return s}function w(e){const t=e.getBoundingClientRect();return{x:t.x+scrollX,y:t.y+scrollY,w:t.width,h:t.height}}const b=e=>e instanceof HTMLElement||e instanceof SVGElement;function L({handler:e,overlayElement:t,preventDefault:n}){let o=!1;const r=new Map,s=new WeakMap,i=new Set,c=new WeakMap;let l,u,d,m=[];const f=()=>m[m.length-1];function v(e,t){e.removeEventListener(\"click\",t.click,{capture:!0}),e.removeEventListener(\"mousemove\",t.mousemove,{capture:!0}),e.removeEventListener(\"mousedown\",t.mousedown,{capture:!0}),e.removeEventListener(\"mouseenter\",t.mouseenter),e.removeEventListener(\"mouseleave\",t.mouseleave)}function p({id:t,elements:n,handlers:o,sanity:r}){const{element:s,measureElement:i}=n;(function(e,t){e.addEventListener(\"click\",t.click,{capture:!0}),e.addEventListener(\"mousemove\",t.mousemove,{once:!0,capture:!0}),e.addEventListener(\"mousedown\",t.mousedown,{capture:!0})})(s,o),l.observe(i),e({type:\"element/activate\",id:t,rect:w(s),sanity:r})}function y({id:t,elements:n,handlers:o}){const{element:r,measureElement:s}=n;v(r,o),l.unobserve(s),m=m.filter((e=>e!==r)),e({type:\"element/deactivate\",id:t})}function g({elements:o,sanity:l}){const{element:d,measureElement:v}=o,p={click(t){const o=t.target;d===f()&&d.contains(o)&&(n&&(t.preventDefault(),t.stopPropagation()),e({type:\"element/click\",id:y,sanity:l}))},mousedown(e){e.preventDefault()},mousemove(e){p.mouseenter(e);const t=e.currentTarget;t&&(t.addEventListener(\"mouseenter\",p.mouseenter),t.addEventListener(\"mouseleave\",p.mouseleave))},mouseenter(){document.querySelector(\"vercel-live-feedback\")&&d.closest(\"[data-vercel-edit-info]\")||d.closest(\"[data-vercel-edit-target]\")||(m.push(d),e({type:\"element/mouseenter\",id:y,rect:w(d)}))},mouseleave(n){function o(){m.pop();const t=f();if(e({type:\"element/mouseleave\",id:y}),t){const n=s.get(t);n&&e({type:\"element/mouseenter\",id:n.id,rect:w(t)})}}const{relatedTarget:r}=n;if(b(r)&&t.contains(r)){const e=()=>{o(),r.removeEventListener(\"mouseleave\",e)};r.addEventListener(\"mouseleave\",e)}else o()}},y=a(),g={id:y,elements:o,sanity:l,handlers:p};i.add(d),c.set(v,d),r.set(y,d),s.set(d,g),null==u||u.observe(d),e({type:\"element/register\",id:y,rect:w(d),sanity:l})}function h(e){const t=E(e);for(const e of t)b(e.elements.element)&&!s.has(e.elements.element)&&g(e)}function L(t){const n=s.get(t);if(n){const{id:o,handlers:c}=n;v(t,c),l.unobserve(t),s.delete(t),i.delete(t),r.delete(o),e({type:\"element/unregister\",id:o})}}function I(e){if(e.filter((e=>{const n=e.target;return n!==t&&!t.contains(n)&&(b(n)&&(s.has(n)&&L(n),h({childNodes:[n]})),!0)})).length)for(const e of i)e.isConnected?k(e):L(e)}function k(t){const n=s.get(t);n&&e({type:\"element/updateRect\",id:n.id,rect:w(t)})}function U(e){for(const t of e){const e=t.target;if(b(e)){const t=c.get(e);if(!t)return;k(t)}}}function T(e){if(o)for(const t of e){const{target:e}=t,n=b(e)&&s.get(e);n&&(t.isIntersecting?p(n):y(n))}}function D(){m=[],e({type:\"overlay/blur\"})}function N(){for(const e of i)k(e)}function M(e){const{target:t}=e;if(t!==window.document&&b(t))for(const e of i)t.contains(e)&&k(e)}function S(){o||(u=new IntersectionObserver(T,{threshold:.3}),i.forEach((e=>u.observe(e))),e({type:\"overlay/activate\"}),o=!0)}function R(){o&&(null==u||u.disconnect(),i.forEach((e=>{const t=s.get(e);t&&y(t)})),e({type:\"overlay/deactivate\"}),o=!1)}return window.document.fonts.ready.then((()=>{for(const e of i)k(e)})),window.addEventListener(\"click\",D),window.addEventListener(\"resize\",N),window.addEventListener(\"scroll\",M,{capture:!0,passive:!0}),l=new ResizeObserver(U),d=new MutationObserver(I),d.observe(document.body,{attributes:!0,characterData:!0,childList:!0,subtree:!0}),h(document.body),S(),{activate:S,deactivate:R,destroy:function(){window.removeEventListener(\"click\",D),window.removeEventListener(\"resize\",N),window.removeEventListener(\"scroll\",M),d.disconnect(),l.disconnect(),i.forEach((e=>{L(e)})),r.clear(),i.clear(),m=[],R()}}}//# sourceMappingURL=controller.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/controller.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   N: function() { return /* binding */ $; },\n/* harmony export */   b: function() { return /* binding */ h; },\n/* harmony export */   c: function() { return /* binding */ K; },\n/* harmony export */   j: function() { return /* binding */ m; },\n/* harmony export */   o: function() { return /* binding */ x; },\n/* harmony export */   p: function() { return /* binding */ I; }\n/* harmony export */ });\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sanity/client/csm */ \"(app-pages-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/valibot/dist/index.js\");\nfunction d(t){return null!==t&&Array.isArray(t)}function h(t){let e=\"\";for(const r of t)\"string\"!=typeof r?\"number\"!=typeof r?d(r)?(e&&(e+=\":\"),e+=`${r.join(\",\")}}`):r._key&&(e&&(e+=\":\"),e+=`${r._key}`):(e&&(e+=\":\"),e+=`${r}`):(e&&(e+=\".\"),e+=r);return e}const l=/^([A-Za-z]+):([0-9]+)$/,y=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,b=/^([A-Za-z]+):([a-z0-9]+)$/;const m=\"drafts.\",k=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.pipe)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(),(0,valibot__WEBPACK_IMPORTED_MODULE_0__.minLength)(1)),w=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)(k),g=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.object)({baseUrl:k,dataset:w,id:k,path:k,projectId:w,tool:w,type:w,workspace:w,isDraft:(0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)())}),U=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.object)({origin:k,href:k,data:(0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.record)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(),(0,valibot__WEBPACK_IMPORTED_MODULE_0__.unknown)()))});function j(t){return (0,valibot__WEBPACK_IMPORTED_MODULE_0__.is)(g,t)}function A(t){const r=t.split(\";\").reduce(((t,r)=>{const[o,n]=r.split(\"=\");if(!o||r.includes(\"=\")&&!n)return t;switch(o){case\"id\":t.id=n;break;case\"type\":t.type=n;break;case\"path\":t.path=_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.toString(function(t){const e=[];for(const r of t.split(\".\")){const t=l.exec(r);if(t){e.push(t[1],Number(t[2]));continue}const o=y.exec(r);if(o){e.push(o[1],[Number(o[2]),Number(o[3])]);continue}const n=b.exec(r);n?e.push(n[1],{_key:n[2]}):e.push(r)}return e}(n));break;case\"base\":t.baseUrl=decodeURIComponent(n);break;case\"tool\":t.tool=n;break;case\"workspace\":t.workspace=n;break;case\"projectId\":t.projectId=n;break;case\"dataset\":t.dataset=n;break;case\"isDraft\":t.isDraft=\"\"}return t}),{});if(j(r))return r}function S(t){const e=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.safeParse)(g,t);if(e.success)return e.output;const r=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.safeParse)(U,t);if(r.success)try{const t=new URL(r.output.href,typeof document>\"u\"?\"https://example.com\":location.origin);return t.searchParams.size>0?(0,valibot__WEBPACK_IMPORTED_MODULE_0__.parse)(g,Object.fromEntries(t.searchParams.entries())):r.output}catch(t){return console.error(\"Failed to parse sanity node\",t),r.output}}function $(t){if(\"object\"==typeof t&&null!==t)return S(t);try{return S(JSON.parse(t))}catch{return A(t)}}function x(r){function o(t){return t?\"string\"==typeof t?_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.fromString(t):t:[]}function n(r){if(!r.id)throw new Error(\"`id` is required to create a data attribute\");if(!r.type)throw new Error(\"`type` is required to create a data attribute\");if(!r.path||!r.path.length)throw new Error(\"`path` is required to create a data attribute\");return function(r){const{id:o,path:n,baseUrl:a,tool:i,workspace:s,type:c}=r;return j(r)?[[\"id\",(0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.getPublishedId)(o)],[\"type\",c],[\"path\",h(_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.fromString(n))],[\"base\",encodeURIComponent(a)],[\"workspace\",s],[\"tool\",i],[\"isDraft\",o.startsWith(m)]].filter((([,t])=>!!t)).map((t=>{const[e,r]=t;return!0===r?e:t.join(\"=\")})).join(\";\"):void 0}({baseUrl:r.baseUrl||\"/\",workspace:r.workspace,tool:r.tool,type:r.type,id:r.id,path:\"string\"==typeof r.path?r.path:_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.toString(r.path)})}const a=t=>n({...r,path:[...o(r.path),...o(t)]});return a.toString=function(){return n(r)},a.combine=function(t){return x({...r,...t})},a.scope=function(t){return x({...r,path:[...o(r.path),...o(t)]})},a}const z={alt:\"altKey\",ctrl:\"ctrlKey\",mod:typeof window<\"u\"&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform)?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function I(t,e){return t.every((t=>z[t]?e[z[t]]:e.key===t.toUpperCase()))}function K(t){return\"Alt\"===t.key}//# sourceMappingURL=create-data-attribute.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9kaXN0L19jaHVua3MtZXMvY3JlYXRlLWRhdGEtYXR0cmlidXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW1OLGNBQWMsa0NBQWtDLGNBQWMsU0FBUywrRUFBK0UsYUFBYSw4QkFBOEIsT0FBTyxzQkFBc0IsRUFBRSxzQkFBc0IsU0FBUyxtR0FBbUcsb0JBQW9CLDZDQUFDLENBQUMsK0NBQUMsR0FBRyxrREFBQyxPQUFPLGlEQUFDLE1BQU0sK0NBQUMsRUFBRSw4RUFBOEUsaURBQUMsQ0FBQywrQ0FBQyxJQUFJLElBQUksK0NBQUMsRUFBRSxxQkFBcUIsaURBQUMsQ0FBQywrQ0FBQyxDQUFDLCtDQUFDLEdBQUcsZ0RBQUMsS0FBSyxFQUFFLGNBQWMsT0FBTywyQ0FBQyxNQUFNLGNBQWMsa0JBQWtCLG1CQUFtQix3QkFBd0Isb0NBQW9DLFVBQVUsZ0JBQWdCLE1BQU0sb0JBQW9CLE1BQU0sa0JBQWtCLDBEQUFDLHNCQUFzQixXQUFXLDZCQUE2QixrQkFBa0IsTUFBTSwwQkFBMEIsU0FBUyxrQkFBa0IsTUFBTSx5Q0FBeUMsU0FBUyxrQkFBa0IsZUFBZSxVQUFVLFlBQVksU0FBUyxLQUFLLE1BQU0sMkNBQTJDLE1BQU0sb0JBQW9CLE1BQU0sOEJBQThCLE1BQU0sOEJBQThCLE1BQU0sMEJBQTBCLE1BQU0sMkJBQTJCLFNBQVMsSUFBSSxFQUFFLGlCQUFpQixjQUFjLFFBQVEsa0RBQUMsTUFBTSw2QkFBNkIsUUFBUSxrREFBQyxNQUFNLGlCQUFpQix5RkFBeUYsNkJBQTZCLDhDQUFDLDBEQUEwRCxTQUFTLGdFQUFnRSxjQUFjLDRDQUE0QyxJQUFJLHdCQUF3QixNQUFNLGFBQWEsY0FBYyxjQUFjLDRCQUE0QiwwREFBQyxvQkFBb0IsY0FBYyx3RUFBd0UsNEVBQTRFLDRGQUE0RixtQkFBbUIsTUFBTSxnREFBZ0QsR0FBRyxtQkFBbUIsa0VBQUMsMEJBQTBCLDBEQUFDLHVJQUF1SSxhQUFhLDJCQUEyQixVQUFVLFVBQVUsRUFBRSxpSEFBaUgsMERBQUMsa0JBQWtCLEVBQUUsY0FBYyxpQ0FBaUMsRUFBRSw2QkFBNkIsWUFBWSx1QkFBdUIsVUFBVSxVQUFVLEVBQUUscUJBQXFCLFVBQVUsaUNBQWlDLEVBQUUsR0FBRyxTQUFTLGdKQUFnSixnQkFBZ0IsMERBQTBELGNBQWMsb0JBQXNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9kaXN0L19jaHVua3MtZXMvY3JlYXRlLWRhdGEtYXR0cmlidXRlLmpzPzNiNTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e2dldFB1Ymxpc2hlZElkIGFzIHQsc3R1ZGlvUGF0aCBhcyBlfWZyb21cIkBzYW5pdHkvY2xpZW50L2NzbVwiO2ltcG9ydHtwaXBlIGFzIHIsc3RyaW5nIGFzIG8sbWluTGVuZ3RoIGFzIG4sb3B0aW9uYWwgYXMgYSxvYmplY3QgYXMgaSxyZWNvcmQgYXMgcyx1bmtub3duIGFzIGMsaXMgYXMgdSxzYWZlUGFyc2UgYXMgcCxwYXJzZSBhcyBmfWZyb21cInZhbGlib3RcIjtmdW5jdGlvbiBkKHQpe3JldHVybiBudWxsIT09dCYmQXJyYXkuaXNBcnJheSh0KX1mdW5jdGlvbiBoKHQpe2xldCBlPVwiXCI7Zm9yKGNvbnN0IHIgb2YgdClcInN0cmluZ1wiIT10eXBlb2Ygcj9cIm51bWJlclwiIT10eXBlb2Ygcj9kKHIpPyhlJiYoZSs9XCI6XCIpLGUrPWAke3Iuam9pbihcIixcIil9fWApOnIuX2tleSYmKGUmJihlKz1cIjpcIiksZSs9YCR7ci5fa2V5fWApOihlJiYoZSs9XCI6XCIpLGUrPWAke3J9YCk6KGUmJihlKz1cIi5cIiksZSs9cik7cmV0dXJuIGV9Y29uc3QgbD0vXihbQS1aYS16XSspOihbMC05XSspJC8seT0vXihbQS1aYS16XSspOihbMC05XSspLChbMC05XSspJC8sYj0vXihbQS1aYS16XSspOihbYS16MC05XSspJC87Y29uc3QgbT1cImRyYWZ0cy5cIixrPXIobygpLG4oMSkpLHc9YShrKSxnPWkoe2Jhc2VVcmw6ayxkYXRhc2V0OncsaWQ6ayxwYXRoOmsscHJvamVjdElkOncsdG9vbDp3LHR5cGU6dyx3b3Jrc3BhY2U6dyxpc0RyYWZ0OmEobygpKX0pLFU9aSh7b3JpZ2luOmssaHJlZjprLGRhdGE6YShzKG8oKSxjKCkpKX0pO2Z1bmN0aW9uIGoodCl7cmV0dXJuIHUoZyx0KX1mdW5jdGlvbiBBKHQpe2NvbnN0IHI9dC5zcGxpdChcIjtcIikucmVkdWNlKCgodCxyKT0+e2NvbnN0W28sbl09ci5zcGxpdChcIj1cIik7aWYoIW98fHIuaW5jbHVkZXMoXCI9XCIpJiYhbilyZXR1cm4gdDtzd2l0Y2gobyl7Y2FzZVwiaWRcIjp0LmlkPW47YnJlYWs7Y2FzZVwidHlwZVwiOnQudHlwZT1uO2JyZWFrO2Nhc2VcInBhdGhcIjp0LnBhdGg9ZS50b1N0cmluZyhmdW5jdGlvbih0KXtjb25zdCBlPVtdO2Zvcihjb25zdCByIG9mIHQuc3BsaXQoXCIuXCIpKXtjb25zdCB0PWwuZXhlYyhyKTtpZih0KXtlLnB1c2godFsxXSxOdW1iZXIodFsyXSkpO2NvbnRpbnVlfWNvbnN0IG89eS5leGVjKHIpO2lmKG8pe2UucHVzaChvWzFdLFtOdW1iZXIob1syXSksTnVtYmVyKG9bM10pXSk7Y29udGludWV9Y29uc3Qgbj1iLmV4ZWMocik7bj9lLnB1c2goblsxXSx7X2tleTpuWzJdfSk6ZS5wdXNoKHIpfXJldHVybiBlfShuKSk7YnJlYWs7Y2FzZVwiYmFzZVwiOnQuYmFzZVVybD1kZWNvZGVVUklDb21wb25lbnQobik7YnJlYWs7Y2FzZVwidG9vbFwiOnQudG9vbD1uO2JyZWFrO2Nhc2VcIndvcmtzcGFjZVwiOnQud29ya3NwYWNlPW47YnJlYWs7Y2FzZVwicHJvamVjdElkXCI6dC5wcm9qZWN0SWQ9bjticmVhaztjYXNlXCJkYXRhc2V0XCI6dC5kYXRhc2V0PW47YnJlYWs7Y2FzZVwiaXNEcmFmdFwiOnQuaXNEcmFmdD1cIlwifXJldHVybiB0fSkse30pO2lmKGoocikpcmV0dXJuIHJ9ZnVuY3Rpb24gUyh0KXtjb25zdCBlPXAoZyx0KTtpZihlLnN1Y2Nlc3MpcmV0dXJuIGUub3V0cHV0O2NvbnN0IHI9cChVLHQpO2lmKHIuc3VjY2Vzcyl0cnl7Y29uc3QgdD1uZXcgVVJMKHIub3V0cHV0LmhyZWYsdHlwZW9mIGRvY3VtZW50PlwidVwiP1wiaHR0cHM6Ly9leGFtcGxlLmNvbVwiOmxvY2F0aW9uLm9yaWdpbik7cmV0dXJuIHQuc2VhcmNoUGFyYW1zLnNpemU+MD9mKGcsT2JqZWN0LmZyb21FbnRyaWVzKHQuc2VhcmNoUGFyYW1zLmVudHJpZXMoKSkpOnIub3V0cHV0fWNhdGNoKHQpe3JldHVybiBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIHBhcnNlIHNhbml0eSBub2RlXCIsdCksci5vdXRwdXR9fWZ1bmN0aW9uICQodCl7aWYoXCJvYmplY3RcIj09dHlwZW9mIHQmJm51bGwhPT10KXJldHVybiBTKHQpO3RyeXtyZXR1cm4gUyhKU09OLnBhcnNlKHQpKX1jYXRjaHtyZXR1cm4gQSh0KX19ZnVuY3Rpb24geChyKXtmdW5jdGlvbiBvKHQpe3JldHVybiB0P1wic3RyaW5nXCI9PXR5cGVvZiB0P2UuZnJvbVN0cmluZyh0KTp0OltdfWZ1bmN0aW9uIG4ocil7aWYoIXIuaWQpdGhyb3cgbmV3IEVycm9yKFwiYGlkYCBpcyByZXF1aXJlZCB0byBjcmVhdGUgYSBkYXRhIGF0dHJpYnV0ZVwiKTtpZighci50eXBlKXRocm93IG5ldyBFcnJvcihcImB0eXBlYCBpcyByZXF1aXJlZCB0byBjcmVhdGUgYSBkYXRhIGF0dHJpYnV0ZVwiKTtpZighci5wYXRofHwhci5wYXRoLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJgcGF0aGAgaXMgcmVxdWlyZWQgdG8gY3JlYXRlIGEgZGF0YSBhdHRyaWJ1dGVcIik7cmV0dXJuIGZ1bmN0aW9uKHIpe2NvbnN0e2lkOm8scGF0aDpuLGJhc2VVcmw6YSx0b29sOmksd29ya3NwYWNlOnMsdHlwZTpjfT1yO3JldHVybiBqKHIpP1tbXCJpZFwiLHQobyldLFtcInR5cGVcIixjXSxbXCJwYXRoXCIsaChlLmZyb21TdHJpbmcobikpXSxbXCJiYXNlXCIsZW5jb2RlVVJJQ29tcG9uZW50KGEpXSxbXCJ3b3Jrc3BhY2VcIixzXSxbXCJ0b29sXCIsaV0sW1wiaXNEcmFmdFwiLG8uc3RhcnRzV2l0aChtKV1dLmZpbHRlcigoKFssdF0pPT4hIXQpKS5tYXAoKHQ9Pntjb25zdFtlLHJdPXQ7cmV0dXJuITA9PT1yP2U6dC5qb2luKFwiPVwiKX0pKS5qb2luKFwiO1wiKTp2b2lkIDB9KHtiYXNlVXJsOnIuYmFzZVVybHx8XCIvXCIsd29ya3NwYWNlOnIud29ya3NwYWNlLHRvb2w6ci50b29sLHR5cGU6ci50eXBlLGlkOnIuaWQscGF0aDpcInN0cmluZ1wiPT10eXBlb2Ygci5wYXRoP3IucGF0aDplLnRvU3RyaW5nKHIucGF0aCl9KX1jb25zdCBhPXQ9Pm4oey4uLnIscGF0aDpbLi4ubyhyLnBhdGgpLC4uLm8odCldfSk7cmV0dXJuIGEudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gbihyKX0sYS5jb21iaW5lPWZ1bmN0aW9uKHQpe3JldHVybiB4KHsuLi5yLC4uLnR9KX0sYS5zY29wZT1mdW5jdGlvbih0KXtyZXR1cm4geCh7Li4ucixwYXRoOlsuLi5vKHIucGF0aCksLi4ubyh0KV19KX0sYX1jb25zdCB6PXthbHQ6XCJhbHRLZXlcIixjdHJsOlwiY3RybEtleVwiLG1vZDp0eXBlb2Ygd2luZG93PFwidVwiJiYvTWFjfGlQb2R8aVBob25lfGlQYWQvLnRlc3Qod2luZG93Lm5hdmlnYXRvci5wbGF0Zm9ybSk/XCJtZXRhS2V5XCI6XCJjdHJsS2V5XCIsc2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBJKHQsZSl7cmV0dXJuIHQuZXZlcnkoKHQ9PnpbdF0/ZVt6W3RdXTplLmtleT09PXQudG9VcHBlckNhc2UoKSkpfWZ1bmN0aW9uIEsodCl7cmV0dXJuXCJBbHRcIj09PXQua2V5fWV4cG9ydHskIGFzIE4saCBhcyBiLEsgYXMgYyxtIGFzIGoseCBhcyBvLEkgYXMgcH07Ly8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlLWRhdGEtYXR0cmlidXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/renderVisualEditing.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/renderVisualEditing.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderVisualEditing: function() { return /* binding */ d; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom/client */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/client.js\");\n/* harmony import */ var _controller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controller.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/controller.js\");\n/* harmony import */ var _react_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../react/index.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/react/index.js\");\nlet n=null,l=null,m=null;function d(d,{history:i,refresh:u,zIndex:c}){m&&clearTimeout(m),d.addEventListener(\"abort\",(()=>{m=setTimeout((()=>{l&&(l.unmount(),l=null),n&&(document.body.removeChild(n),n=null)}),1e3)})),n||(n=document.createElement(\"div\"),n.id=_controller_js__WEBPACK_IMPORTED_MODULE_2__.O,document.body.appendChild(n)),l||(l=(0,react_dom_client__WEBPACK_IMPORTED_MODULE_1__.createRoot)(n)),l.render((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_index_js__WEBPACK_IMPORTED_MODULE_3__.VisualEditing,{history:i,refresh:u,zIndex:c}))}//# sourceMappingURL=renderVisualEditing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9kaXN0L19jaHVua3MtZXMvcmVuZGVyVmlzdWFsRWRpdGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0Syx5QkFBeUIsY0FBYyw2QkFBNkIsRUFBRSxvREFBb0QsbUJBQW1CLGlFQUFpRSxPQUFPLDRDQUE0Qyw2Q0FBQyxxQ0FBcUMsNERBQUMsY0FBYyxzREFBQyxDQUFDLDBEQUFDLEVBQUUsNkJBQTZCLEdBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9kaXN0L19jaHVua3MtZXMvcmVuZGVyVmlzdWFsRWRpdGluZy5qcz9jMTYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtqc3ggYXMgZX1mcm9tXCJyZWFjdC9qc3gtcnVudGltZVwiO2ltcG9ydHtjcmVhdGVSb290IGFzIHJ9ZnJvbVwicmVhY3QtZG9tL2NsaWVudFwiO2ltcG9ydHtPIGFzIHR9ZnJvbVwiLi9jb250cm9sbGVyLmpzXCI7aW1wb3J0e1Zpc3VhbEVkaXRpbmcgYXMgb31mcm9tXCIuLi9yZWFjdC9pbmRleC5qc1wiO2xldCBuPW51bGwsbD1udWxsLG09bnVsbDtmdW5jdGlvbiBkKGQse2hpc3Rvcnk6aSxyZWZyZXNoOnUsekluZGV4OmN9KXttJiZjbGVhclRpbWVvdXQobSksZC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwoKCk9PnttPXNldFRpbWVvdXQoKCgpPT57bCYmKGwudW5tb3VudCgpLGw9bnVsbCksbiYmKGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobiksbj1udWxsKX0pLDFlMyl9KSksbnx8KG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxuLmlkPXQsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChuKSksbHx8KGw9cihuKSksbC5yZW5kZXIoZShvLHtoaXN0b3J5OmkscmVmcmVzaDp1LHpJbmRleDpjfSkpfWV4cG9ydHtkIGFzIHJlbmRlclZpc3VhbEVkaXRpbmd9Oy8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbmRlclZpc3VhbEVkaXRpbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/renderVisualEditing.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/react/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/react/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VisualEditing: function() { return /* binding */ Gb; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_chunks-es/create-data-attribute.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sanity/client/csm */ \"(app-pages-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! scroll-into-view-if-needed */ \"(app-pages-browser)/./node_modules/scroll-into-view-if-needed/dist/index.js\");\n/* harmony import */ var _chunks_es_controller_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_chunks-es/controller.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/controller.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/process/browser.js\");\nconst V=e=>{const{channel:t}=e;return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=()=>{null==t||t.send(\"visual-editing/meta\",{title:document.title})},n=new MutationObserver((([t])=>{\"TITLE\"===t.target.nodeName&&e()}));return n.observe(document.head,{subtree:!0,characterData:!0,childList:!0}),e(),()=>n.disconnect()}),[t]),null},B=[\"gray\",\"blue\",\"purple\",\"magenta\",\"red\",\"orange\",\"yellow\",\"green\",\"cyan\"],_=[\"50\",\"100\",\"200\",\"300\",\"400\",\"500\",\"600\",\"700\",\"800\",\"900\",\"950\"],q={black:{title:\"Black\",hex:\"#0d0e12\"},white:{title:\"White\",hex:\"#ffffff\"},...{gray:{50:{title:\"Gray 50\",hex:\"#f6f6f8\"},100:{title:\"Gray 100\",hex:\"#eeeef1\"},200:{title:\"Gray 200\",hex:\"#e3e4e8\"},300:{title:\"Gray 300\",hex:\"#bbbdc9\"},400:{title:\"Gray 400\",hex:\"#9499ad\"},500:{title:\"Gray 500\",hex:\"#727892\"},600:{title:\"Gray 600\",hex:\"#515870\"},700:{title:\"Gray 700\",hex:\"#383d51\"},800:{title:\"Gray 800\",hex:\"#252837\"},900:{title:\"Gray 900\",hex:\"#1b1d27\"},950:{title:\"Gray 950\",hex:\"#13141b\"}},blue:{50:{title:\"Blue 50\",hex:\"#f5f8ff\"},100:{title:\"Blue 100\",hex:\"#e5edff\"},200:{title:\"Blue 200\",hex:\"#dbe5ff\"},300:{title:\"Blue 300\",hex:\"#a8bfff\"},400:{title:\"Blue 400\",hex:\"#7595ff\"},500:{title:\"Blue 500\",hex:\"#556bfc\"},600:{title:\"Blue 600\",hex:\"#4043e7\"},700:{title:\"Blue 700\",hex:\"#2927aa\"},800:{title:\"Blue 800\",hex:\"#192457\"},900:{title:\"Blue 900\",hex:\"#161a41\"},950:{title:\"Blue 950\",hex:\"#101228\"}},purple:{50:{title:\"Purple 50\",hex:\"#f8f5ff\"},100:{title:\"Purple 100\",hex:\"#f1ebff\"},200:{title:\"Purple 200\",hex:\"#ece1fe\"},300:{title:\"Purple 300\",hex:\"#ccb1fc\"},400:{title:\"Purple 400\",hex:\"#b087f7\"},500:{title:\"Purple 500\",hex:\"#8f57ef\"},600:{title:\"Purple 600\",hex:\"#721fe5\"},700:{title:\"Purple 700\",hex:\"#4c1a9e\"},800:{title:\"Purple 800\",hex:\"#2f1862\"},900:{title:\"Purple 900\",hex:\"#23173f\"},950:{title:\"Purple 950\",hex:\"#181128\"}},magenta:{50:{title:\"Magenta 50\",hex:\"#fef6f9\"},100:{title:\"Magenta 100\",hex:\"#fde8ef\"},200:{title:\"Magenta 200\",hex:\"#fcdee9\"},300:{title:\"Magenta 300\",hex:\"#f7abc5\"},400:{title:\"Magenta 400\",hex:\"#f0709b\"},500:{title:\"Magenta 500\",hex:\"#e72767\"},600:{title:\"Magenta 600\",hex:\"#b11651\"},700:{title:\"Magenta 700\",hex:\"#7c1342\"},800:{title:\"Magenta 800\",hex:\"#4b1130\"},900:{title:\"Magenta 900\",hex:\"#341325\"},950:{title:\"Magenta 950\",hex:\"#1f0f14\"}},red:{50:{title:\"Red 50\",hex:\"#fff6f5\"},100:{title:\"Red 100\",hex:\"#ffe7e5\"},200:{title:\"Red 200\",hex:\"#ffdedc\"},300:{title:\"Red 300\",hex:\"#fdada5\"},400:{title:\"Red 400\",hex:\"#f77769\"},500:{title:\"Red 500\",hex:\"#ef4434\"},600:{title:\"Red 600\",hex:\"#cc2819\"},700:{title:\"Red 700\",hex:\"#8b2018\"},800:{title:\"Red 800\",hex:\"#4d1714\"},900:{title:\"Red 900\",hex:\"#321615\"},950:{title:\"Red 950\",hex:\"#1e1011\"}},orange:{50:{title:\"Orange 50\",hex:\"#fff7f0\"},100:{title:\"Orange 100\",hex:\"#ffeadb\"},200:{title:\"Orange 200\",hex:\"#ffddc7\"},300:{title:\"Orange 300\",hex:\"#ffb685\"},400:{title:\"Orange 400\",hex:\"#ff8e42\"},500:{title:\"Orange 500\",hex:\"#fa6400\"},600:{title:\"Orange 600\",hex:\"#b14802\"},700:{title:\"Orange 700\",hex:\"#7c3404\"},800:{title:\"Orange 800\",hex:\"#461e07\"},900:{title:\"Orange 900\",hex:\"#32160b\"},950:{title:\"Orange 950\",hex:\"#21120d\"}},yellow:{50:{title:\"Yellow 50\",hex:\"#fefae1\"},100:{title:\"Yellow 100\",hex:\"#fcf3bb\"},200:{title:\"Yellow 200\",hex:\"#f9e994\"},300:{title:\"Yellow 300\",hex:\"#f7d455\"},400:{title:\"Yellow 400\",hex:\"#f9bc15\"},500:{title:\"Yellow 500\",hex:\"#d28a04\"},600:{title:\"Yellow 600\",hex:\"#965908\"},700:{title:\"Yellow 700\",hex:\"#653a0b\"},800:{title:\"Yellow 800\",hex:\"#3b220c\"},900:{title:\"Yellow 900\",hex:\"#271a11\"},950:{title:\"Yellow 950\",hex:\"#181410\"}},green:{50:{title:\"Green 50\",hex:\"#e7fef5\"},100:{title:\"Green 100\",hex:\"#c5fce8\"},200:{title:\"Green 200\",hex:\"#a9f9dc\"},300:{title:\"Green 300\",hex:\"#59f3ba\"},400:{title:\"Green 400\",hex:\"#0ff0a1\"},500:{title:\"Green 500\",hex:\"#04b97a\"},600:{title:\"Green 600\",hex:\"#01794f\"},700:{title:\"Green 700\",hex:\"#015133\"},800:{title:\"Green 800\",hex:\"#023120\"},900:{title:\"Green 900\",hex:\"#06231a\"},950:{title:\"Green 950\",hex:\"#071715\"}},cyan:{50:{title:\"Cyan 50\",hex:\"#e7fefe\"},100:{title:\"Cyan 100\",hex:\"#c5fcfc\"},200:{title:\"Cyan 200\",hex:\"#96f8f8\"},300:{title:\"Cyan 300\",hex:\"#62efef\"},400:{title:\"Cyan 400\",hex:\"#18e2e2\"},500:{title:\"Cyan 500\",hex:\"#04b8be\"},600:{title:\"Cyan 600\",hex:\"#037782\"},700:{title:\"Cyan 700\",hex:\"#024950\"},800:{title:\"Cyan 800\",hex:\"#042f34\"},900:{title:\"Cyan 900\",hex:\"#072227\"},950:{title:\"Cyan 950\",hex:\"#0d181c\"}}}},N={_version:2,avatar:{sizes:[{distance:-4,size:19},{distance:-4,size:25},{distance:-8,size:33},{distance:-12,size:49}],focusRing:{offset:1,width:1}},button:{textWeight:\"medium\",border:{width:1},focusRing:{offset:-1,width:1}},card:{border:{width:1},focusRing:{offset:-1,width:1},shadow:{outline:.5}},container:[320,640,960,1280,1600,1920],media:[360,600,900,1200,1800,2400],layer:{dialog:{zOffset:600},popover:{zOffset:400},tooltip:{zOffset:200}},radius:[0,1,3,6,9,12,21],shadow:[null,{umbra:[0,0,0,0],penumbra:[0,0,0,0],ambient:[0,0,0,0]},{umbra:[0,3,5,-2],penumbra:[0,6,10,0],ambient:[0,1,18,1]},{umbra:[0,7,8,-4],penumbra:[0,12,17,2],ambient:[0,5,22,4]},{umbra:[0,9,11,-5],penumbra:[0,18,28,2],ambient:[0,7,34,6]},{umbra:[0,11,15,-7],penumbra:[0,24,38,3],ambient:[0,9,46,8]}],space:[0,4,8,12,20,32,52,84,136,220],input:{border:{width:1},checkbox:{size:17,focusRing:{offset:-1,width:1}},radio:{size:17,markSize:9,focusRing:{offset:-1,width:1}},switch:{width:25,height:17,padding:5,transitionDurationMs:150,transitionTimingFunction:\"ease-out\",focusRing:{offset:1,width:1}},select:{focusRing:{offset:-1,width:1}},text:{focusRing:{offset:-1,width:1}}},style:{button:{root:{transition:\"background-color 100ms,border-color 100ms,color 100ms\"}}}},z={code:{family:\"ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace\",weights:{regular:400,medium:500,semibold:600,bold:700},sizes:[{ascenderHeight:4,descenderHeight:4,fontSize:10,iconSize:17,lineHeight:15,letterSpacing:0},{ascenderHeight:5,descenderHeight:5,fontSize:13,iconSize:21,lineHeight:19,letterSpacing:0},{ascenderHeight:6,descenderHeight:6,fontSize:16,iconSize:25,lineHeight:23,letterSpacing:0},{ascenderHeight:7,descenderHeight:7,fontSize:19,iconSize:29,lineHeight:27,letterSpacing:0},{ascenderHeight:8,descenderHeight:8,fontSize:22,iconSize:33,lineHeight:31,letterSpacing:0}]},heading:{family:'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',weights:{regular:700,medium:800,semibold:900,bold:900},sizes:[{ascenderHeight:5,descenderHeight:5,fontSize:13,iconSize:17,lineHeight:19,letterSpacing:0},{ascenderHeight:6,descenderHeight:6,fontSize:16,iconSize:25,lineHeight:23,letterSpacing:0},{ascenderHeight:7,descenderHeight:7,fontSize:21,iconSize:33,lineHeight:29,letterSpacing:0},{ascenderHeight:8,descenderHeight:8,fontSize:27,iconSize:41,lineHeight:35,letterSpacing:0},{ascenderHeight:9.5,descenderHeight:8.5,fontSize:33,iconSize:49,lineHeight:41,letterSpacing:0},{ascenderHeight:10.5,descenderHeight:9.5,fontSize:38,iconSize:53,lineHeight:47,letterSpacing:0}]},label:{family:'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", system-ui, sans-serif',weights:{regular:600,medium:700,semibold:800,bold:900},sizes:[{ascenderHeight:2,descenderHeight:2,fontSize:8.1,iconSize:13,lineHeight:10,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:9.5,iconSize:15,lineHeight:11,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:10.8,iconSize:17,lineHeight:12,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:12.25,iconSize:19,lineHeight:13,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:13.6,iconSize:21,lineHeight:14,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:15,iconSize:23,lineHeight:15,letterSpacing:.5}]},text:{family:'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',weights:{regular:400,medium:500,semibold:600,bold:700},sizes:[{ascenderHeight:4,descenderHeight:4,fontSize:10,iconSize:17,lineHeight:15,letterSpacing:0},{ascenderHeight:5,descenderHeight:5,fontSize:13,iconSize:21,lineHeight:19,letterSpacing:0},{ascenderHeight:6,descenderHeight:6,fontSize:15,iconSize:25,lineHeight:23,letterSpacing:0},{ascenderHeight:7,descenderHeight:7,fontSize:18,iconSize:29,lineHeight:27,letterSpacing:0},{ascenderHeight:8,descenderHeight:8,fontSize:21,iconSize:33,lineHeight:31,letterSpacing:0}]}},j=new WeakMap;function I(e){var t,n,r;const o=j.get(e);if(o)return o;const i=U(e,e.card.enabled),a={_blend:e._blend||(e.dark?\"screen\":\"multiply\"),_dark:e.dark,accent:i.accent,avatar:i.avatar,backdrop:e.base.shadow.ambient,badge:i.badge,bg:e.base.bg,border:e.base.border,button:{default:H(e,e.button.default),ghost:H(e,e.button.ghost),bleed:H(e,e.button.bleed)},code:i.code,fg:e.base.fg,focusRing:e.base.focusRing,icon:i.muted.fg,input:{default:W(e.input.default),invalid:W(e.input.invalid)},kbd:i.kbd,link:i.link,muted:{...i.muted,bg:(null==(t=e.selectable)?void 0:t.default.enabled.bg2)||e.base.bg},selectable:H(e,e.selectable||e.muted),shadow:e.base.shadow,skeleton:{from:(null==(n=e.skeleton)?void 0:n.from)||e.base.border,to:(null==(r=e.skeleton)?void 0:r.to)||e.base.border},syntax:e.syntax};return j.set(e,a),a}function H(e,t){return{default:{enabled:U(e,t.default.enabled),hovered:U(e,t.default.hovered),pressed:U(e,t.default.pressed),selected:U(e,t.default.selected),disabled:U(e,t.default.disabled)},primary:{enabled:U(e,t.primary.enabled),hovered:U(e,t.primary.hovered),pressed:U(e,t.primary.pressed),selected:U(e,t.primary.selected),disabled:U(e,t.primary.disabled)},positive:{enabled:U(e,t.positive.enabled),hovered:U(e,t.positive.hovered),pressed:U(e,t.positive.pressed),selected:U(e,t.positive.selected),disabled:U(e,t.positive.disabled)},caution:{enabled:U(e,t.caution.enabled),hovered:U(e,t.caution.hovered),pressed:U(e,t.caution.pressed),selected:U(e,t.caution.selected),disabled:U(e,t.caution.disabled)},critical:{enabled:U(e,t.critical.enabled),hovered:U(e,t.critical.hovered),pressed:U(e,t.critical.pressed),selected:U(e,t.critical.selected),disabled:U(e,t.critical.disabled)}}}function U(e,t){var n,r;return{...t,avatar:{gray:{bg:e.spot.gray,fg:e.base.bg},blue:{bg:e.spot.blue,fg:e.base.bg},purple:{bg:e.spot.purple,fg:e.base.bg},magenta:{bg:e.spot.magenta,fg:e.base.bg},red:{bg:e.spot.red,fg:e.base.bg},orange:{bg:e.spot.orange,fg:e.base.bg},yellow:{bg:e.spot.yellow,fg:e.base.bg},green:{bg:e.spot.green,fg:e.base.bg},cyan:{bg:e.spot.cyan,fg:e.base.bg}},badge:{default:{bg:e.muted.default.enabled.bg,fg:e.muted.default.enabled.fg,dot:e.muted.default.enabled.muted.fg,icon:e.muted.default.enabled.muted.fg},primary:{bg:e.muted.primary.enabled.bg,fg:e.muted.primary.enabled.fg,dot:e.muted.primary.enabled.muted.fg,icon:e.muted.primary.enabled.muted.fg},positive:{bg:e.muted.positive.enabled.bg,fg:e.muted.positive.enabled.fg,dot:e.muted.positive.enabled.muted.fg,icon:e.muted.positive.enabled.muted.fg},caution:{bg:e.muted.caution.enabled.bg,fg:e.muted.caution.enabled.fg,dot:e.muted.caution.enabled.muted.fg,icon:e.muted.caution.enabled.muted.fg},critical:{bg:e.muted.critical.enabled.bg,fg:e.muted.critical.enabled.fg,dot:e.muted.critical.enabled.muted.fg,icon:e.muted.critical.enabled.muted.fg}},kbd:{bg:e.muted.default.enabled.bg,fg:e.muted.default.enabled.fg,border:e.muted.default.enabled.border},muted:{...e.muted.default.enabled.muted,bg:t.bg2||t.bg},skeleton:{from:(null==(n=t.skeleton)?void 0:n.from)||t.border,to:(null==(r=t.skeleton)?void 0:r.to)||t.border}}}function W(e){return{enabled:G(e.enabled),disabled:G(e.disabled),readOnly:G(e.readOnly),hovered:G(e.hovered)}}function G(e){return{bg:e.bg,border:e.border,fg:e.fg,muted:{bg:e.bg2},placeholder:e.placeholder}}const Y=new WeakMap;function X(e){var t,n;if(null!=(t=e.sanity.v2)&&t._resolved)return e.sanity.v2;const r=Y.get(e);if(r)return r;const o={_version:2,_resolved:!0,avatar:{...N.avatar,...e.sanity.avatar},button:{...N.button,...e.sanity.button},card:N.card,color:I(e.sanity.color),container:e.sanity.container,font:e.sanity.fonts,input:{...N.input,...e.sanity.input,checkbox:{...N.input.checkbox,...e.sanity.input.checkbox},radio:{...N.input.radio,...e.sanity.input.radio},switch:{...N.input.switch,...e.sanity.input.switch}},layer:null!=(n=e.sanity.layer)?n:N.layer,media:e.sanity.media,radius:e.sanity.radius,shadow:e.sanity.shadows,space:e.sanity.space,style:e.sanity.styles};return Y.set(e,o),o}function Z(e){return 2===e._version}const K=new WeakMap;const J=new WeakMap;function Q(e){const t=J.get(e);if(t)return t;const{avatar:n,button:r,color:o,container:i,font:a,input:s,media:l,radius:c,shadow:u,space:d,style:h}=e;return{_version:0,avatar:n,button:r,container:i,color:{light:{transparent:ee(o.light.transparent),default:ee(o.light.default),primary:ee(o.light.primary),positive:ee(o.light.positive),caution:ee(o.light.caution),critical:ee(o.light.critical)},dark:{transparent:ee(o.dark.transparent),default:ee(o.dark.default),primary:ee(o.dark.primary),positive:ee(o.dark.positive),caution:ee(o.dark.caution),critical:ee(o.dark.critical)}},focusRing:s.text.focusRing,fonts:a,input:s,media:l,radius:c,shadows:u,space:d,styles:h,v2:e}}function ee(e){return{base:{bg:e.bg,fg:e.fg,border:e.border,focusRing:e.focusRing,shadow:e.shadow},button:e.button,card:e.selectable.default,dark:e._dark,input:{default:te(e.input.default),invalid:te(e.input.invalid)},muted:{...e.button.ghost,transparent:e.button.ghost.default},solid:{...e.button.default,transparent:e.button.default.default},selectable:e.selectable,spot:{gray:e.avatar.gray.bg,blue:e.avatar.blue.bg,purple:e.avatar.purple.bg,magenta:e.avatar.magenta.bg,red:e.avatar.red.bg,orange:e.avatar.orange.bg,yellow:e.avatar.yellow.bg,green:e.avatar.green.bg,cyan:e.avatar.cyan.bg},syntax:e.syntax}}function te(e){return{enabled:ne(e.enabled),disabled:ne(e.disabled),readOnly:ne(e.readOnly),hovered:ne(e.hovered)}}function ne(e){return{bg:e.bg,bg2:e.muted.bg,border:e.border,fg:e.fg,placeholder:e.placeholder}}const re=[\"multiply\",\"screen\"],oe=[\"transparent\",\"default\",\"primary\",\"positive\",\"caution\",\"critical\"],ie=[\"default\",\"primary\",\"positive\",\"caution\",\"critical\"],ae=[\"enabled\",\"hovered\",\"pressed\",\"selected\",\"disabled\"],se=[\"default\",\"ghost\",\"bleed\"],le=[\"default\",\"invalid\"],ce=[\"enabled\",\"hovered\",\"readOnly\",\"disabled\"];function ue(e){return _.includes(e)}function de(e){return/^\\d+%$/.test(e)}function he(e){const t=e.split(\"/\");let n=t.shift()||\"\";const[r,o]=n.split(\" \");if(ue(r)){const e=r,n=t.shift()||\"\";if(de(o)){return{type:\"color\",tint:e,mix:Number(o.slice(0,-1))/100}}if(pe(n)){return{type:\"color\",tint:e,opacity:Number(n)}}return{type:\"color\",tint:e}}if(function(e){return\"black\"===e||\"white\"===e}(r)){const e=r,n=t.shift()||\"\";if(de(o)){return{type:\"color\",key:e,mix:Number(o.slice(0,-1))/100}}if(pe(n)){return{type:\"color\",key:e,opacity:Number(n)}}return{type:\"color\",key:e}}if(function(e){return B.includes(e)}(r)){const e=r;n=t.shift()||\"\";const[o,i]=n.split(\" \");if(ue(o)){const n=o,r=t.shift()||\"\";if(de(i)){return{type:\"color\",hue:e,tint:n,mix:Number(i.slice(0,-1))/100}}if(pe(r)){return{type:\"color\",hue:e,tint:n,opacity:Number(r)}}return{type:\"color\",hue:e,tint:n}}return{type:\"hue\",value:e}}if(function(e){return re.includes(e)}(r))return{type:\"blendMode\",value:r}}function pe(e){return\"0\"===e||/^0\\.[0-9]+$/.test(e)||\"1\"===e}const fe=[\"500\",\"500\"];function ge(e,t=fe){const{hue:n,scheme:r}=e,o=he(t[\"light\"===r?0:1]);if(!o||\"color\"!==o.type)throw new Error(`Invalid color token: ${t[0]}`);return function(e){let t=\"\";return t=\"black\"===e.key||\"white\"===e.key?e.key:`${e.hue}/${e.tint}`,void 0!==e.mix?`${t} ${100*e.mix}%`:(void 0!==e.opacity&&(t+=`/${e.opacity}`),t)}({...o,hue:o.hue||n})}const me={base:{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/600\",\"purple/400\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},backdrop:[\"gray/200/0.5\",\"black/0.5\"],badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],icon:[\"500\",\"500\"],dot:[\"500\",\"500\"]},positive:{bg:[\"200 50%\",\"900\"],fg:[\"600\",\"500\"]},caution:{bg:[\"200 50%\",\"900\"],fg:[\"600\",\"500\"]}},bg:[\"50\",\"950\"],border:[\"200\",\"800\"],code:{bg:[\"50\",\"950\"],fg:[\"600\",\"400\"]},fg:[\"800\",\"200\"],focusRing:[\"blue/500\",\"blue/500\"],icon:[\"600\",\"400\"],kbd:{bg:[\"white\",\"black\"],fg:[\"600\",\"400\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/600\",\"blue/300\"]},muted:{bg:[\"50\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},shadow:{outline:[\"500/0.3\",\"500/0.4\"],umbra:[\"gray/500/0.1\",\"black/0.2\"],penumbra:[\"gray/500/0.07\",\"black/0.14\"],ambient:[\"gray/500/0.06\",\"black/0.12\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},transparent:{bg:[\"50\",\"black\"]},default:{bg:[\"white\",\"950\"],fg:[\"800\",\"200\"],muted:{fg:[\"600\",\"400\"]}},primary:{_hue:\"blue\"},positive:{_hue:\"green\",shadow:{outline:[\"500/0.4\",\"500/0.4\"]}},caution:{_hue:\"yellow\",shadow:{outline:[\"600/0.3\",\"500/0.4\"]}},critical:{_hue:\"red\"}},button:{default:{\"*\":{\"*\":{_blend:[\"screen\",\"multiply\"],accent:{fg:[\"purple/300\",\"purple/700\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"900\",\"100\"],fg:[\"400\",\"600\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"500\",\"400\"],border:[\"500/0\",\"400/0\"],code:{bg:[\"500 20%\",\"400 20%\"],fg:[\"200\",\"600\"]},fg:[\"white\",\"black\"],icon:[\"100 70%\",\"900 70%\"],kbd:{bg:[\"black\",\"white\"],fg:[\"200\",\"600\"],border:[\"800\",\"200\"]},link:{fg:[\"blue/200\",\"blue/600\"]},muted:{bg:[\"950\",\"50\"],fg:[\"100 70%\",\"900 70%\"]},skeleton:{from:[\"900\",\"100\"],to:[\"900 50%\",\"100 50%\"]}},hovered:{bg:[\"700\",\"300\"],border:[\"700/0\",\"300/0\"]},pressed:{bg:[\"700\",\"300\"]},selected:{bg:[\"700\",\"300\"]},disabled:{_hue:\"gray\",accent:{fg:[\"100 70%\",\"900 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/500\",\"gray/400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"gray/700\",\"gray/300\"],fg:[\"white\",\"black\"],dot:[\"white\",\"black\"],icon:[\"white\",\"black\"]}},bg:[\"300\",\"600\"],code:{bg:[\"950\",\"50\"],fg:[\"300\",\"600\"]},fg:[\"300\",\"600\"],muted:{bg:[\"950\",\"50\"],fg:[\"300\",\"600\"]},kbd:{bg:[\"black\",\"white\"],fg:[\"white\",\"black\"],border:[\"700\",\"300\"]},link:{fg:[\"100 70%\",\"900 70%\"]}}},default:{\"*\":{avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},bg:[\"800\",\"200\"],muted:{bg:[\"950\",\"50\"],fg:[\"400\",\"600\"]}},hovered:{bg:[\"900\",\"100\"]},pressed:{bg:[\"black\",\"white\"]},selected:{bg:[\"black\",\"white\"]}}},ghost:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/700 60%\",\"purple/300 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"50\",\"950\"],border:[\"100\",\"900\"],code:{bg:[\"500 10%\",\"400 10%\"],fg:[\"700 60%\",\"400 60%\"]},fg:[\"600\",\"400\"],icon:[\"700 60%\",\"300 60%\"],kbd:{bg:[\"white\",\"black\"],fg:[\"600\",\"400\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/700 60%\",\"blue/300 60%\"]},muted:{bg:[\"100\",\"950\"],fg:[\"700 60%\",\"300 60%\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},hovered:{bg:[\"100\",\"900\"],fg:[\"700\",\"300\"]},pressed:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"]},selected:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"]},disabled:{_hue:\"gray\",accent:{fg:[\"200\",\"800\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/100\",\"gray/900\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{_hue:\"gray\",bg:[\"50\",\"950\"],fg:[\"gray/200\",\"gray/800\"],dot:[\"gray/200\",\"gray/800\"],icon:[\"gray/200\",\"gray/800\"]}},border:[\"100\",\"900\"],code:{bg:[\"50\",\"950\"],fg:[\"200\",\"800\"]},fg:[\"400\",\"600\"],icon:[\"300\",\"700\"],muted:{fg:[\"300\",\"700\"]},kbd:{bg:[\"white\",\"black\"],fg:[\"200\",\"800\"],border:[\"100\",\"900\"]},link:{fg:[\"200\",\"800\"]}}},positive:{\"*\":{border:[\"600 20%\",\"800\"]}},caution:{\"*\":{border:[\"600 20%\",\"800\"]}}},bleed:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/700 70%\",\"purple/300 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"white\",\"black\"],border:[\"white/0\",\"black/0\"],code:{bg:[\"50\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},fg:[\"700\",\"300\"],icon:[\"700 75%\",\"300 75%\"],kbd:{bg:[\"white\",\"black\"],fg:[\"700\",\"300\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/700 70%\",\"blue/300 70%\"]},muted:{bg:[\"100\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},hovered:{bg:[\"50\",\"950\"],icon:[\"700 70%\",\"400 70%\"]},pressed:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"],icon:[\"800 70%\",\"200 70%\"]},selected:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"],icon:[\"800 60%\",\"200 60%\"]},disabled:{_hue:\"gray\",accent:{fg:[\"200\",\"800\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/100\",\"gray/900\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{_hue:\"gray\",bg:[\"50\",\"950\"],fg:[\"gray/200\",\"gray/800\"],dot:[\"gray/200\",\"gray/800\"],icon:[\"gray/200\",\"gray/800\"]}},code:{bg:[\"50\",\"950\"],fg:[\"200\",\"800\"]},fg:[\"400\",\"600\"],icon:[\"300\",\"700\"],muted:{fg:[\"400\",\"600\"]},kbd:{bg:[\"white\",\"black\"],fg:[\"200\",\"800\"],border:[\"100\",\"900\"]},link:{fg:[\"200\",\"800\"]}}}}},input:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],bg:[\"white\",\"black\"],border:[\"200\",\"800\"],fg:[\"black\",\"200\"],muted:{bg:[\"50\",\"950\"]},placeholder:[\"400\",\"600\"]},hovered:{border:[\"300\",\"700\"]},readOnly:{bg:[\"50\",\"950\"],border:[\"200\",\"800\"],fg:[\"800\",\"200\"]},disabled:{fg:[\"400\",\"600\"],border:[\"100\",\"900\"],placeholder:[\"200\",\"800 50%\"]}},invalid:{\"*\":{_hue:\"red\",bg:[\"100\",\"950\"]}}},selectable:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/700 70%\",\"purple/300 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"white\",\"black\"],border:[\"200\",\"800\"],code:{bg:[\"50\",\"950\"],fg:[\"600\",\"400\"]},fg:[\"700\",\"300\"],icon:[\"700 75%\",\"300 75%\"],kbd:{bg:[\"white\",\"black\"],fg:[\"600\",\"400\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/700 70%\",\"blue/300 70%\"]},muted:{bg:[\"50\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},hovered:{bg:[\"50\",\"950\"]},pressed:{bg:[\"100\",\"900\"]},selected:{_blend:[\"screen\",\"multiply\"],accent:{fg:[\"purple/300\",\"purple/700\"]},avatar:{\"*\":{_blend:[\"multiply\",\"screen\"],bg:[\"white\",\"black\"],fg:[\"black\",\"white\"]}},badge:{\"*\":{bg:[\"900\",\"100\"],fg:[\"400\",\"600\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"500\",\"400\"],border:[\"500 20%\",\"400 20%\"],code:{bg:[\"500 20%\",\"400 20%\"],fg:[\"200\",\"600\"]},fg:[\"white\",\"black\"],icon:[\"100 70%\",\"900 70%\"],kbd:{bg:[\"black\",\"white\"],fg:[\"200\",\"600\"],border:[\"800\",\"200\"]},link:{fg:[\"blue/200\",\"blue/600\"]},muted:{bg:[\"500 10%\",\"400 10%\"],fg:[\"100 70%\",\"900 70%\"]},skeleton:{from:[\"900\",\"100\"],to:[\"900 50%\",\"100 50%\"]}},disabled:{_hue:\"gray\",accent:{fg:[\"200\",\"800\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/100\",\"gray/900\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{_hue:\"gray\",bg:[\"50\",\"950\"],fg:[\"gray/200\",\"gray/800\"],dot:[\"gray/200\",\"gray/800\"],icon:[\"gray/200\",\"gray/800\"]}},border:[\"100\",\"900\"],code:{bg:[\"50\",\"950\"],fg:[\"200\",\"800\"]},fg:[\"200\",\"800\"],icon:[\"200\",\"800\"],kbd:{bg:[\"white\",\"black\"],fg:[\"200\",\"800\"],border:[\"100\",\"900\"]},link:{fg:[\"200\",\"800\"]},muted:{bg:[\"50 50%\",\"950 50%\"],fg:[\"200\",\"800\"]}}},default:{selected:{_hue:\"blue\"}},critical:{disabled:{bg:[\"50 50%\",\"950 50%\"]}}},syntax:{atrule:[\"purple/600\",\"purple/400\"],attrName:[\"green/600\",\"green/400\"],attrValue:[\"yellow/600\",\"yellow/400\"],attribute:[\"yellow/600\",\"yellow/400\"],boolean:[\"purple/600\",\"purple/400\"],builtin:[\"purple/600\",\"purple/400\"],cdata:[\"yellow/600\",\"yellow/400\"],char:[\"yellow/600\",\"yellow/400\"],class:[\"orange/600\",\"orange/400\"],className:[\"cyan/600\",\"cyan/400\"],comment:[\"gray/400\",\"gray/600\"],constant:[\"purple/600\",\"purple/400\"],deleted:[\"red/600\",\"red/400\"],entity:[\"red/600\",\"red/400\"],function:[\"green/600\",\"green/400\"],hexcode:[\"blue/600\",\"blue/400\"],id:[\"purple/600\",\"purple/400\"],important:[\"purple/600\",\"purple/400\"],inserted:[\"yellow/600\",\"yellow/400\"],keyword:[\"magenta/600\",\"magenta/400\"],number:[\"purple/600\",\"purple/400\"],operator:[\"magenta/600\",\"magenta/400\"],property:[\"blue/600\",\"blue/400\"],pseudoClass:[\"yellow/600\",\"yellow/400\"],pseudoElement:[\"yellow/600\",\"yellow/400\"],punctuation:[\"gray/600\",\"gray/400\"],regex:[\"blue/600\",\"blue/400\"],selector:[\"red/600\",\"red/400\"],string:[\"yellow/600\",\"yellow/400\"],symbol:[\"purple/600\",\"purple/400\"],tag:[\"red/600\",\"red/400\"],unit:[\"orange/600\",\"orange/400\"],url:[\"red/600\",\"red/400\"],variable:[\"red/600\",\"red/400\"]}};function ve(e){return!(!e||\"object\"!=typeof e||Array.isArray(e))}function be(...e){const t=e.filter(Boolean);return 0===t.length?{}:t.reduce(ye,{})}function ye(e,t){for(const n of Object.keys(t)){const r=e[n],o=t[n];ve(r)&&ve(o)?e[n]=be(r,o):e[n]=o}return e}function we(e){const t=be(me,e);return{base:xe(t),button:Se(t),input:Te(t),selectable:Le(t),syntax:t.syntax}}function xe(e){const t={};for(const n of oe)t[n]=ke(e,n);return t}function ke(e,t){var n,r,o,i,a,s,l,c,u,d,h,p,f,g,m,v,b,y,w,x,k,S,E,A,P,T,C,R,L,D,$,M,F,O,V,B,_,q,N,z,j,I;const H=be(null==(n=null==e?void 0:e.base)?void 0:n[\"*\"],null==(r=null==e?void 0:e.base)?void 0:r[t]),U=H._hue||(null==(i=null==(o=null==e?void 0:e.base)?void 0:o[t])?void 0:i._hue)||\"gray\";return{...H,_hue:U,avatar:{gray:be({_hue:\"gray\"},null==(a=H.avatar)?void 0:a[\"*\"],null==(s=H.avatar)?void 0:s.gray),blue:be({_hue:\"blue\"},null==(l=H.avatar)?void 0:l[\"*\"],null==(c=H.avatar)?void 0:c.blue),purple:be({_hue:\"purple\"},null==(u=H.avatar)?void 0:u[\"*\"],null==(d=H.avatar)?void 0:d.purple),magenta:be({_hue:\"magenta\"},null==(h=H.avatar)?void 0:h[\"*\"],null==(p=H.avatar)?void 0:p.magenta),red:be({_hue:\"red\"},null==(f=H.avatar)?void 0:f[\"*\"],null==(g=H.avatar)?void 0:g.red),orange:be({_hue:\"orange\"},null==(m=H.avatar)?void 0:m[\"*\"],null==(v=H.avatar)?void 0:v.orange),yellow:be({_hue:\"yellow\"},null==(b=H.avatar)?void 0:b[\"*\"],null==(y=H.avatar)?void 0:y.yellow),green:be({_hue:\"green\"},null==(w=H.avatar)?void 0:w[\"*\"],null==(x=H.avatar)?void 0:x.green),cyan:be({_hue:\"cyan\"},null==(k=H.avatar)?void 0:k[\"*\"],null==(S=H.avatar)?void 0:S.cyan)},badge:{default:{_hue:(null==(A=null==(E=null==e?void 0:e.base)?void 0:E.default)?void 0:A._hue)||U,...null==(P=H.badge)?void 0:P[\"*\"],...null==(T=H.badge)?void 0:T.default},primary:{_hue:(null==(R=null==(C=null==e?void 0:e.base)?void 0:C.primary)?void 0:R._hue)||U,...null==(L=H.badge)?void 0:L[\"*\"],...null==(D=H.badge)?void 0:D.primary},positive:{_hue:(null==(M=null==($=null==e?void 0:e.base)?void 0:$.positive)?void 0:M._hue)||U,...null==(F=H.badge)?void 0:F[\"*\"],...null==(O=H.badge)?void 0:O.positive},caution:{_hue:(null==(B=null==(V=null==e?void 0:e.base)?void 0:V.caution)?void 0:B._hue)||U,...null==(_=H.badge)?void 0:_[\"*\"],...null==(q=H.badge)?void 0:q.caution},critical:{_hue:(null==(z=null==(N=null==e?void 0:e.base)?void 0:N.critical)?void 0:z._hue)||U,...null==(j=H.badge)?void 0:j[\"*\"],...null==(I=H.badge)?void 0:I.critical}}}}function Se(e){const t={};for(const n of se)t[n]=Ee(e,n);return t}function Ee(e,t){const n={};for(const r of ie)n[r]=Ae(e,t,r);return n}function Ae(e,t,n){const r={};for(const o of ae)r[o]=Pe(e,n,t,o);return r}function Pe(e,t,n,r){var o,i,a,s,l,c,u,d,h,p,f,g,m,v,b,y,w,x,k,S,E,A,P,T,C,R,L,D,$,M,F,O,V,B,_,q,N,z,j,I,H,U,W,G,Y,X,Z,K,J,Q,ee,te;const ne=be(null==(a=null==(i=null==(o=null==e?void 0:e.button)?void 0:o[n])?void 0:i[\"*\"])?void 0:a[\"*\"],null==(c=null==(l=null==(s=null==e?void 0:e.button)?void 0:s[n])?void 0:l[t])?void 0:c[\"*\"],null==(h=null==(d=null==(u=null==e?void 0:e.button)?void 0:u[n])?void 0:d[\"*\"])?void 0:h[r],null==(g=null==(f=null==(p=null==e?void 0:e.button)?void 0:p[n])?void 0:f[t])?void 0:g[r]),re=ne._hue||(null==(v=null==(m=null==e?void 0:e.base)?void 0:m[t])?void 0:v._hue);return{...ne,_hue:re,avatar:{gray:be({_hue:\"gray\"},null==(b=ne.avatar)?void 0:b[\"*\"],null==(y=ne.avatar)?void 0:y.gray),blue:be({_hue:\"blue\"},null==(w=ne.avatar)?void 0:w[\"*\"],null==(x=ne.avatar)?void 0:x.blue),purple:be({_hue:\"purple\"},null==(k=ne.avatar)?void 0:k[\"*\"],null==(S=ne.avatar)?void 0:S.purple),magenta:be({_hue:\"magenta\"},null==(E=ne.avatar)?void 0:E[\"*\"],null==(A=ne.avatar)?void 0:A.magenta),red:be({_hue:\"red\"},null==(P=ne.avatar)?void 0:P[\"*\"],null==(T=ne.avatar)?void 0:T.red),orange:be({_hue:\"orange\"},null==(C=ne.avatar)?void 0:C[\"*\"],null==(R=ne.avatar)?void 0:R.orange),yellow:be({_hue:\"yellow\"},null==(L=ne.avatar)?void 0:L[\"*\"],null==(D=ne.avatar)?void 0:D.yellow),green:be({_hue:\"green\"},null==($=ne.avatar)?void 0:$[\"*\"],null==(M=ne.avatar)?void 0:M.green),cyan:be({_hue:\"cyan\"},null==(F=ne.avatar)?void 0:F[\"*\"],null==(O=ne.avatar)?void 0:O.cyan)},badge:{default:{_hue:null==(B=null==(V=null==e?void 0:e.base)?void 0:V.default)?void 0:B._hue,...null==(_=ne.badge)?void 0:_[\"*\"],...null==(q=ne.badge)?void 0:q.default},primary:{_hue:null==(z=null==(N=null==e?void 0:e.base)?void 0:N.primary)?void 0:z._hue,...null==(j=ne.badge)?void 0:j[\"*\"],...null==(I=ne.badge)?void 0:I.primary},positive:{_hue:null==(U=null==(H=null==e?void 0:e.base)?void 0:H.positive)?void 0:U._hue,...null==(W=ne.badge)?void 0:W[\"*\"],...null==(G=ne.badge)?void 0:G.positive},caution:{_hue:null==(X=null==(Y=null==e?void 0:e.base)?void 0:Y.caution)?void 0:X._hue,...null==(Z=ne.badge)?void 0:Z[\"*\"],...null==(K=ne.badge)?void 0:K.caution},critical:{_hue:null==(Q=null==(J=null==e?void 0:e.base)?void 0:J.critical)?void 0:Q._hue,...null==(ee=ne.badge)?void 0:ee[\"*\"],...null==(te=ne.badge)?void 0:te.critical}}}}function Te(e){const t={};for(const n of le)t[n]=Ce(e,n);return t}function Ce(e,t){const n={};for(const r of ce)n[r]=Re(e,t,r);return n}function Re(e,t,n){var r,o,i,a,s,l,c,u,d,h;const p=be(null==(o=null==(r=null==e?void 0:e.input)?void 0:r[\"*\"])?void 0:o[\"*\"],null==(a=null==(i=null==e?void 0:e.input)?void 0:i[t])?void 0:a[\"*\"],null==(l=null==(s=null==e?void 0:e.input)?void 0:s[\"*\"])?void 0:l[n],null==(u=null==(c=null==e?void 0:e.input)?void 0:c[t])?void 0:u[n]),f=p._hue||(null==(h=null==(d=null==e?void 0:e.input)?void 0:d[t])?void 0:h._hue);return{...p,_hue:f}}function Le(e){const t={};for(const n of ie)t[n]=De(e,n);return t}function De(e,t){var n,r,o,i;const a={_hue:(null==(r=null==(n=null==e?void 0:e.selectable)?void 0:n[t])?void 0:r._hue)||(null==(i=null==(o=null==e?void 0:e.base)?void 0:o[t])?void 0:i._hue)};for(const n of ae)a[n]=$e(e,t,n);return a}function $e(e,t,n){var r,o,i,a,s,l,c,u,d,h,p,f,g,m,v,b,y,w,x,k,S,E,A,P,T,C,R,L,D,$,M,F,O,V,B,_,q,N,z,j,I,H,U,W,G,Y,X,Z;const K=be(null==(o=null==(r=null==e?void 0:e.selectable)?void 0:r[\"*\"])?void 0:o[\"*\"],null==(a=null==(i=null==e?void 0:e.selectable)?void 0:i[t])?void 0:a[\"*\"],null==(l=null==(s=null==e?void 0:e.selectable)?void 0:s[\"*\"])?void 0:l[n],null==(u=null==(c=null==e?void 0:e.selectable)?void 0:c[t])?void 0:u[n]),J=K._hue||(null==(h=null==(d=null==e?void 0:e.base)?void 0:d[t])?void 0:h._hue);return{...K,_hue:J,avatar:{gray:be({_hue:\"gray\"},null==(p=K.avatar)?void 0:p[\"*\"],null==(f=K.avatar)?void 0:f.gray),blue:be({_hue:\"blue\"},null==(g=K.avatar)?void 0:g[\"*\"],null==(m=K.avatar)?void 0:m.blue),purple:be({_hue:\"purple\"},null==(v=K.avatar)?void 0:v[\"*\"],null==(b=K.avatar)?void 0:b.purple),magenta:be({_hue:\"magenta\"},null==(y=K.avatar)?void 0:y[\"*\"],null==(w=K.avatar)?void 0:w.magenta),red:be({_hue:\"red\"},null==(x=K.avatar)?void 0:x[\"*\"],null==(k=K.avatar)?void 0:k.red),orange:be({_hue:\"orange\"},null==(S=K.avatar)?void 0:S[\"*\"],null==(E=K.avatar)?void 0:E.orange),yellow:be({_hue:\"yellow\"},null==(A=K.avatar)?void 0:A[\"*\"],null==(P=K.avatar)?void 0:P.yellow),green:be({_hue:\"green\"},null==(T=K.avatar)?void 0:T[\"*\"],null==(C=K.avatar)?void 0:C.green),cyan:be({_hue:\"cyan\"},null==(R=K.avatar)?void 0:R[\"*\"],null==(L=K.avatar)?void 0:L.cyan)},badge:{default:{_hue:null==($=null==(D=null==e?void 0:e.base)?void 0:D.default)?void 0:$._hue,...null==(M=K.badge)?void 0:M[\"*\"],...null==(F=K.badge)?void 0:F.default},primary:{_hue:null==(V=null==(O=null==e?void 0:e.base)?void 0:O.primary)?void 0:V._hue,...null==(B=K.badge)?void 0:B[\"*\"],...null==(_=K.badge)?void 0:_.primary},positive:{_hue:null==(N=null==(q=null==e?void 0:e.base)?void 0:q.positive)?void 0:N._hue,...null==(z=K.badge)?void 0:z[\"*\"],...null==(j=K.badge)?void 0:j.positive},caution:{_hue:null==(H=null==(I=null==e?void 0:e.base)?void 0:I.caution)?void 0:H._hue,...null==(U=K.badge)?void 0:U[\"*\"],...null==(W=K.badge)?void 0:W.caution},critical:{_hue:null==(Y=null==(G=null==e?void 0:e.base)?void 0:G.critical)?void 0:Y._hue,...null==(X=K.badge)?void 0:X[\"*\"],...null==(Z=K.badge)?void 0:Z.critical}}}}function Me(e,t){const{scheme:n}=e;return{transparent:Fe({scheme:n,tone:\"transparent\"},t),default:Fe({scheme:n,tone:\"default\"},t),primary:Fe({scheme:n,tone:\"primary\"},t),positive:Fe({scheme:n,tone:\"positive\"},t),caution:Fe({scheme:n,tone:\"caution\"},t),critical:Fe({scheme:n,tone:\"critical\"},t)}}function Fe(e,t){var n,r,o,i,a,s,l,c,u,d,h,p,f;const{scheme:g,tone:m}=e,v=null==(r=null==(n=null==t?void 0:t.color)?void 0:n.base)?void 0:r[m],b={hue:(null==v?void 0:v._hue)||\"gray\",scheme:g};return{_blend:((null==v?void 0:v._blend)||[\"multiply\",\"screen\"])[\"light\"===g?0:1],_dark:\"dark\"===g,accent:{fg:ge(b,null==(o=null==v?void 0:v.accent)?void 0:o.fg)},avatar:Ve({scheme:g},v),backdrop:ge(b,null==v?void 0:v.backdrop),badge:_e(null==v?void 0:v.badge,{scheme:g},t),bg:ge(b,null==v?void 0:v.bg),border:ge(b,null==v?void 0:v.border),button:Ne({scheme:g},t),code:{bg:ge(b,null==(i=null==v?void 0:v.code)?void 0:i.bg),fg:ge(b,null==(a=null==v?void 0:v.code)?void 0:a.fg)},fg:ge(b,null==v?void 0:v.fg),focusRing:ge(b,null==v?void 0:v.focusRing),icon:ge(b,null==v?void 0:v.icon),input:He({scheme:g,tone:m},t),kbd:{bg:ge(b,null==(s=null==v?void 0:v.kbd)?void 0:s.bg),fg:ge(b,null==(l=null==v?void 0:v.kbd)?void 0:l.fg),border:ge(b,null==(c=null==v?void 0:v.kbd)?void 0:c.border)},link:{fg:ge(b,null==(u=null==v?void 0:v.link)?void 0:u.fg)},muted:{bg:ge(b,null==(d=null==v?void 0:v.muted)?void 0:d.bg),fg:ge(b,null==(h=null==v?void 0:v.muted)?void 0:h.fg)},selectable:Ge({scheme:g},t),shadow:Oe({scheme:g,tone:m},t),skeleton:{from:ge(b,null==(p=null==v?void 0:v.skeleton)?void 0:p.from),to:ge(b,null==(f=null==v?void 0:v.skeleton)?void 0:f.to)},syntax:Ze({scheme:g},t)}}function Oe(e,t){var n,r,o,i,a,s;const{scheme:l,tone:c}=e,u=null==(r=null==(n=null==t?void 0:t.color)?void 0:n.base)?void 0:r[c],d={hue:(null==u?void 0:u._hue)||\"gray\",scheme:l};return{outline:ge(d,null==(o=null==u?void 0:u.shadow)?void 0:o.outline),umbra:ge(d,null==(i=null==u?void 0:u.shadow)?void 0:i.umbra),penumbra:ge(d,null==(a=null==u?void 0:u.shadow)?void 0:a.penumbra),ambient:ge(d,null==(s=null==u?void 0:u.shadow)?void 0:s.ambient)}}function Ve(e,t){const{scheme:n}=e;return{gray:Be({color:\"gray\",scheme:n},t),blue:Be({color:\"blue\",scheme:n},t),purple:Be({color:\"purple\",scheme:n},t),magenta:Be({color:\"magenta\",scheme:n},t),red:Be({color:\"red\",scheme:n},t),orange:Be({color:\"orange\",scheme:n},t),yellow:Be({color:\"yellow\",scheme:n},t),green:Be({color:\"green\",scheme:n},t),cyan:Be({color:\"cyan\",scheme:n},t)}}function Be(e,t){var n;const{color:r,scheme:o}=e,i=null==(n=null==t?void 0:t.avatar)?void 0:n[r],a={hue:(null==i?void 0:i._hue)||\"gray\",scheme:o};return{_blend:((null==i?void 0:i._blend)||[\"screen\",\"multiply\"])[\"light\"===o?0:1],bg:ge(a,null==i?void 0:i.bg),fg:ge(a,null==i?void 0:i.fg)}}function _e(e,t,n){const{scheme:r}=t;return{default:qe(e,{scheme:r,tone:\"default\"},n),primary:qe(e,{scheme:r,tone:\"primary\"},n),positive:qe(e,{scheme:r,tone:\"positive\"},n),caution:qe(e,{scheme:r,tone:\"caution\"},n),critical:qe(e,{scheme:r,tone:\"critical\"},n)}}function qe(e,t,n){var r,o,i;const{scheme:a,tone:s}=t,l=null==e?void 0:e[s],c={hue:(null==l?void 0:l._hue)||(null==(i=null==(o=null==(r=null==n?void 0:n.color)?void 0:r.base)?void 0:o[s])?void 0:i._hue)||\"gray\",scheme:a};return{bg:ge(c,null==l?void 0:l.bg),fg:ge(c,null==l?void 0:l.fg),dot:ge(c,null==l?void 0:l.dot),icon:ge(c,null==l?void 0:l.icon)}}function Ne(e,t){const{scheme:n}=e,r={};for(const e of se)r[e]=ze({scheme:n,mode:e},t);return r}function ze(e,t){const{mode:n,scheme:r}=e,o={};for(const e of ie)o[e]=je({mode:n,scheme:r,tone:e},t);return o}function je(e,t){const{mode:n,scheme:r,tone:o}=e,i={};for(const e of ae)i[e]=Ie({mode:n,tone:o,scheme:r,state:e},t);return i}function Ie(e,t){var n,r,o,i,a,s,l,c,u,d,h,p,f,g,m;const{mode:v,tone:b,scheme:y,state:w}=e,x=null==(i=null==(o=null==(r=null==(n=null==t?void 0:t.color)?void 0:n.button)?void 0:r[v])?void 0:o[b])?void 0:i[w],k={hue:(null==x?void 0:x._hue)||\"gray\",scheme:y};return{_blend:((null==x?void 0:x._blend)||[\"screen\",\"multiply\"])[\"light\"===y?0:1],accent:{fg:ge(k,null==(a=null==x?void 0:x.accent)?void 0:a.fg)},avatar:Ve({scheme:y},x),badge:_e(null==x?void 0:x.badge,{scheme:y},t),bg:ge(k,null==x?void 0:x.bg),border:ge(k,null==x?void 0:x.border),code:{bg:ge(k,null==(s=null==x?void 0:x.code)?void 0:s.bg),fg:ge(k,null==(l=null==x?void 0:x.code)?void 0:l.fg)},fg:ge(k,null==x?void 0:x.fg),icon:ge(k,null==x?void 0:x.icon),muted:{bg:ge(k,null==(c=null==x?void 0:x.muted)?void 0:c.bg),fg:ge(k,null==(u=null==x?void 0:x.muted)?void 0:u.fg)},kbd:{bg:ge(k,null==(d=null==x?void 0:x.kbd)?void 0:d.bg),fg:ge(k,null==(h=null==x?void 0:x.kbd)?void 0:h.fg),border:ge(k,null==(p=null==x?void 0:x.kbd)?void 0:p.border)},link:{fg:ge(k,null==(f=null==x?void 0:x.link)?void 0:f.fg)},skeleton:{from:ge(k,null==(g=null==x?void 0:x.skeleton)?void 0:g.from),to:ge(k,null==(m=null==x?void 0:x.skeleton)?void 0:m.to)}}}function He(e,t){const{scheme:n,tone:r}=e;return{default:Ue({mode:\"default\",scheme:n,tone:r},t),invalid:Ue({mode:\"invalid\",scheme:n,tone:r},t)}}function Ue(e,t){const{mode:n,scheme:r,tone:o}=e;return{enabled:We({mode:n,scheme:r,state:\"enabled\",tone:o},t),hovered:We({mode:n,scheme:r,state:\"hovered\",tone:o},t),readOnly:We({mode:n,scheme:r,state:\"readOnly\",tone:o},t),disabled:We({mode:n,scheme:r,state:\"disabled\",tone:o},t)}}function We(e,t){var n,r,o,i,a,s,l;const{mode:c,tone:u,scheme:d,state:h}=e,p=null==(o=null==(r=null==(n=null==t?void 0:t.color)?void 0:n.input)?void 0:r[c])?void 0:o[h],f={hue:(null==p?void 0:p._hue)||(null==(s=null==(a=null==(i=null==t?void 0:t.color)?void 0:i.base)?void 0:a[u])?void 0:s._hue)||\"gray\",scheme:d};return{_blend:((null==p?void 0:p._blend)||[\"screen\",\"multiply\"])[\"light\"===d?0:1],bg:ge(f,null==p?void 0:p.bg),border:ge(f,null==p?void 0:p.border),fg:ge(f,null==p?void 0:p.fg),muted:{bg:ge(f,null==(l=null==p?void 0:p.muted)?void 0:l.bg)},placeholder:ge(f,null==p?void 0:p.placeholder)}}function Ge(e,t){const{scheme:n}=e,r={};for(const e of ie)r[e]=Ye({scheme:n,tone:e},t);return r}function Ye(e,t){const{scheme:n,tone:r}=e,o={};for(const e of ae)o[e]=Xe({tone:r,scheme:n,state:e},t);return o}function Xe(e,t){var n,r,o,i,a,s,l,c,u,d,h,p,f,g;const{scheme:m,state:v,tone:b}=e,y=null==(o=null==(r=null==(n=null==t?void 0:t.color)?void 0:n.selectable)?void 0:r[b])?void 0:o[v],w={hue:(null==y?void 0:y._hue)||\"gray\",scheme:m};return{_blend:((null==y?void 0:y._blend)||[\"screen\",\"multiply\"])[\"light\"===m?0:1],accent:{fg:ge(w,null==(i=null==y?void 0:y.accent)?void 0:i.fg)},avatar:Ve({scheme:m},y),badge:_e(null==y?void 0:y.badge,{scheme:m},t),bg:ge(w,null==y?void 0:y.bg),border:ge(w,null==y?void 0:y.border),code:{bg:ge(w,null==(a=null==y?void 0:y.code)?void 0:a.bg),fg:ge(w,null==(s=null==y?void 0:y.code)?void 0:s.fg)},fg:ge(w,null==y?void 0:y.fg),icon:ge(w,null==y?void 0:y.icon),muted:{bg:ge(w,null==(l=null==y?void 0:y.muted)?void 0:l.bg),fg:ge(w,null==(c=null==y?void 0:y.muted)?void 0:c.fg)},kbd:{bg:ge(w,null==(u=null==y?void 0:y.kbd)?void 0:u.bg),fg:ge(w,null==(d=null==y?void 0:y.kbd)?void 0:d.fg),border:ge(w,null==(h=null==y?void 0:y.kbd)?void 0:h.border)},link:{fg:ge(w,null==(p=null==y?void 0:y.link)?void 0:p.fg)},skeleton:{from:ge(w,null==(f=null==y?void 0:y.skeleton)?void 0:f.from),to:ge(w,null==(g=null==y?void 0:y.skeleton)?void 0:g.to)}}}function Ze(e,t){var n;const{scheme:r}=e,o=null==(n=null==t?void 0:t.color)?void 0:n.syntax,i={hue:\"gray\",scheme:r};return{atrule:ge(i,null==o?void 0:o.atrule),attrName:ge(i,null==o?void 0:o.attrName),attrValue:ge(i,null==o?void 0:o.attrValue),attribute:ge(i,null==o?void 0:o.attribute),boolean:ge(i,null==o?void 0:o.boolean),builtin:ge(i,null==o?void 0:o.builtin),cdata:ge(i,null==o?void 0:o.cdata),char:ge(i,null==o?void 0:o.char),class:ge(i,null==o?void 0:o.class),className:ge(i,null==o?void 0:o.className),comment:ge(i,null==o?void 0:o.comment),constant:ge(i,null==o?void 0:o.constant),deleted:ge(i,null==o?void 0:o.deleted),doctype:ge(i,null==o?void 0:o.doctype),entity:ge(i,null==o?void 0:o.entity),function:ge(i,null==o?void 0:o.function),hexcode:ge(i,null==o?void 0:o.hexcode),id:ge(i,null==o?void 0:o.id),important:ge(i,null==o?void 0:o.important),inserted:ge(i,null==o?void 0:o.inserted),keyword:ge(i,null==o?void 0:o.keyword),number:ge(i,null==o?void 0:o.number),operator:ge(i,null==o?void 0:o.operator),prolog:ge(i,null==o?void 0:o.prolog),property:ge(i,null==o?void 0:o.property),pseudoClass:ge(i,null==o?void 0:o.pseudoClass),pseudoElement:ge(i,null==o?void 0:o.pseudoElement),punctuation:ge(i,null==o?void 0:o.punctuation),regex:ge(i,null==o?void 0:o.regex),selector:ge(i,null==o?void 0:o.selector),string:ge(i,null==o?void 0:o.string),symbol:ge(i,null==o?void 0:o.symbol),tag:ge(i,null==o?void 0:o.tag),unit:ge(i,null==o?void 0:o.unit),url:ge(i,null==o?void 0:o.url),variable:ge(i,null==o?void 0:o.variable)}}const Ke=q;function Je(e,t,n){return e+(t-e)*n}function Qe(e,t){return e*t}function et(e,t){return e+t-e*t}function tt(e,t=0,n=1){return Math.min(n,Math.max(t,e))}function nt(e,t,n,r,o){return function(e,t,n){return e*(1-n)+t*n}(n,r,function(e,t,n){return tt((n-e)/(t-e))}(e,t,o))}function rt(e){return Math.round(e)}function ot(e){if(4===e.length){const t=e.slice(1,2),n=e.slice(2,3),r=e.slice(3,4);return{r:parseInt(t+t,16),g:parseInt(n+n,16),b:parseInt(r+r,16)}}return{r:parseInt(e.slice(1,3),16),g:parseInt(e.slice(3,5),16),b:parseInt(e.slice(5,7),16)}}function it(e){const t=rt(tt(Math.round(e.r),0,255)),n=rt(tt(Math.round(e.g),0,255)),r=rt(tt(Math.round(e.b),0,255));return\"a\"in e?`rgba(${t},${n},${r},${e.a})`:\"#\"+((1<<24)+(t<<16)+(n<<8)+r).toString(16).slice(1)}const at=\"0123456789ABCDEFabcdef\",st=/hsl\\(\\s*(\\d+)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*\\)/i;function lt(e){return\"#\"===e[0]&&(4===e.length||7===e.length)&&function(e){for(const t of e)if(-1===at.indexOf(t))return!1;return!0}(e.slice(1))}function ct(e){if(!e)return{r:0,g:0,b:0};if(\"string\"!=typeof e)throw new Error(\"parseColor: expected a string\");if(lt(e))return ot(e);if(e.startsWith(\"hsl(\"))return function(e){const t=e.s/100,n=e.l/100,r=(1-Math.abs(2*n-1))*t,o=r*(1-Math.abs(e.h/60%2-1)),i=n-r/2;let a=0,s=0,l=0;return 0<=e.h&&e.h<60?(a=r,s=o,l=0):60<=e.h&&e.h<120?(a=o,s=r,l=0):120<=e.h&&e.h<180?(a=0,s=r,l=o):180<=e.h&&e.h<240?(a=0,s=o,l=r):240<=e.h&&e.h<300?(a=o,s=0,l=r):300<=e.h&&e.h<360&&(a=r,s=0,l=o),{r:Math.round(255*(a+i)),g:Math.round(255*(s+i)),b:Math.round(255*(l+i))}}(function(e){const t=st.exec(e);if(!t)throw new Error(`parseHsl: string is not a HSL color: \"${e}\"`);return{h:parseInt(t[1]),s:parseFloat(t[3]),l:parseFloat(t[5])}}(e));if(e.startsWith(\"rgba(\"))return function(e){const t=e.replace(/rgba\\(|\\)/g,\"\").split(\",\");return{r:parseInt(t[0]),g:parseInt(t[1]),b:parseInt(t[2]),a:parseFloat(t[3])}}(e);throw new Error(`parseColor: unexpected color format: \"${e}\"`)}const ut=[0,255];function dt(e,t){const{blendMode:n}=t,r=ct(e),o=ct(t.black),i=ct(t.white),a=t.bg?ct(t.bg):\"multiply\"===n?i:o,s={r:[o.r,i.r],g:[o.g,i.g],b:[o.b,i.b]},l={r:tt(nt(...s.r,...ut,a.r),...ut),g:tt(nt(...s.g,...ut,a.g),...ut),b:tt(nt(...s.b,...ut,a.b),...ut)},c={r:tt(nt(...s.r,...ut,r.r),...ut),g:tt(nt(...s.g,...ut,r.g),...ut),b:tt(nt(...s.b,...ut,r.b),...ut)},u=\"multiply\"===n?{r:255*Qe((d=l).r/255,(h=c).r/255),g:255*Qe(d.g/255,h.g/255),b:255*Qe(d.b/255,h.b/255)}:function(e,t){return{r:255*et(e.r/255,t.r/255),g:255*et(e.g/255,t.g/255),b:255*et(e.b/255,t.b/255)}}(l,c);var d,h;return it({r:tt(nt(...ut,...s.r,u.r),...s.r),g:tt(nt(...ut,...s.g,u.g),...s.g),b:tt(nt(...ut,...s.b,u.b),...s.b)})}function ht(e,t){const{bg:n,blendMode:r,colorPalette:o}=t;if(\"white\"===n)throw new Error(\"Cannot blend with white background\");const i=he(e);if(!i||\"color\"!==i.type)throw new Error(`Invalid color token value: ${e}`);let a=\"\";if(\"black\"===i.key&&(a=pt(o.black)),\"white\"===i.key&&(a=pt(o.white)),i.hue&&i.tint&&(a=pt(o[i.hue][i.tint])),!a)throw new Error(`Invalid color token value: ${e}`);const s=a,l={blendMode:r,bg:n,black:pt(o.black),white:pt(o.white)};try{if(a=dt(a,l),n&&void 0!==i.mix){const e=ot(n),t=ot(a);a=it((c=e,u=t,d=i.mix,{r:Je(c.r,u.r,d),g:Je(c.g,u.g,d),b:Je(c.b,u.b,d)}))}}catch(e){throw console.warn(\"could not blend\",a,l),e}var c,u,d;return\"#aN\"===a&&(console.warn(`invalid color token value: ${e}`),a=s),void 0!==i.opacity&&(a=function(e,t){const n=ct(e);return`rgba(${n.r},${n.g},${n.b},${t})`}(a,i.opacity)),a}function pt(e){return\"string\"==typeof e?e:e.hex}function ft(e,t){const n=null!=void 0?undefined:Ke;return{light:gt(n,e.light),dark:gt(n,e.dark)}}function gt(e,t){const n=Object.entries(t),[,r]=n.find((([e])=>\"transparent\"===e)),[,o]=n.find((([e])=>\"default\"===e)),i=mt(r,{colorPalette:e}),a=mt(o,{colorPalette:e}),s=a.bg;if(\"white\"===s)throw new Error(\"Cannot blend with white background\");return Object.fromEntries([[\"transparent\",i],[\"default\",a],...n.filter((([e])=>\"default\"!==e&&\"transparent\"!==e)).map((([t,n])=>[t,mt(n,{bg:s,colorPalette:e})]))])}function mt(e,t){const{colorPalette:n,bg:r}=t,o=e._blend||\"multiply\",i=ht(e.bg,{colorPalette:n,bg:r,blendMode:o}),a={colorPalette:n,bg:i,blendMode:o},s=function(e,t){return{default:kt(e.default,t),ghost:kt(e.ghost,t),bleed:kt(e.bleed,t)}}(e.button,{baseBg:i,blendMode:o,colorPalette:n}),l=function(e,t){return{default:Ct(e.default,t),primary:Ct(e.primary,t),positive:Ct(e.positive,t),caution:Ct(e.caution,t),critical:Ct(e.critical,t)}}(e.selectable,{colorPalette:n,baseBg:i,blendMode:o}),c={outline:ht(e.shadow.outline,a),umbra:ht(e.shadow.umbra,{...a,bg:void 0,colorPalette:{...n,black:\"#000000\"}}),penumbra:ht(e.shadow.penumbra,{...a,bg:void 0,colorPalette:{...n,black:\"#000000\"}}),ambient:ht(e.shadow.ambient,{...a,bg:void 0,colorPalette:{...n,black:\"#000000\"}})};return{_blend:o,_dark:e._dark,accent:{fg:ht(e.accent.fg,a)},avatar:bt(e.avatar,{baseBg:i,colorPalette:n,blendMode:o}),backdrop:ht(e.backdrop,a),badge:wt(e.badge,{baseBg:i,colorPalette:n,blendMode:o}),bg:i,border:ht(e.border,a),button:s,code:{bg:ht(e.code.bg,a),fg:ht(e.code.fg,a)},fg:ht(e.fg,a),focusRing:ht(e.focusRing,a),icon:ht(e.icon,a),input:At(e.input,{baseBg:i,colorPalette:n,blendMode:o}),kbd:vt(e.kbd,{baseBg:i,colorPalette:n,blendMode:o}),link:{fg:ht(e.link.fg,a)},muted:{bg:ht(e.muted.bg,a),fg:ht(e.muted.fg,a)},shadow:c,skeleton:{from:ht(e.skeleton.from,a),to:ht(e.skeleton.to,a)},syntax:Rt(e.syntax,{baseBg:i,colorPalette:n,blendMode:o}),selectable:l}}function vt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i={bg:n,blendMode:r,colorPalette:o},a=ht(e.bg,i),s={bg:a,blendMode:r,colorPalette:o};return{bg:a,fg:ht(e.fg,s),border:ht(e.border,s)}}function bt(e,t){return{gray:yt(e.gray,t),blue:yt(e.blue,t),purple:yt(e.purple,t),magenta:yt(e.magenta,t),red:yt(e.red,t),orange:yt(e.orange,t),yellow:yt(e.yellow,t),green:yt(e.green,t),cyan:yt(e.cyan,t)}}function yt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=e._blend||\"multiply\",a={bg:n,blendMode:r,colorPalette:o},s=ht(e.bg,a),l={bg:s,blendMode:i,colorPalette:o};return{_blend:i,bg:s,fg:ht(e.fg,l)}}function wt(e,t){return{default:xt(e.default,t),primary:xt(e.primary,t),positive:xt(e.positive,t),caution:xt(e.caution,t),critical:xt(e.critical,t)}}function xt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=r,a={bg:n,blendMode:r,colorPalette:o},s=ht(e.bg,a),l={bg:s,blendMode:i,colorPalette:o};return{bg:s,dot:ht(e.dot,l),fg:ht(e.fg,l),icon:ht(e.icon,l)}}function kt(e,t){return{default:St(e.default,t),primary:St(e.primary,t),positive:St(e.positive,t),caution:St(e.caution,t),critical:St(e.critical,t)}}function St(e,t){return{enabled:Et(e.enabled,t),hovered:Et(e.hovered,t),pressed:Et(e.pressed,t),selected:Et(e.selected,t),disabled:Et(e.disabled,t)}}function Et(e,t){var n,r;const{baseBg:o,blendMode:i,colorPalette:a}=t,s=e._blend||\"multiply\",l={bg:o,blendMode:i,colorPalette:a},c=ht(e.bg,l),u={bg:c,blendMode:s,colorPalette:a};return{_blend:s,accent:{fg:ht(e.accent.fg,u)},avatar:bt(e.avatar,{baseBg:c,colorPalette:a,blendMode:s}),badge:wt(e.badge,{baseBg:c,colorPalette:a,blendMode:s}),bg:c,border:ht(e.border,u),code:{bg:ht(e.code.bg,u),fg:ht(e.code.fg,u)},fg:ht(e.fg,u),icon:ht(e.icon,u),link:{fg:ht(e.link.fg,u)},muted:{bg:ht(e.muted.bg,u),fg:ht(e.muted.fg,u)},kbd:{bg:ht(e.kbd.bg,u),fg:ht(e.kbd.fg,u),border:ht(e.kbd.border,u)},skeleton:{from:ht(null==(n=e.skeleton)?void 0:n.from,u),to:ht(null==(r=e.skeleton)?void 0:r.to,u)}}}function At(e,t){return{default:Pt(e.default,t),invalid:Pt(e.invalid,t)}}function Pt(e,t){return{enabled:Tt(e.enabled,t),hovered:Tt(e.hovered,t),readOnly:Tt(e.readOnly,t),disabled:Tt(e.disabled,t)}}function Tt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=e._blend||\"multiply\",a={colorPalette:o,bg:n,blendMode:r},s=ht(e.bg,a),l={colorPalette:o,bg:s,blendMode:i};return{_blend:i,bg:s,border:ht(e.border,l),fg:ht(e.fg,l),muted:{bg:ht(e.muted.bg,l)},placeholder:ht(e.placeholder,l)}}function Ct(e,t){return{enabled:Et(e.enabled,t),hovered:Et(e.hovered,t),pressed:Et(e.pressed,t),selected:Et(e.selected,t),disabled:Et(e.disabled,t)}}function Rt(e,t){const{colorPalette:n,baseBg:r,blendMode:o}=t,i={colorPalette:n,bg:r,blendMode:o};return{atrule:ht(e.atrule,i),attrName:ht(e.attrName,i),attrValue:ht(e.attrValue,i),attribute:ht(e.attribute,i),boolean:ht(e.boolean,i),builtin:ht(e.builtin,i),cdata:ht(e.cdata,i),char:ht(e.char,i),class:ht(e.class,i),className:ht(e.className,i),comment:ht(e.comment,i),constant:ht(e.constant,i),deleted:ht(e.deleted,i),doctype:ht(e.doctype,i),entity:ht(e.entity,i),function:ht(e.function,i),hexcode:ht(e.hexcode,i),id:ht(e.id,i),important:ht(e.important,i),inserted:ht(e.inserted,i),keyword:ht(e.keyword,i),number:ht(e.number,i),operator:ht(e.operator,i),prolog:ht(e.prolog,i),property:ht(e.property,i),pseudoClass:ht(e.pseudoClass,i),pseudoElement:ht(e.pseudoElement,i),punctuation:ht(e.punctuation,i),regex:ht(e.regex,i),selector:ht(e.selector,i),string:ht(e.string,i),symbol:ht(e.symbol,i),tag:ht(e.tag,i),unit:ht(e.unit,i),url:ht(e.url,i),variable:ht(e.variable,i)}}const Lt=new Map;function Dt(e,t,n){const r=function(e,t,n){const r=Lt.get(t);if(!r)return;const o=r.get(n);if(o)return o.get(e)}(e,t,n);if(r)return r;const o=Z(e)?Q(e):e,i=Z(e)?e:function(e){if(e.v2)return e.v2;const t=K.get(e);if(t)return t;const{avatar:n,button:r,color:o,container:i,focusRing:a,fonts:s,input:l,layer:c,media:u,radius:d,shadows:h,space:p,styles:f}=e,g={_version:2,avatar:{...N.avatar,...n},button:{...N.button,...r},card:N.card,color:{light:{transparent:I(o.light.transparent),default:I(o.light.default),primary:I(o.light.primary),positive:I(o.light.positive),caution:I(o.light.caution),critical:I(o.light.critical)},dark:{transparent:I(o.dark.transparent),default:I(o.dark.default),primary:I(o.dark.primary),positive:I(o.dark.positive),caution:I(o.dark.caution),critical:I(o.dark.critical)}},container:i,font:s,input:{...N.input,...l,checkbox:{...N.input.checkbox,...l.checkbox},radio:{...N.input.radio,...l.radio},switch:{...N.input.switch,...l.switch}},layer:null!=c?c:N.layer,media:u,radius:d,shadow:h,space:p,style:f};return K.set(e,g),g}(e),a=o.color[t]||o.color.light,s=a[n]||a.default,l=o.layer||N.layer,c=i.color[t]||i.color.light,u=c[n]||c.default,d=i.layer||N.layer,h={sanity:{...o,color:s,layer:l,v2:{...i,_resolved:!0,color:u,layer:d}}};return function(e,t,n,r){Lt.has(t)||Lt.set(t,new Map);const o=Lt.get(t);o.has(n)||o.set(n,new WeakMap),o.get(n).set(e,r)}(e,t,n,h),h}var $t,Mt=typeof globalThis<\"u\"?globalThis:typeof window<\"u\"?window:typeof global<\"u\"?global:typeof self<\"u\"?self:{},Ft={exports:{}},Ot={},Vt=Symbol.for(\"react.element\"),Bt=Symbol.for(\"react.portal\"),_t=Symbol.for(\"react.fragment\"),qt=Symbol.for(\"react.strict_mode\"),Nt=Symbol.for(\"react.profiler\"),zt=Symbol.for(\"react.provider\"),jt=Symbol.for(\"react.context\"),It=Symbol.for(\"react.server_context\"),Ht=Symbol.for(\"react.forward_ref\"),Ut=Symbol.for(\"react.suspense\"),Wt=Symbol.for(\"react.suspense_list\"),Gt=Symbol.for(\"react.memo\"),Yt=Symbol.for(\"react.lazy\"),Xt=Symbol.for(\"react.offscreen\");\n/**\n* @license React\n* react-is.production.min.js\n*\n* Copyright (c) Facebook, Inc. and its affiliates.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/function Zt(e){if(\"object\"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case Vt:switch(e=e.type){case _t:case Nt:case qt:case Ut:case Wt:return e;default:switch(e=e&&e.$$typeof){case It:case jt:case Ht:case Yt:case Gt:case zt:return e;default:return t}}case Bt:return t}}}$t=Symbol.for(\"react.module.reference\"),Ot.ContextConsumer=jt,Ot.ContextProvider=zt,Ot.Element=Vt,Ot.ForwardRef=Ht,Ot.Fragment=_t,Ot.Lazy=Yt,Ot.Memo=Gt,Ot.Portal=Bt,Ot.Profiler=Nt,Ot.StrictMode=qt,Ot.Suspense=Ut,Ot.SuspenseList=Wt,Ot.isAsyncMode=function(){return!1},Ot.isConcurrentMode=function(){return!1},Ot.isContextConsumer=function(e){return Zt(e)===jt},Ot.isContextProvider=function(e){return Zt(e)===zt},Ot.isElement=function(e){return\"object\"==typeof e&&null!==e&&e.$$typeof===Vt},Ot.isForwardRef=function(e){return Zt(e)===Ht},Ot.isFragment=function(e){return Zt(e)===_t},Ot.isLazy=function(e){return Zt(e)===Yt},Ot.isMemo=function(e){return Zt(e)===Gt},Ot.isPortal=function(e){return Zt(e)===Bt},Ot.isProfiler=function(e){return Zt(e)===Nt},Ot.isStrictMode=function(e){return Zt(e)===qt},Ot.isSuspense=function(e){return Zt(e)===Ut},Ot.isSuspenseList=function(e){return Zt(e)===Wt},Ot.isValidElementType=function(e){return\"string\"==typeof e||\"function\"==typeof e||e===_t||e===Nt||e===qt||e===Ut||e===Wt||e===Xt||\"object\"==typeof e&&null!==e&&(e.$$typeof===Yt||e.$$typeof===Gt||e.$$typeof===zt||e.$$typeof===jt||e.$$typeof===Ht||e.$$typeof===$t||void 0!==e.getModuleId)},Ot.typeOf=Zt,Ft.exports=Ot;var Kt=Ft.exports,Jt=function(){return Jt=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Jt.apply(this,arguments)};function Qt(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)(r||!(o in t))&&(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))}var en=\"-ms-\",tn=\"-moz-\",nn=\"-webkit-\",rn=\"comm\",on=\"rule\",an=\"decl\",sn=\"@import\",ln=\"@keyframes\",cn=\"@layer\",un=Math.abs,dn=String.fromCharCode,hn=Object.assign;function pn(e){return e.trim()}function fn(e,t){return(e=t.exec(e))?e[0]:e}function gn(e,t,n){return e.replace(t,n)}function mn(e,t,n){return e.indexOf(t,n)}function vn(e,t){return 0|e.charCodeAt(t)}function bn(e,t,n){return e.slice(t,n)}function yn(e){return e.length}function wn(e){return e.length}function xn(e,t){return t.push(e),e}function kn(e,t){return e.filter((function(e){return!fn(e,t)}))}var Sn=1,En=1,An=0,Pn=0,Tn=0,Cn=\"\";function Rn(e,t,n,r,o,i,a,s){return{value:e,root:t,parent:n,type:r,props:o,children:i,line:Sn,column:En,length:a,return:\"\",siblings:s}}function Ln(e,t){return hn(Rn(\"\",null,null,\"\",null,null,0,e.siblings),e,{length:-e.length},t)}function Dn(e){for(;e.root;)e=Ln(e.root,{children:[e]});xn(e,e.siblings)}function $n(){return Tn=Pn<An?vn(Cn,Pn++):0,En++,10===Tn&&(En=1,Sn++),Tn}function Mn(){return vn(Cn,Pn)}function Fn(){return Pn}function On(e,t){return bn(Cn,e,t)}function Vn(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function Bn(e){return pn(On(Pn-1,Nn(91===e?e+2:40===e?e+1:e)))}function _n(e){for(;(Tn=Mn())&&Tn<33;)$n();return Vn(e)>2||Vn(Tn)>3?\"\":\" \"}function qn(e,t){for(;--t&&$n()&&!(Tn<48||Tn>102||Tn>57&&Tn<65||Tn>70&&Tn<97););return On(e,Fn()+(t<6&&32==Mn()&&32==$n()))}function Nn(e){for(;$n();)switch(Tn){case e:return Pn;case 34:case 39:34!==e&&39!==e&&Nn(Tn);break;case 40:41===e&&Nn(e);break;case 92:$n()}return Pn}function zn(e,t){for(;$n()&&e+Tn!==57&&(e+Tn!==84||47!==Mn()););return\"/*\"+On(t,Pn-1)+\"*\"+dn(47===e?e:$n())}function jn(e){for(;!Vn(Mn());)$n();return On(e,Pn)}function In(e){return function(e){return Cn=\"\",e}(Hn(\"\",null,null,null,[\"\"],e=function(e){return Sn=En=1,An=yn(Cn=e),Pn=0,[]}(e),0,[0],e))}function Hn(e,t,n,r,o,i,a,s,l){for(var c=0,u=0,d=a,h=0,p=0,f=0,g=1,m=1,v=1,b=0,y=\"\",w=o,x=i,k=r,S=y;m;)switch(f=b,b=$n()){case 40:if(108!=f&&58==vn(S,d-1)){-1!=mn(S+=gn(Bn(b),\"&\",\"&\\f\"),\"&\\f\",un(c?s[c-1]:0))&&(v=-1);break}case 34:case 39:case 91:S+=Bn(b);break;case 9:case 10:case 13:case 32:S+=_n(f);break;case 92:S+=qn(Fn()-1,7);continue;case 47:switch(Mn()){case 42:case 47:xn(Wn(zn($n(),Fn()),t,n,l),l);break;default:S+=\"/\"}break;case 123*g:s[c++]=yn(S)*v;case 125*g:case 59:case 0:switch(b){case 0:case 125:m=0;case 59+u:-1==v&&(S=gn(S,/\\f/g,\"\")),p>0&&yn(S)-d&&xn(p>32?Gn(S+\";\",r,n,d-1,l):Gn(gn(S,\" \",\"\")+\";\",r,n,d-2,l),l);break;case 59:S+=\";\";default:if(xn(k=Un(S,t,n,c,u,o,s,y,w=[],x=[],d,i),i),123===b)if(0===u)Hn(S,t,k,k,w,i,d,s,x);else switch(99===h&&110===vn(S,3)?100:h){case 100:case 108:case 109:case 115:Hn(e,k,k,r&&xn(Un(e,k,k,0,0,o,s,y,o,w=[],d,x),x),o,x,d,s,r?w:x);break;default:Hn(S,k,k,k,[\"\"],x,0,s,x)}}c=u=p=0,g=v=1,y=S=\"\",d=a;break;case 58:d=1+yn(S),p=f;default:if(g<1)if(123==b)--g;else if(125==b&&0==g++&&125==(Tn=Pn>0?vn(Cn,--Pn):0,En--,10===Tn&&(En=1,Sn--),Tn))continue;switch(S+=dn(b),b*g){case 38:v=u>0?1:(S+=\"\\f\",-1);break;case 44:s[c++]=(yn(S)-1)*v,v=1;break;case 64:45===Mn()&&(S+=Bn($n())),h=Mn(),u=d=yn(y=S+=jn(Fn())),b++;break;case 45:45===f&&2==yn(S)&&(g=0)}}return i}function Un(e,t,n,r,o,i,a,s,l,c,u,d){for(var h=o-1,p=0===o?i:[\"\"],f=wn(p),g=0,m=0,v=0;g<r;++g)for(var b=0,y=bn(e,h+1,h=un(m=a[g])),w=e;b<f;++b)(w=pn(m>0?p[b]+\" \"+y:gn(y,/&\\f/g,p[b])))&&(l[v++]=w);return Rn(e,t,n,0===o?on:s,l,c,u,d)}function Wn(e,t,n,r){return Rn(e,t,n,rn,dn(Tn),bn(e,2,-2),0,r)}function Gn(e,t,n,r,o){return Rn(e,t,n,an,bn(e,0,r),bn(e,r+1,-1),r,o)}function Yn(e,t,n){switch(function(e,t){return 45^vn(e,0)?(((t<<2^vn(e,0))<<2^vn(e,1))<<2^vn(e,2))<<2^vn(e,3):0}(e,t)){case 5103:return nn+\"print-\"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return nn+e+e;case 4789:return tn+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return nn+e+tn+e+en+e+e;case 5936:switch(vn(e,t+11)){case 114:return nn+e+en+gn(e,/[svh]\\w+-[tblr]{2}/,\"tb\")+e;case 108:return nn+e+en+gn(e,/[svh]\\w+-[tblr]{2}/,\"tb-rl\")+e;case 45:return nn+e+en+gn(e,/[svh]\\w+-[tblr]{2}/,\"lr\")+e}case 6828:case 4268:case 2903:return nn+e+en+e+e;case 6165:return nn+e+en+\"flex-\"+e+e;case 5187:return nn+e+gn(e,/(\\w+).+(:[^]+)/,nn+\"box-$1$2\"+en+\"flex-$1$2\")+e;case 5443:return nn+e+en+\"flex-item-\"+gn(e,/flex-|-self/g,\"\")+(fn(e,/flex-|baseline/)?\"\":en+\"grid-row-\"+gn(e,/flex-|-self/g,\"\"))+e;case 4675:return nn+e+en+\"flex-line-pack\"+gn(e,/align-content|flex-|-self/g,\"\")+e;case 5548:return nn+e+en+gn(e,\"shrink\",\"negative\")+e;case 5292:return nn+e+en+gn(e,\"basis\",\"preferred-size\")+e;case 6060:return nn+\"box-\"+gn(e,\"-grow\",\"\")+nn+e+en+gn(e,\"grow\",\"positive\")+e;case 4554:return nn+gn(e,/([^-])(transform)/g,\"$1\"+nn+\"$2\")+e;case 6187:return gn(gn(gn(e,/(zoom-|grab)/,nn+\"$1\"),/(image-set)/,nn+\"$1\"),e,\"\")+e;case 5495:case 3959:return gn(e,/(image-set\\([^]*)/,nn+\"$1$`$1\");case 4968:return gn(gn(e,/(.+:)(flex-)?(.*)/,nn+\"box-pack:$3\"+en+\"flex-pack:$3\"),/s.+-b[^;]+/,\"justify\")+nn+e+e;case 4200:if(!fn(e,/flex-|baseline/))return en+\"grid-column-align\"+bn(e,t)+e;break;case 2592:case 3360:return en+gn(e,\"template-\",\"\")+e;case 4384:case 3616:return n&&n.some((function(e,n){return t=n,fn(e.props,/grid-\\w+-end/)}))?~mn(e+(n=n[t].value),\"span\",0)?e:en+gn(e,\"-start\",\"\")+e+en+\"grid-row-span:\"+(~mn(n,\"span\",0)?fn(n,/\\d+/):+fn(n,/\\d+/)-+fn(e,/\\d+/))+\";\":en+gn(e,\"-start\",\"\")+e;case 4896:case 4128:return n&&n.some((function(e){return fn(e.props,/grid-\\w+-start/)}))?e:en+gn(gn(e,\"-end\",\"-span\"),\"span \",\"\")+e;case 4095:case 3583:case 4068:case 2532:return gn(e,/(.+)-inline(.+)/,nn+\"$1$2\")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(yn(e)-1-t>6)switch(vn(e,t+1)){case 109:if(45!==vn(e,t+4))break;case 102:return gn(e,/(.+:)(.+)-([^]+)/,\"$1\"+nn+\"$2-$3$1\"+tn+(108==vn(e,t+3)?\"$3\":\"$2-$3\"))+e;case 115:return~mn(e,\"stretch\",0)?Yn(gn(e,\"stretch\",\"fill-available\"),t,n)+e:e}break;case 5152:case 5920:return gn(e,/(.+?):(\\d+)(\\s*\\/\\s*(span)?\\s*(\\d+))?(.*)/,(function(t,n,r,o,i,a,s){return en+n+\":\"+r+s+(o?en+n+\"-span:\"+(i?a:+a-+r)+s:\"\")+e}));case 4949:if(121===vn(e,t+6))return gn(e,\":\",\":\"+nn)+e;break;case 6444:switch(vn(e,45===vn(e,14)?18:11)){case 120:return gn(e,/(.+:)([^;\\s!]+)(;|(\\s+)?!.+)?/,\"$1\"+nn+(45===vn(e,14)?\"inline-\":\"\")+\"box$3$1\"+nn+\"$2$3$1\"+en+\"$2box$3\")+e;case 100:return gn(e,\":\",\":\"+en)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return gn(e,\"scroll-\",\"scroll-snap-\")+e}return e}function Xn(e,t){for(var n=\"\",r=0;r<e.length;r++)n+=t(e[r],r,e,t)||\"\";return n}function Zn(e,t,n,r){switch(e.type){case cn:if(e.children.length)break;case sn:case an:return e.return=e.return||e.value;case rn:return\"\";case ln:return e.return=e.value+\"{\"+Xn(e.children,r)+\"}\";case on:if(!yn(e.value=e.props.join(\",\")))return\"\"}return yn(n=Xn(e.children,r))?e.return=e.value+\"{\"+n+\"}\":\"\"}function Kn(e,t,n,r){if(e.length>-1&&!e.return)switch(e.type){case an:return void(e.return=Yn(e.value,e.length,n));case ln:return Xn([Ln(e,{value:gn(e.value,\"@\",\"@\"+nn)})],r);case on:if(e.length)return function(e,t){return e.map(t).join(\"\")}(n=e.props,(function(t){switch(fn(t,r=/(::plac\\w+|:read-\\w+)/)){case\":read-only\":case\":read-write\":Dn(Ln(e,{props:[gn(t,/:(read-\\w+)/,\":\"+tn+\"$1\")]})),Dn(Ln(e,{props:[t]})),hn(e,{props:kn(n,r)});break;case\"::placeholder\":Dn(Ln(e,{props:[gn(t,/:(plac\\w+)/,\":\"+nn+\"input-$1\")]})),Dn(Ln(e,{props:[gn(t,/:(plac\\w+)/,\":\"+tn+\"$1\")]})),Dn(Ln(e,{props:[gn(t,/:(plac\\w+)/,en+\"input-$1\")]})),Dn(Ln(e,{props:[t]})),hn(e,{props:kn(n,r)})}return\"\"}))}}var Jn={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},Qn=typeof process<\"u\"&&void 0!==process.env&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||\"data-styled\",er=\"active\",tr=\"data-styled-version\",nr=\"6.1.11\",rr=\"/*!sc*/\\n\",or=typeof window<\"u\"&&\"HTMLElement\"in window,ir=!!(\"boolean\"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:typeof process<\"u\"&&void 0!==process.env&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&\"\"!==process.env.REACT_APP_SC_DISABLE_SPEEDY?\"false\"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:typeof process<\"u\"&&void 0!==process.env&&void 0!==process.env.SC_DISABLE_SPEEDY&&\"\"!==process.env.SC_DISABLE_SPEEDY&&\"false\"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY),ar=Object.freeze([]),sr=Object.freeze({});var lr=new Set([\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"base\",\"bdi\",\"bdo\",\"big\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\",\"mark\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\",\"u\",\"ul\",\"use\",\"var\",\"video\",\"wbr\",\"circle\",\"clipPath\",\"defs\",\"ellipse\",\"foreignObject\",\"g\",\"image\",\"line\",\"linearGradient\",\"marker\",\"mask\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialGradient\",\"rect\",\"stop\",\"svg\",\"text\",\"tspan\"]),cr=/[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g,ur=/(^-|-$)/g;function dr(e){return e.replace(cr,\"-\").replace(ur,\"\")}var hr=/(a)(d)/gi,pr=52,fr=function(e){return String.fromCharCode(e+(e>25?39:97))};function gr(e){var t,n=\"\";for(t=Math.abs(e);t>pr;t=t/pr|0)n=fr(t%pr)+n;return(fr(t%pr)+n).replace(hr,\"$1-$2\")}var mr,vr=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},br=function(e){return vr(5381,e)};function yr(e){return gr(br(e)>>>0)}function wr(e){return\"string\"==typeof e&&!0}var xr=\"function\"==typeof Symbol&&Symbol.for,kr=xr?Symbol.for(\"react.memo\"):60115,Sr=xr?Symbol.for(\"react.forward_ref\"):60112,Er={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},Ar={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Pr={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},Tr=((mr={})[Sr]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},mr[kr]=Pr,mr);function Cr(e){return(\"type\"in(t=e)&&t.type.$$typeof)===kr?Pr:\"$$typeof\"in e?Tr[e.$$typeof]:Er;var t}var Rr=Object.defineProperty,Lr=Object.getOwnPropertyNames,Dr=Object.getOwnPropertySymbols,$r=Object.getOwnPropertyDescriptor,Mr=Object.getPrototypeOf,Fr=Object.prototype;function Or(e,t,n){if(\"string\"!=typeof t){if(Fr){var r=Mr(t);r&&r!==Fr&&Or(e,r,n)}var o=Lr(t);Dr&&(o=o.concat(Dr(t)));for(var i=Cr(e),a=Cr(t),s=0;s<o.length;++s){var l=o[s];if(!(l in Ar||n&&n[l]||a&&l in a||i&&l in i)){var c=$r(t,l);try{Rr(e,l,c)}catch{}}}}return e}function Vr(e){return\"function\"==typeof e}function Br(e){return\"object\"==typeof e&&\"styledComponentId\"in e}function _r(e,t){return e&&t?\"\".concat(e,\" \").concat(t):e||t||\"\"}function qr(e,t){if(0===e.length)return\"\";for(var n=e[0],r=1;r<e.length;r++)n+=e[r];return n}function Nr(e){return null!==e&&\"object\"==typeof e&&e.constructor.name===Object.name&&!(\"props\"in e&&e.$$typeof)}function zr(e,t,n){if(void 0===n&&(n=!1),!n&&!Nr(e)&&!Array.isArray(e))return t;if(Array.isArray(t))for(var r=0;r<t.length;r++)e[r]=zr(e[r],t[r]);else if(Nr(t))for(var r in t)e[r]=zr(e[r],t[r]);return e}function jr(e,t){Object.defineProperty(e,\"toString\",{value:t})}function Ir(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return new Error(\"An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#\".concat(e,\" for more information.\").concat(t.length>0?\" Args: \".concat(t.join(\", \")):\"\"))}var Hr=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return e.prototype.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},e.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;)if((o<<=1)<0)throw Ir(16,\"\".concat(e));this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var i=r;i<o;i++)this.groupSizes[i]=0}for(var a=this.indexOfGroup(e+1),s=(i=0,t.length);i<s;i++)this.tag.insertRule(a,t[i])&&(this.groupSizes[e]++,a++)},e.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++)this.tag.deleteRule(n)}},e.prototype.getGroup=function(e){var t=\"\";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,i=r;i<o;i++)t+=\"\".concat(this.tag.getRule(i)).concat(rr);return t},e}(),Ur=new Map,Wr=new Map,Gr=1,Yr=function(e){if(Ur.has(e))return Ur.get(e);for(;Wr.has(Gr);)Gr++;var t=Gr++;return Ur.set(e,t),Wr.set(t,e),t},Xr=function(e,t){Gr=t+1,Ur.set(e,t),Wr.set(t,e)},Zr=\"style[\".concat(Qn,\"][\").concat(tr,'=\"').concat(nr,'\"]'),Kr=new RegExp(\"^\".concat(Qn,'\\\\.g(\\\\d+)\\\\[id=\"([\\\\w\\\\d-]+)\"\\\\].*?\"([^\"]*)')),Jr=function(e,t,n){for(var r,o=n.split(\",\"),i=0,a=o.length;i<a;i++)(r=o[i])&&e.registerName(t,r)},Qr=function(e,t){for(var n,r=(null!==(n=t.textContent)&&void 0!==n?n:\"\").split(rr),o=[],i=0,a=r.length;i<a;i++){var s=r[i].trim();if(s){var l=s.match(Kr);if(l){var c=0|parseInt(l[1],10),u=l[2];0!==c&&(Xr(u,c),Jr(e,u,l[3]),e.getTag().insertRules(c,o)),o.length=0}else o.push(s)}}};var eo=function(e){var t,n,r=document.head,o=e||r,i=document.createElement(\"style\"),a=(t=o,(n=Array.from(t.querySelectorAll(\"style[\".concat(Qn,\"]\"))))[n.length-1]),s=void 0!==a?a.nextSibling:null;i.setAttribute(Qn,er),i.setAttribute(tr,nr);var l= true?__webpack_require__.nc:0;return l&&i.setAttribute(\"nonce\",l),o.insertBefore(i,s),i},to=function(){function e(e){this.element=eo(e),this.element.appendChild(document.createTextNode(\"\")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o}throw Ir(17)}(this.element),this.length=0}return e.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch{return!1}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},e.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:\"\"},e}(),no=function(){function e(e){this.element=eo(e),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t);return this.element.insertBefore(n,this.nodes[e]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:\"\"},e}(),ro=function(){function e(e){this.rules=[],this.length=0}return e.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:\"\"},e}(),oo=or,io={isServer:!or,useCSSOMInjection:!ir},ao=function(){function e(e,t,n){void 0===e&&(e=sr),void 0===t&&(t={});var r=this;this.options=Jt(Jt({},io),e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&or&&oo&&(oo=!1,function(e){for(var t=document.querySelectorAll(Zr),n=0,r=t.length;n<r;n++){var o=t[n];o&&o.getAttribute(Qn)!==er&&(Qr(e,o),o.parentNode&&o.parentNode.removeChild(o))}}(this)),jr(this,(function(){return function(e){for(var t=e.getTag(),n=t.length,r=\"\",o=function(n){var o,i=(o=n,Wr.get(o));if(void 0===i)return\"continue\";var a=e.names.get(i),s=t.getGroup(n);if(void 0===a||0===s.length)return\"continue\";var l=\"\".concat(Qn,\".g\").concat(n,'[id=\"').concat(i,'\"]'),c=\"\";void 0!==a&&a.forEach((function(e){e.length>0&&(c+=\"\".concat(e,\",\"))})),r+=\"\".concat(s).concat(l,'{content:\"').concat(c,'\"}').concat(rr)},i=0;i<n;i++)o(i);return r}(r)}))}return e.registerId=function(e){return Yr(e)},e.prototype.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(Jt(Jt({},this.options),t),this.gs,n&&this.names||void 0)},e.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},e.prototype.getTag=function(){return this.tag||(this.tag=(e=this.options,t=e.useCSSOMInjection,n=e.target,r=e.isServer?new ro(n):t?new to(n):new no(n),new Hr(r)));var e,t,n,r},e.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},e.prototype.registerName=function(e,t){if(Yr(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},e.prototype.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(Yr(e),n)},e.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},e.prototype.clearRules=function(e){this.getTag().clearGroup(Yr(e)),this.clearNames(e)},e.prototype.clearTag=function(){this.tag=void 0},e}(),so=/&/g,lo=/^\\s*\\/\\/.*$/gm;function co(e,t){return e.map((function(e){return\"rule\"===e.type&&(e.value=\"\".concat(t,\" \").concat(e.value),e.value=e.value.replaceAll(\",\",\",\".concat(t,\" \")),e.props=e.props.map((function(e){return\"\".concat(t,\" \").concat(e)}))),Array.isArray(e.children)&&\"@keyframes\"!==e.type&&(e.children=co(e.children,t)),e}))}var uo=new ao,ho=function(e){var t,n,r,o=sr,i=o.options,a=void 0===i?sr:i,s=o.plugins,l=void 0===s?ar:s,c=function(e,r,o){return o.startsWith(n)&&o.endsWith(n)&&o.replaceAll(n,\"\").length>0?\".\".concat(t):e},u=l.slice();u.push((function(e){e.type===on&&e.value.includes(\"&\")&&(e.props[0]=e.props[0].replace(so,n).replace(r,c))})),a.prefix&&u.push(Kn),u.push(Zn);var d=function(e,o,i,s){void 0===o&&(o=\"\"),void 0===i&&(i=\"\"),void 0===s&&(s=\"&\"),t=s,n=o,r=new RegExp(\"\\\\\".concat(n,\"\\\\b\"),\"g\");var l=e.replace(lo,\"\"),c=In(i||o?\"\".concat(i,\" \").concat(o,\" { \").concat(l,\" }\"):l);a.namespace&&(c=co(c,a.namespace));var d,h,p,f=[];return Xn(c,(d=u.concat((p=function(e){return f.push(e)},function(e){e.root||(e=e.return)&&p(e)})),h=wn(d),function(e,t,n,r){for(var o=\"\",i=0;i<h;i++)o+=d[i](e,t,n,r)||\"\";return o})),f};return d.hash=l.length?l.reduce((function(e,t){return t.name||Ir(15),vr(e,t.name)}),5381).toString():\"\",d}(),po=react__WEBPACK_IMPORTED_MODULE_1__.createContext({shouldForwardProp:void 0,styleSheet:uo,stylis:ho});function fo(){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(po)}react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);var go=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=ho);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,\"@keyframes\"))},this.name=e,this.id=\"sc-keyframes-\".concat(e),this.rules=t,jr(this,(function(){throw Ir(12,String(n.name))}))}return e.prototype.getName=function(e){return void 0===e&&(e=ho),this.name+e.hash},e}(),mo=function(e){return e>=\"A\"&&e<=\"Z\"};function vo(e){for(var t=\"\",n=0;n<e.length;n++){var r=e[n];if(1===n&&\"-\"===r&&\"-\"===e[0])return e;mo(r)?t+=\"-\"+r.toLowerCase():t+=r}return t.startsWith(\"ms-\")?\"-\"+t:t}var bo=function(e){return null==e||!1===e||\"\"===e},yo=function(e){var t,n,r=[];for(var o in e){var i=e[o];e.hasOwnProperty(o)&&!bo(i)&&(Array.isArray(i)&&i.isCss||Vr(i)?r.push(\"\".concat(vo(o),\":\"),i,\";\"):Nr(i)?r.push.apply(r,Qt(Qt([\"\".concat(o,\" {\")],yo(i),!1),[\"}\"],!1)):r.push(\"\".concat(vo(o),\": \").concat((t=o,null==(n=i)||\"boolean\"==typeof n||\"\"===n?\"\":\"number\"!=typeof n||0===n||t in Jn||t.startsWith(\"--\")?String(n).trim():\"\".concat(n,\"px\")),\";\")))}return r};function wo(e,t,n,r){return bo(e)?[]:Br(e)?[\".\".concat(e.styledComponentId)]:Vr(e)?!Vr(o=e)||o.prototype&&o.prototype.isReactComponent||!t?[e]:wo(e(t),t,n,r):e instanceof go?n?(e.inject(n,r),[e.getName(r)]):[e]:Nr(e)?yo(e):Array.isArray(e)?Array.prototype.concat.apply(ar,e.map((function(e){return wo(e,t,n,r)}))):[e.toString()];var o}var xo=br(nr),ko=function(){function e(e,t,n){this.rules=e,this.staticRulesId=\"\",this.isStatic=(void 0===n||n.isStatic)&&function(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(Vr(n)&&!Br(n))return!1}return!0}(e),this.componentId=t,this.baseHash=vr(xo,t),this.baseStyle=n,ao.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,n):\"\";if(this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))r=_r(r,this.staticRulesId);else{var o=qr(wo(this.rules,e,t,n)),i=gr(vr(this.baseHash,o)>>>0);if(!t.hasNameForId(this.componentId,i)){var a=n(o,\".\".concat(i),void 0,this.componentId);t.insertRules(this.componentId,i,a)}r=_r(r,i),this.staticRulesId=i}else{for(var s=vr(this.baseHash,n.hash),l=\"\",c=0;c<this.rules.length;c++){var u=this.rules[c];if(\"string\"==typeof u)l+=u;else if(u){var d=qr(wo(u,e,t,n));s=vr(s,d+c),l+=d}}if(l){var h=gr(s>>>0);t.hasNameForId(this.componentId,h)||t.insertRules(this.componentId,h,n(l,\".\".concat(h),void 0,this.componentId)),r=_r(r,h)}}return r},e}(),So=react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);function Eo(e){var t=react__WEBPACK_IMPORTED_MODULE_1__.useContext(So),n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return function(e,t){if(!e)throw Ir(14);if(Vr(e))return e(t);if(Array.isArray(e)||\"object\"!=typeof e)throw Ir(8);return t?Jt(Jt({},t),e):e}(e.theme,t)}),[e.theme,t]);return e.children?react__WEBPACK_IMPORTED_MODULE_1__.createElement(So.Provider,{value:n},e.children):null}var Ao={};function Po(e,t,n){var r,i=Br(e),a=e,s=!wr(e),c=t.attrs,u=void 0===c?ar:c,d=t.componentId,h=void 0===d?function(e,t){var n=\"string\"!=typeof e?\"sc\":dr(e);Ao[n]=(Ao[n]||0)+1;var r=\"\".concat(n,\"-\").concat(yr(nr+n+Ao[n]));return t?\"\".concat(t,\"-\").concat(r):r}(t.displayName,t.parentComponentId):d,p=t.displayName,f=void 0===p?wr(r=e)?\"styled.\".concat(r):\"Styled(\".concat(function(e){return e.displayName||e.name||\"Component\"}(r),\")\"):p,g=t.displayName&&t.componentId?\"\".concat(dr(t.displayName),\"-\").concat(t.componentId):t.componentId||h,m=i&&a.attrs?a.attrs.concat(u).filter(Boolean):u,v=t.shouldForwardProp;if(i&&a.shouldForwardProp){var b=a.shouldForwardProp;if(t.shouldForwardProp){var y=t.shouldForwardProp;v=function(e,t){return b(e,t)&&y(e,t)}}else v=b}var w=new ko(n,g,i?a.componentStyle:void 0);function x(e,t){return function(e,t,n){var r=e.attrs,i=e.componentStyle,a=e.defaultProps,s=e.foldedComponentIds,c=e.styledComponentId,u=e.target,d=react__WEBPACK_IMPORTED_MODULE_1__.useContext(So),h=fo(),p=e.shouldForwardProp||h.shouldForwardProp,f=function(e,t,n){return void 0===n&&(n=sr),e.theme!==n.theme&&e.theme||t||n.theme}(t,d,a)||sr,g=function(e,t,n){for(var r,o=Jt(Jt({},t),{className:void 0,theme:n}),i=0;i<e.length;i+=1){var a=Vr(r=e[i])?r(o):r;for(var s in a)o[s]=\"className\"===s?_r(o[s],a[s]):\"style\"===s?Jt(Jt({},o[s]),a[s]):a[s]}return t.className&&(o.className=_r(o.className,t.className)),o}(r,t,f),m=g.as||u,v={};for(var b in g)void 0===g[b]||\"$\"===b[0]||\"as\"===b||\"theme\"===b&&g.theme===f||(\"forwardedAs\"===b?v.as=g.forwardedAs:p&&!p(b,m)||(v[b]=g[b]));var y,w,x,k=(y=i,w=g,x=fo(),y.generateAndInjectStyles(w,x.styleSheet,x.stylis)),S=_r(s,c);return k&&(S+=\" \"+k),g.className&&(S+=\" \"+g.className),v[wr(m)&&!lr.has(m)?\"class\":\"className\"]=S,v.ref=n,(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(m,v)}(k,e,t)}x.displayName=f;var k=react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(x);return k.attrs=m,k.componentStyle=w,k.displayName=f,k.shouldForwardProp=v,k.foldedComponentIds=i?_r(a.foldedComponentIds,a.styledComponentId):\"\",k.styledComponentId=g,k.target=i?a.target:e,Object.defineProperty(k,\"defaultProps\",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=i?function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0,o=t;r<o.length;r++)zr(e,o[r],!0);return e}({},a.defaultProps,e):e}}),jr(k,(function(){return\".\".concat(k.styledComponentId)})),s&&Or(k,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),k}function To(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n}var Co=function(e){return Object.assign(e,{isCss:!0})};function Ro(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(Vr(e)||Nr(e))return Co(wo(To(ar,Qt([e],t,!0))));var r=e;return 0===t.length&&1===r.length&&\"string\"==typeof r[0]?wo(r):Co(wo(To(r,t)))}function Lo(e,t,n){if(void 0===n&&(n=sr),!t)throw Ir(1,t);var r=function(r){for(var o=[],i=1;i<arguments.length;i++)o[i-1]=arguments[i];return e(t,n,Ro.apply(void 0,Qt([r],o,!1)))};return r.attrs=function(r){return Lo(e,t,Jt(Jt({},n),{attrs:Array.prototype.concat(n.attrs,r).filter(Boolean)}))},r.withConfig=function(r){return Lo(e,t,Jt(Jt({},n),r))},r}var Do=function(e){return Lo(Po,e)},$o=Do;function Mo(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=qr(Ro.apply(void 0,Qt([e],t,!1))),o=yr(r);return new go(o,r)}lr.forEach((function(e){$o[e]=Do(e)}));var Fo=function(){for(var e={},t=0;t<arguments.length;t++){var n=arguments[t];for(var r in n)Oo.call(n,r)&&(e[r]=n[r])}return e},Oo=Object.prototype.hasOwnProperty;var Vo=_o,Bo=_o.prototype;function _o(e,t,n){this.property=e,this.normal=t,n&&(this.space=n)}Bo.space=null,Bo.normal={},Bo.property={};var qo=Fo,No=Vo,zo=function(e){for(var t,n,r=e.length,o=[],i=[],a=-1;++a<r;)t=e[a],o.push(t.property),i.push(t.normal),n=t.space;return new No(qo.apply(null,o),qo.apply(null,i),n)};var jo=function(e){return e.toLowerCase()};var Io=Uo,Ho=Uo.prototype;function Uo(e,t){this.property=e,this.attribute=t}Ho.space=null,Ho.attribute=null,Ho.property=null,Ho.boolean=!1,Ho.booleanish=!1,Ho.overloadedBoolean=!1,Ho.number=!1,Ho.commaSeparated=!1,Ho.spaceSeparated=!1,Ho.commaOrSpaceSeparated=!1,Ho.mustUseProperty=!1,Ho.defined=!1;var Wo={},Go=0;function Yo(){return Math.pow(2,++Go)}Wo.boolean=Yo(),Wo.booleanish=Yo(),Wo.overloadedBoolean=Yo(),Wo.number=Yo(),Wo.spaceSeparated=Yo(),Wo.commaSeparated=Yo(),Wo.commaOrSpaceSeparated=Yo();var Xo=Io,Zo=Wo,Ko=ei;ei.prototype=new Xo,ei.prototype.defined=!0;var Jo=[\"boolean\",\"booleanish\",\"overloadedBoolean\",\"number\",\"commaSeparated\",\"spaceSeparated\",\"commaOrSpaceSeparated\"],Qo=Jo.length;function ei(e,t,n,r){var o,i=-1;for(ti(this,\"space\",r),Xo.call(this,e,t);++i<Qo;)ti(this,o=Jo[i],(n&Zo[o])===Zo[o])}function ti(e,t,n){n&&(e[t]=n)}var ni=jo,ri=Vo,oi=Ko,ii=function(e){var t,n,r=e.space,o=e.mustUseProperty||[],i=e.attributes||{},a=e.properties,s=e.transform,l={},c={};for(t in a)n=new oi(t,s(i,t),a[t],r),-1!==o.indexOf(t)&&(n.mustUseProperty=!0),l[t]=n,c[ni(t)]=t,c[ni(n.attribute)]=t;return new ri(l,c,r)};var ai=ii({space:\"xlink\",transform:function(e,t){return\"xlink:\"+t.slice(5).toLowerCase()},properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}});var si=ii({space:\"xml\",transform:function(e,t){return\"xml:\"+t.slice(3).toLowerCase()},properties:{xmlLang:null,xmlBase:null,xmlSpace:null}});var li=function(e,t){return t in e?e[t]:t},ci=function(e,t){return li(e,t.toLowerCase())};var ui=ii({space:\"xmlns\",attributes:{xmlnsxlink:\"xmlns:xlink\"},transform:ci,properties:{xmlns:null,xmlnsXLink:null}}),di=Wo,hi=ii,pi=di.booleanish,fi=di.number,gi=di.spaceSeparated,mi=hi({transform:function(e,t){return\"role\"===t?t:\"aria-\"+t.slice(4).toLowerCase()},properties:{ariaActiveDescendant:null,ariaAtomic:pi,ariaAutoComplete:null,ariaBusy:pi,ariaChecked:pi,ariaColCount:fi,ariaColIndex:fi,ariaColSpan:fi,ariaControls:gi,ariaCurrent:null,ariaDescribedBy:gi,ariaDetails:null,ariaDisabled:pi,ariaDropEffect:gi,ariaErrorMessage:null,ariaExpanded:pi,ariaFlowTo:gi,ariaGrabbed:pi,ariaHasPopup:null,ariaHidden:pi,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:gi,ariaLevel:fi,ariaLive:null,ariaModal:pi,ariaMultiLine:pi,ariaMultiSelectable:pi,ariaOrientation:null,ariaOwns:gi,ariaPlaceholder:null,ariaPosInSet:fi,ariaPressed:pi,ariaReadOnly:pi,ariaRelevant:null,ariaRequired:pi,ariaRoleDescription:gi,ariaRowCount:fi,ariaRowIndex:fi,ariaRowSpan:fi,ariaSelected:pi,ariaSetSize:fi,ariaSort:null,ariaValueMax:fi,ariaValueMin:fi,ariaValueNow:fi,ariaValueText:null,role:null}});var vi=Wo,bi=ii,yi=ci,wi=vi.boolean,xi=vi.overloadedBoolean,ki=vi.booleanish,Si=vi.number,Ei=vi.spaceSeparated,Ai=vi.commaSeparated,Pi=zo([si,ai,ui,mi,bi({space:\"html\",attributes:{acceptcharset:\"accept-charset\",classname:\"class\",htmlfor:\"for\",httpequiv:\"http-equiv\"},transform:yi,mustUseProperty:[\"checked\",\"multiple\",\"muted\",\"selected\"],properties:{abbr:null,accept:Ai,acceptCharset:Ei,accessKey:Ei,action:null,allow:null,allowFullScreen:wi,allowPaymentRequest:wi,allowUserMedia:wi,alt:null,as:null,async:wi,autoCapitalize:null,autoComplete:Ei,autoFocus:wi,autoPlay:wi,capture:wi,charSet:null,checked:wi,cite:null,className:Ei,cols:Si,colSpan:null,content:null,contentEditable:ki,controls:wi,controlsList:Ei,coords:Si|Ai,crossOrigin:null,data:null,dateTime:null,decoding:null,default:wi,defer:wi,dir:null,dirName:null,disabled:wi,download:xi,draggable:ki,encType:null,enterKeyHint:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:wi,formTarget:null,headers:Ei,height:Si,hidden:wi,high:Si,href:null,hrefLang:null,htmlFor:Ei,httpEquiv:Ei,id:null,imageSizes:null,imageSrcSet:Ai,inputMode:null,integrity:null,is:null,isMap:wi,itemId:null,itemProp:Ei,itemRef:Ei,itemScope:wi,itemType:Ei,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:wi,low:Si,manifest:null,max:null,maxLength:Si,media:null,method:null,min:null,minLength:Si,multiple:wi,muted:wi,name:null,nonce:null,noModule:wi,noValidate:wi,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforePrint:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextMenu:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:wi,optimum:Si,pattern:null,ping:Ei,placeholder:null,playsInline:wi,poster:null,preload:null,readOnly:wi,referrerPolicy:null,rel:Ei,required:wi,reversed:wi,rows:Si,rowSpan:Si,sandbox:Ei,scope:null,scoped:wi,seamless:wi,selected:wi,shape:null,size:Si,sizes:null,slot:null,span:Si,spellCheck:ki,src:null,srcDoc:null,srcLang:null,srcSet:Ai,start:Si,step:null,style:null,tabIndex:Si,target:null,title:null,translate:null,type:null,typeMustMatch:wi,useMap:null,value:ki,width:Si,wrap:null,align:null,aLink:null,archive:Ei,axis:null,background:null,bgColor:null,border:Si,borderColor:null,bottomMargin:Si,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:wi,declare:wi,event:null,face:null,frame:null,frameBorder:null,hSpace:Si,leftMargin:Si,link:null,longDesc:null,lowSrc:null,marginHeight:Si,marginWidth:Si,noResize:wi,noHref:wi,noShade:wi,noWrap:wi,object:null,profile:null,prompt:null,rev:null,rightMargin:Si,rules:null,scheme:null,scrolling:ki,standby:null,summary:null,text:null,topMargin:Si,valueType:null,version:null,vAlign:null,vLink:null,vSpace:Si,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:wi,disableRemotePlayback:wi,prefix:null,property:null,results:Si,security:null,unselectable:null}})]),Ti=jo,Ci=Ko,Ri=Io,Li=\"data\",Di=function(e,t){var n=Ti(t),r=t,o=Ri;return n in e.normal?e.property[e.normal[n]]:(n.length>4&&n.slice(0,4)===Li&&$i.test(t)&&(\"-\"===t.charAt(4)?r=function(e){var t=e.slice(5).replace(Mi,Vi);return Li+t.charAt(0).toUpperCase()+t.slice(1)}(t):t=function(e){var t=e.slice(4);return Mi.test(t)?e:(t=t.replace(Fi,Oi),\"-\"!==t.charAt(0)&&(t=\"-\"+t),Li+t)}(t),o=Ci),new o(r,t))},$i=/^data[-\\w.:]+$/i,Mi=/-[a-z]/g,Fi=/[A-Z]/g;function Oi(e){return\"-\"+e.toLowerCase()}function Vi(e){return e.charAt(1).toUpperCase()}var Bi=function(e,t){for(var n,r,o,i=e||\"\",a=t||\"div\",s={},l=0;l<i.length;)_i.lastIndex=l,o=_i.exec(i),(n=i.slice(l,o?o.index:i.length))&&(r?\"#\"===r?s.id=n:s.className?s.className.push(n):s.className=[n]:a=n,l+=n.length),o&&(r=o[0],l++);return{type:\"element\",tagName:a,properties:s,children:[]}},_i=/[#.]/g;var qi={parse:function(e){var t=String(e||Ni).trim();return t===Ni?[]:t.split(ji)},stringify:function(e){return e.join(zi).trim()}},Ni=\"\",zi=\" \",ji=/[ \\t\\n\\r\\f]+/g;var Ii={parse:function(e){for(var t,n=[],r=String(e||Wi),o=r.indexOf(Hi),i=0,a=!1;!a;)-1===o&&(o=r.length,a=!0),((t=r.slice(i,o).trim())||!a)&&n.push(t),i=o+1,o=r.indexOf(Hi,i);return n},stringify:function(e,t){var n=t||{},r=!1===n.padLeft?Wi:Ui,o=n.padRight?Ui:Wi;return e[e.length-1]===Wi&&(e=e.concat(Wi)),e.join(o+Hi+r).trim()}},Hi=\",\",Ui=\" \",Wi=\"\";var Gi=Di,Yi=jo,Xi=Bi,Zi=qi.parse,Ki=Ii.parse,Ji=function(e,t,n){var r=n?function(e){for(var t,n=e.length,r=-1,o={};++r<n;)t=e[r],o[t.toLowerCase()]=t;return o}(n):null;return function(e,n){var i,a=Xi(e,t),s=Array.prototype.slice.call(arguments,2),l=a.tagName.toLowerCase();if(a.tagName=r&&Qi.call(r,l)?r[l]:l,n&&function(e,t){return\"string\"==typeof e||\"length\"in e||function(e,t){var n=t.type;return!(\"input\"===e||!n||\"string\"!=typeof n)&&(\"object\"==typeof t.children&&\"length\"in t.children||(n=n.toLowerCase(),\"button\"===e?\"menu\"!==n&&\"submit\"!==n&&\"reset\"!==n&&\"button\"!==n:\"value\"in t))}(t.tagName,e)}(n,a)&&(s.unshift(n),n=null),n)for(i in n)o(a.properties,i,n[i]);return ea(a.children,s),\"template\"===a.tagName&&(a.content={type:\"root\",children:a.children},a.children=[]),a};function o(t,n,r){var o,i,a;null==r||r!=r||(i=(o=Gi(e,n)).property,\"string\"==typeof(a=r)&&(o.spaceSeparated?a=Zi(a):o.commaSeparated?a=Ki(a):o.commaOrSpaceSeparated&&(a=Zi(Ki(a).join(\" \")))),\"style\"===i&&\"string\"!=typeof r&&(a=function(e){var t,n=[];for(t in e)n.push([t,e[t]].join(\": \"));return n.join(\"; \")}(a)),\"className\"===i&&t.className&&(a=t.className.concat(a)),t[i]=function(e,t,n){var r,o,i;if(\"object\"!=typeof n||!(\"length\"in n))return ta(e,t,n);for(o=n.length,r=-1,i=[];++r<o;)i[r]=ta(e,t,n[r]);return i}(o,i,a))}},Qi={}.hasOwnProperty;function ea(e,t){var n,r;if(\"string\"!=typeof t&&\"number\"!=typeof t)if(\"object\"==typeof t&&\"length\"in t)for(n=-1,r=t.length;++n<r;)ea(e,t[n]);else{if(\"object\"!=typeof t||!(\"type\"in t))throw new Error(\"Expected node, nodes, or string, got `\"+t+\"`\");e.push(t)}else e.push({type:\"text\",value:String(t)})}function ta(e,t,n){var r=n;return e.number||e.positiveNumber?!isNaN(r)&&\"\"!==r&&(r=Number(r)):(e.boolean||e.overloadedBoolean)&&\"string\"==typeof r&&(\"\"===r||Yi(n)===Yi(t))&&(r=!0),r}var na=Ji(Pi,\"div\");na.displayName=\"html\";var ra=na,oa=function(e){var t=\"string\"==typeof e?e.charCodeAt(0):e;return t>=48&&t<=57};var ia=function(e){var t=\"string\"==typeof e?e.charCodeAt(0):e;return t>=97&&t<=122||t>=65&&t<=90},aa=oa;var sa={AEli:\"Æ\",AElig:\"Æ\",AM:\"&\",AMP:\"&\",Aacut:\"Á\",Aacute:\"Á\",Abreve:\"Ă\",Acir:\"Â\",Acirc:\"Â\",Acy:\"А\",Afr:\"𝔄\",Agrav:\"À\",Agrave:\"À\",Alpha:\"Α\",Amacr:\"Ā\",And:\"⩓\",Aogon:\"Ą\",Aopf:\"𝔸\",ApplyFunction:\"⁡\",Arin:\"Å\",Aring:\"Å\",Ascr:\"𝒜\",Assign:\"≔\",Atild:\"Ã\",Atilde:\"Ã\",Aum:\"Ä\",Auml:\"Ä\",Backslash:\"∖\",Barv:\"⫧\",Barwed:\"⌆\",Bcy:\"Б\",Because:\"∵\",Bernoullis:\"ℬ\",Beta:\"Β\",Bfr:\"𝔅\",Bopf:\"𝔹\",Breve:\"˘\",Bscr:\"ℬ\",Bumpeq:\"≎\",CHcy:\"Ч\",COP:\"©\",COPY:\"©\",Cacute:\"Ć\",Cap:\"⋒\",CapitalDifferentialD:\"ⅅ\",Cayleys:\"ℭ\",Ccaron:\"Č\",Ccedi:\"Ç\",Ccedil:\"Ç\",Ccirc:\"Ĉ\",Cconint:\"∰\",Cdot:\"Ċ\",Cedilla:\"¸\",CenterDot:\"·\",Cfr:\"ℭ\",Chi:\"Χ\",CircleDot:\"⊙\",CircleMinus:\"⊖\",CirclePlus:\"⊕\",CircleTimes:\"⊗\",ClockwiseContourIntegral:\"∲\",CloseCurlyDoubleQuote:\"”\",CloseCurlyQuote:\"’\",Colon:\"∷\",Colone:\"⩴\",Congruent:\"≡\",Conint:\"∯\",ContourIntegral:\"∮\",Copf:\"ℂ\",Coproduct:\"∐\",CounterClockwiseContourIntegral:\"∳\",Cross:\"⨯\",Cscr:\"𝒞\",Cup:\"⋓\",CupCap:\"≍\",DD:\"ⅅ\",DDotrahd:\"⤑\",DJcy:\"Ђ\",DScy:\"Ѕ\",DZcy:\"Џ\",Dagger:\"‡\",Darr:\"↡\",Dashv:\"⫤\",Dcaron:\"Ď\",Dcy:\"Д\",Del:\"∇\",Delta:\"Δ\",Dfr:\"𝔇\",DiacriticalAcute:\"´\",DiacriticalDot:\"˙\",DiacriticalDoubleAcute:\"˝\",DiacriticalGrave:\"`\",DiacriticalTilde:\"˜\",Diamond:\"⋄\",DifferentialD:\"ⅆ\",Dopf:\"𝔻\",Dot:\"¨\",DotDot:\"⃜\",DotEqual:\"≐\",DoubleContourIntegral:\"∯\",DoubleDot:\"¨\",DoubleDownArrow:\"⇓\",DoubleLeftArrow:\"⇐\",DoubleLeftRightArrow:\"⇔\",DoubleLeftTee:\"⫤\",DoubleLongLeftArrow:\"⟸\",DoubleLongLeftRightArrow:\"⟺\",DoubleLongRightArrow:\"⟹\",DoubleRightArrow:\"⇒\",DoubleRightTee:\"⊨\",DoubleUpArrow:\"⇑\",DoubleUpDownArrow:\"⇕\",DoubleVerticalBar:\"∥\",DownArrow:\"↓\",DownArrowBar:\"⤓\",DownArrowUpArrow:\"⇵\",DownBreve:\"̑\",DownLeftRightVector:\"⥐\",DownLeftTeeVector:\"⥞\",DownLeftVector:\"↽\",DownLeftVectorBar:\"⥖\",DownRightTeeVector:\"⥟\",DownRightVector:\"⇁\",DownRightVectorBar:\"⥗\",DownTee:\"⊤\",DownTeeArrow:\"↧\",Downarrow:\"⇓\",Dscr:\"𝒟\",Dstrok:\"Đ\",ENG:\"Ŋ\",ET:\"Ð\",ETH:\"Ð\",Eacut:\"É\",Eacute:\"É\",Ecaron:\"Ě\",Ecir:\"Ê\",Ecirc:\"Ê\",Ecy:\"Э\",Edot:\"Ė\",Efr:\"𝔈\",Egrav:\"È\",Egrave:\"È\",Element:\"∈\",Emacr:\"Ē\",EmptySmallSquare:\"◻\",EmptyVerySmallSquare:\"▫\",Eogon:\"Ę\",Eopf:\"𝔼\",Epsilon:\"Ε\",Equal:\"⩵\",EqualTilde:\"≂\",Equilibrium:\"⇌\",Escr:\"ℰ\",Esim:\"⩳\",Eta:\"Η\",Eum:\"Ë\",Euml:\"Ë\",Exists:\"∃\",ExponentialE:\"ⅇ\",Fcy:\"Ф\",Ffr:\"𝔉\",FilledSmallSquare:\"◼\",FilledVerySmallSquare:\"▪\",Fopf:\"𝔽\",ForAll:\"∀\",Fouriertrf:\"ℱ\",Fscr:\"ℱ\",GJcy:\"Ѓ\",G:\">\",GT:\">\",Gamma:\"Γ\",Gammad:\"Ϝ\",Gbreve:\"Ğ\",Gcedil:\"Ģ\",Gcirc:\"Ĝ\",Gcy:\"Г\",Gdot:\"Ġ\",Gfr:\"𝔊\",Gg:\"⋙\",Gopf:\"𝔾\",GreaterEqual:\"≥\",GreaterEqualLess:\"⋛\",GreaterFullEqual:\"≧\",GreaterGreater:\"⪢\",GreaterLess:\"≷\",GreaterSlantEqual:\"⩾\",GreaterTilde:\"≳\",Gscr:\"𝒢\",Gt:\"≫\",HARDcy:\"Ъ\",Hacek:\"ˇ\",Hat:\"^\",Hcirc:\"Ĥ\",Hfr:\"ℌ\",HilbertSpace:\"ℋ\",Hopf:\"ℍ\",HorizontalLine:\"─\",Hscr:\"ℋ\",Hstrok:\"Ħ\",HumpDownHump:\"≎\",HumpEqual:\"≏\",IEcy:\"Е\",IJlig:\"Ĳ\",IOcy:\"Ё\",Iacut:\"Í\",Iacute:\"Í\",Icir:\"Î\",Icirc:\"Î\",Icy:\"И\",Idot:\"İ\",Ifr:\"ℑ\",Igrav:\"Ì\",Igrave:\"Ì\",Im:\"ℑ\",Imacr:\"Ī\",ImaginaryI:\"ⅈ\",Implies:\"⇒\",Int:\"∬\",Integral:\"∫\",Intersection:\"⋂\",InvisibleComma:\"⁣\",InvisibleTimes:\"⁢\",Iogon:\"Į\",Iopf:\"𝕀\",Iota:\"Ι\",Iscr:\"ℐ\",Itilde:\"Ĩ\",Iukcy:\"І\",Ium:\"Ï\",Iuml:\"Ï\",Jcirc:\"Ĵ\",Jcy:\"Й\",Jfr:\"𝔍\",Jopf:\"𝕁\",Jscr:\"𝒥\",Jsercy:\"Ј\",Jukcy:\"Є\",KHcy:\"Х\",KJcy:\"Ќ\",Kappa:\"Κ\",Kcedil:\"Ķ\",Kcy:\"К\",Kfr:\"𝔎\",Kopf:\"𝕂\",Kscr:\"𝒦\",LJcy:\"Љ\",L:\"<\",LT:\"<\",Lacute:\"Ĺ\",Lambda:\"Λ\",Lang:\"⟪\",Laplacetrf:\"ℒ\",Larr:\"↞\",Lcaron:\"Ľ\",Lcedil:\"Ļ\",Lcy:\"Л\",LeftAngleBracket:\"⟨\",LeftArrow:\"←\",LeftArrowBar:\"⇤\",LeftArrowRightArrow:\"⇆\",LeftCeiling:\"⌈\",LeftDoubleBracket:\"⟦\",LeftDownTeeVector:\"⥡\",LeftDownVector:\"⇃\",LeftDownVectorBar:\"⥙\",LeftFloor:\"⌊\",LeftRightArrow:\"↔\",LeftRightVector:\"⥎\",LeftTee:\"⊣\",LeftTeeArrow:\"↤\",LeftTeeVector:\"⥚\",LeftTriangle:\"⊲\",LeftTriangleBar:\"⧏\",LeftTriangleEqual:\"⊴\",LeftUpDownVector:\"⥑\",LeftUpTeeVector:\"⥠\",LeftUpVector:\"↿\",LeftUpVectorBar:\"⥘\",LeftVector:\"↼\",LeftVectorBar:\"⥒\",Leftarrow:\"⇐\",Leftrightarrow:\"⇔\",LessEqualGreater:\"⋚\",LessFullEqual:\"≦\",LessGreater:\"≶\",LessLess:\"⪡\",LessSlantEqual:\"⩽\",LessTilde:\"≲\",Lfr:\"𝔏\",Ll:\"⋘\",Lleftarrow:\"⇚\",Lmidot:\"Ŀ\",LongLeftArrow:\"⟵\",LongLeftRightArrow:\"⟷\",LongRightArrow:\"⟶\",Longleftarrow:\"⟸\",Longleftrightarrow:\"⟺\",Longrightarrow:\"⟹\",Lopf:\"𝕃\",LowerLeftArrow:\"↙\",LowerRightArrow:\"↘\",Lscr:\"ℒ\",Lsh:\"↰\",Lstrok:\"Ł\",Lt:\"≪\",Map:\"⤅\",Mcy:\"М\",MediumSpace:\" \",Mellintrf:\"ℳ\",Mfr:\"𝔐\",MinusPlus:\"∓\",Mopf:\"𝕄\",Mscr:\"ℳ\",Mu:\"Μ\",NJcy:\"Њ\",Nacute:\"Ń\",Ncaron:\"Ň\",Ncedil:\"Ņ\",Ncy:\"Н\",NegativeMediumSpace:\"​\",NegativeThickSpace:\"​\",NegativeThinSpace:\"​\",NegativeVeryThinSpace:\"​\",NestedGreaterGreater:\"≫\",NestedLessLess:\"≪\",NewLine:\"\\n\",Nfr:\"𝔑\",NoBreak:\"⁠\",NonBreakingSpace:\" \",Nopf:\"ℕ\",Not:\"⫬\",NotCongruent:\"≢\",NotCupCap:\"≭\",NotDoubleVerticalBar:\"∦\",NotElement:\"∉\",NotEqual:\"≠\",NotEqualTilde:\"≂̸\",NotExists:\"∄\",NotGreater:\"≯\",NotGreaterEqual:\"≱\",NotGreaterFullEqual:\"≧̸\",NotGreaterGreater:\"≫̸\",NotGreaterLess:\"≹\",NotGreaterSlantEqual:\"⩾̸\",NotGreaterTilde:\"≵\",NotHumpDownHump:\"≎̸\",NotHumpEqual:\"≏̸\",NotLeftTriangle:\"⋪\",NotLeftTriangleBar:\"⧏̸\",NotLeftTriangleEqual:\"⋬\",NotLess:\"≮\",NotLessEqual:\"≰\",NotLessGreater:\"≸\",NotLessLess:\"≪̸\",NotLessSlantEqual:\"⩽̸\",NotLessTilde:\"≴\",NotNestedGreaterGreater:\"⪢̸\",NotNestedLessLess:\"⪡̸\",NotPrecedes:\"⊀\",NotPrecedesEqual:\"⪯̸\",NotPrecedesSlantEqual:\"⋠\",NotReverseElement:\"∌\",NotRightTriangle:\"⋫\",NotRightTriangleBar:\"⧐̸\",NotRightTriangleEqual:\"⋭\",NotSquareSubset:\"⊏̸\",NotSquareSubsetEqual:\"⋢\",NotSquareSuperset:\"⊐̸\",NotSquareSupersetEqual:\"⋣\",NotSubset:\"⊂⃒\",NotSubsetEqual:\"⊈\",NotSucceeds:\"⊁\",NotSucceedsEqual:\"⪰̸\",NotSucceedsSlantEqual:\"⋡\",NotSucceedsTilde:\"≿̸\",NotSuperset:\"⊃⃒\",NotSupersetEqual:\"⊉\",NotTilde:\"≁\",NotTildeEqual:\"≄\",NotTildeFullEqual:\"≇\",NotTildeTilde:\"≉\",NotVerticalBar:\"∤\",Nscr:\"𝒩\",Ntild:\"Ñ\",Ntilde:\"Ñ\",Nu:\"Ν\",OElig:\"Œ\",Oacut:\"Ó\",Oacute:\"Ó\",Ocir:\"Ô\",Ocirc:\"Ô\",Ocy:\"О\",Odblac:\"Ő\",Ofr:\"𝔒\",Ograv:\"Ò\",Ograve:\"Ò\",Omacr:\"Ō\",Omega:\"Ω\",Omicron:\"Ο\",Oopf:\"𝕆\",OpenCurlyDoubleQuote:\"“\",OpenCurlyQuote:\"‘\",Or:\"⩔\",Oscr:\"𝒪\",Oslas:\"Ø\",Oslash:\"Ø\",Otild:\"Õ\",Otilde:\"Õ\",Otimes:\"⨷\",Oum:\"Ö\",Ouml:\"Ö\",OverBar:\"‾\",OverBrace:\"⏞\",OverBracket:\"⎴\",OverParenthesis:\"⏜\",PartialD:\"∂\",Pcy:\"П\",Pfr:\"𝔓\",Phi:\"Φ\",Pi:\"Π\",PlusMinus:\"±\",Poincareplane:\"ℌ\",Popf:\"ℙ\",Pr:\"⪻\",Precedes:\"≺\",PrecedesEqual:\"⪯\",PrecedesSlantEqual:\"≼\",PrecedesTilde:\"≾\",Prime:\"″\",Product:\"∏\",Proportion:\"∷\",Proportional:\"∝\",Pscr:\"𝒫\",Psi:\"Ψ\",QUO:'\"',QUOT:'\"',Qfr:\"𝔔\",Qopf:\"ℚ\",Qscr:\"𝒬\",RBarr:\"⤐\",RE:\"®\",REG:\"®\",Racute:\"Ŕ\",Rang:\"⟫\",Rarr:\"↠\",Rarrtl:\"⤖\",Rcaron:\"Ř\",Rcedil:\"Ŗ\",Rcy:\"Р\",Re:\"ℜ\",ReverseElement:\"∋\",ReverseEquilibrium:\"⇋\",ReverseUpEquilibrium:\"⥯\",Rfr:\"ℜ\",Rho:\"Ρ\",RightAngleBracket:\"⟩\",RightArrow:\"→\",RightArrowBar:\"⇥\",RightArrowLeftArrow:\"⇄\",RightCeiling:\"⌉\",RightDoubleBracket:\"⟧\",RightDownTeeVector:\"⥝\",RightDownVector:\"⇂\",RightDownVectorBar:\"⥕\",RightFloor:\"⌋\",RightTee:\"⊢\",RightTeeArrow:\"↦\",RightTeeVector:\"⥛\",RightTriangle:\"⊳\",RightTriangleBar:\"⧐\",RightTriangleEqual:\"⊵\",RightUpDownVector:\"⥏\",RightUpTeeVector:\"⥜\",RightUpVector:\"↾\",RightUpVectorBar:\"⥔\",RightVector:\"⇀\",RightVectorBar:\"⥓\",Rightarrow:\"⇒\",Ropf:\"ℝ\",RoundImplies:\"⥰\",Rrightarrow:\"⇛\",Rscr:\"ℛ\",Rsh:\"↱\",RuleDelayed:\"⧴\",SHCHcy:\"Щ\",SHcy:\"Ш\",SOFTcy:\"Ь\",Sacute:\"Ś\",Sc:\"⪼\",Scaron:\"Š\",Scedil:\"Ş\",Scirc:\"Ŝ\",Scy:\"С\",Sfr:\"𝔖\",ShortDownArrow:\"↓\",ShortLeftArrow:\"←\",ShortRightArrow:\"→\",ShortUpArrow:\"↑\",Sigma:\"Σ\",SmallCircle:\"∘\",Sopf:\"𝕊\",Sqrt:\"√\",Square:\"□\",SquareIntersection:\"⊓\",SquareSubset:\"⊏\",SquareSubsetEqual:\"⊑\",SquareSuperset:\"⊐\",SquareSupersetEqual:\"⊒\",SquareUnion:\"⊔\",Sscr:\"𝒮\",Star:\"⋆\",Sub:\"⋐\",Subset:\"⋐\",SubsetEqual:\"⊆\",Succeeds:\"≻\",SucceedsEqual:\"⪰\",SucceedsSlantEqual:\"≽\",SucceedsTilde:\"≿\",SuchThat:\"∋\",Sum:\"∑\",Sup:\"⋑\",Superset:\"⊃\",SupersetEqual:\"⊇\",Supset:\"⋑\",THOR:\"Þ\",THORN:\"Þ\",TRADE:\"™\",TSHcy:\"Ћ\",TScy:\"Ц\",Tab:\"\\t\",Tau:\"Τ\",Tcaron:\"Ť\",Tcedil:\"Ţ\",Tcy:\"Т\",Tfr:\"𝔗\",Therefore:\"∴\",Theta:\"Θ\",ThickSpace:\"  \",ThinSpace:\" \",Tilde:\"∼\",TildeEqual:\"≃\",TildeFullEqual:\"≅\",TildeTilde:\"≈\",Topf:\"𝕋\",TripleDot:\"⃛\",Tscr:\"𝒯\",Tstrok:\"Ŧ\",Uacut:\"Ú\",Uacute:\"Ú\",Uarr:\"↟\",Uarrocir:\"⥉\",Ubrcy:\"Ў\",Ubreve:\"Ŭ\",Ucir:\"Û\",Ucirc:\"Û\",Ucy:\"У\",Udblac:\"Ű\",Ufr:\"𝔘\",Ugrav:\"Ù\",Ugrave:\"Ù\",Umacr:\"Ū\",UnderBar:\"_\",UnderBrace:\"⏟\",UnderBracket:\"⎵\",UnderParenthesis:\"⏝\",Union:\"⋃\",UnionPlus:\"⊎\",Uogon:\"Ų\",Uopf:\"𝕌\",UpArrow:\"↑\",UpArrowBar:\"⤒\",UpArrowDownArrow:\"⇅\",UpDownArrow:\"↕\",UpEquilibrium:\"⥮\",UpTee:\"⊥\",UpTeeArrow:\"↥\",Uparrow:\"⇑\",Updownarrow:\"⇕\",UpperLeftArrow:\"↖\",UpperRightArrow:\"↗\",Upsi:\"ϒ\",Upsilon:\"Υ\",Uring:\"Ů\",Uscr:\"𝒰\",Utilde:\"Ũ\",Uum:\"Ü\",Uuml:\"Ü\",VDash:\"⊫\",Vbar:\"⫫\",Vcy:\"В\",Vdash:\"⊩\",Vdashl:\"⫦\",Vee:\"⋁\",Verbar:\"‖\",Vert:\"‖\",VerticalBar:\"∣\",VerticalLine:\"|\",VerticalSeparator:\"❘\",VerticalTilde:\"≀\",VeryThinSpace:\" \",Vfr:\"𝔙\",Vopf:\"𝕍\",Vscr:\"𝒱\",Vvdash:\"⊪\",Wcirc:\"Ŵ\",Wedge:\"⋀\",Wfr:\"𝔚\",Wopf:\"𝕎\",Wscr:\"𝒲\",Xfr:\"𝔛\",Xi:\"Ξ\",Xopf:\"𝕏\",Xscr:\"𝒳\",YAcy:\"Я\",YIcy:\"Ї\",YUcy:\"Ю\",Yacut:\"Ý\",Yacute:\"Ý\",Ycirc:\"Ŷ\",Ycy:\"Ы\",Yfr:\"𝔜\",Yopf:\"𝕐\",Yscr:\"𝒴\",Yuml:\"Ÿ\",ZHcy:\"Ж\",Zacute:\"Ź\",Zcaron:\"Ž\",Zcy:\"З\",Zdot:\"Ż\",ZeroWidthSpace:\"​\",Zeta:\"Ζ\",Zfr:\"ℨ\",Zopf:\"ℤ\",Zscr:\"𝒵\",aacut:\"á\",aacute:\"á\",abreve:\"ă\",ac:\"∾\",acE:\"∾̳\",acd:\"∿\",acir:\"â\",acirc:\"â\",acut:\"´\",acute:\"´\",acy:\"а\",aeli:\"æ\",aelig:\"æ\",af:\"⁡\",afr:\"𝔞\",agrav:\"à\",agrave:\"à\",alefsym:\"ℵ\",aleph:\"ℵ\",alpha:\"α\",amacr:\"ā\",amalg:\"⨿\",am:\"&\",amp:\"&\",and:\"∧\",andand:\"⩕\",andd:\"⩜\",andslope:\"⩘\",andv:\"⩚\",ang:\"∠\",ange:\"⦤\",angle:\"∠\",angmsd:\"∡\",angmsdaa:\"⦨\",angmsdab:\"⦩\",angmsdac:\"⦪\",angmsdad:\"⦫\",angmsdae:\"⦬\",angmsdaf:\"⦭\",angmsdag:\"⦮\",angmsdah:\"⦯\",angrt:\"∟\",angrtvb:\"⊾\",angrtvbd:\"⦝\",angsph:\"∢\",angst:\"Å\",angzarr:\"⍼\",aogon:\"ą\",aopf:\"𝕒\",ap:\"≈\",apE:\"⩰\",apacir:\"⩯\",ape:\"≊\",apid:\"≋\",apos:\"'\",approx:\"≈\",approxeq:\"≊\",arin:\"å\",aring:\"å\",ascr:\"𝒶\",ast:\"*\",asymp:\"≈\",asympeq:\"≍\",atild:\"ã\",atilde:\"ã\",aum:\"ä\",auml:\"ä\",awconint:\"∳\",awint:\"⨑\",bNot:\"⫭\",backcong:\"≌\",backepsilon:\"϶\",backprime:\"‵\",backsim:\"∽\",backsimeq:\"⋍\",barvee:\"⊽\",barwed:\"⌅\",barwedge:\"⌅\",bbrk:\"⎵\",bbrktbrk:\"⎶\",bcong:\"≌\",bcy:\"б\",bdquo:\"„\",becaus:\"∵\",because:\"∵\",bemptyv:\"⦰\",bepsi:\"϶\",bernou:\"ℬ\",beta:\"β\",beth:\"ℶ\",between:\"≬\",bfr:\"𝔟\",bigcap:\"⋂\",bigcirc:\"◯\",bigcup:\"⋃\",bigodot:\"⨀\",bigoplus:\"⨁\",bigotimes:\"⨂\",bigsqcup:\"⨆\",bigstar:\"★\",bigtriangledown:\"▽\",bigtriangleup:\"△\",biguplus:\"⨄\",bigvee:\"⋁\",bigwedge:\"⋀\",bkarow:\"⤍\",blacklozenge:\"⧫\",blacksquare:\"▪\",blacktriangle:\"▴\",blacktriangledown:\"▾\",blacktriangleleft:\"◂\",blacktriangleright:\"▸\",blank:\"␣\",blk12:\"▒\",blk14:\"░\",blk34:\"▓\",block:\"█\",bne:\"=⃥\",bnequiv:\"≡⃥\",bnot:\"⌐\",bopf:\"𝕓\",bot:\"⊥\",bottom:\"⊥\",bowtie:\"⋈\",boxDL:\"╗\",boxDR:\"╔\",boxDl:\"╖\",boxDr:\"╓\",boxH:\"═\",boxHD:\"╦\",boxHU:\"╩\",boxHd:\"╤\",boxHu:\"╧\",boxUL:\"╝\",boxUR:\"╚\",boxUl:\"╜\",boxUr:\"╙\",boxV:\"║\",boxVH:\"╬\",boxVL:\"╣\",boxVR:\"╠\",boxVh:\"╫\",boxVl:\"╢\",boxVr:\"╟\",boxbox:\"⧉\",boxdL:\"╕\",boxdR:\"╒\",boxdl:\"┐\",boxdr:\"┌\",boxh:\"─\",boxhD:\"╥\",boxhU:\"╨\",boxhd:\"┬\",boxhu:\"┴\",boxminus:\"⊟\",boxplus:\"⊞\",boxtimes:\"⊠\",boxuL:\"╛\",boxuR:\"╘\",boxul:\"┘\",boxur:\"└\",boxv:\"│\",boxvH:\"╪\",boxvL:\"╡\",boxvR:\"╞\",boxvh:\"┼\",boxvl:\"┤\",boxvr:\"├\",bprime:\"‵\",breve:\"˘\",brvba:\"¦\",brvbar:\"¦\",bscr:\"𝒷\",bsemi:\"⁏\",bsim:\"∽\",bsime:\"⋍\",bsol:\"\\\\\",bsolb:\"⧅\",bsolhsub:\"⟈\",bull:\"•\",bullet:\"•\",bump:\"≎\",bumpE:\"⪮\",bumpe:\"≏\",bumpeq:\"≏\",cacute:\"ć\",cap:\"∩\",capand:\"⩄\",capbrcup:\"⩉\",capcap:\"⩋\",capcup:\"⩇\",capdot:\"⩀\",caps:\"∩︀\",caret:\"⁁\",caron:\"ˇ\",ccaps:\"⩍\",ccaron:\"č\",ccedi:\"ç\",ccedil:\"ç\",ccirc:\"ĉ\",ccups:\"⩌\",ccupssm:\"⩐\",cdot:\"ċ\",cedi:\"¸\",cedil:\"¸\",cemptyv:\"⦲\",cen:\"¢\",cent:\"¢\",centerdot:\"·\",cfr:\"𝔠\",chcy:\"ч\",check:\"✓\",checkmark:\"✓\",chi:\"χ\",cir:\"○\",cirE:\"⧃\",circ:\"ˆ\",circeq:\"≗\",circlearrowleft:\"↺\",circlearrowright:\"↻\",circledR:\"®\",circledS:\"Ⓢ\",circledast:\"⊛\",circledcirc:\"⊚\",circleddash:\"⊝\",cire:\"≗\",cirfnint:\"⨐\",cirmid:\"⫯\",cirscir:\"⧂\",clubs:\"♣\",clubsuit:\"♣\",colon:\":\",colone:\"≔\",coloneq:\"≔\",comma:\",\",commat:\"@\",comp:\"∁\",compfn:\"∘\",complement:\"∁\",complexes:\"ℂ\",cong:\"≅\",congdot:\"⩭\",conint:\"∮\",copf:\"𝕔\",coprod:\"∐\",cop:\"©\",copy:\"©\",copysr:\"℗\",crarr:\"↵\",cross:\"✗\",cscr:\"𝒸\",csub:\"⫏\",csube:\"⫑\",csup:\"⫐\",csupe:\"⫒\",ctdot:\"⋯\",cudarrl:\"⤸\",cudarrr:\"⤵\",cuepr:\"⋞\",cuesc:\"⋟\",cularr:\"↶\",cularrp:\"⤽\",cup:\"∪\",cupbrcap:\"⩈\",cupcap:\"⩆\",cupcup:\"⩊\",cupdot:\"⊍\",cupor:\"⩅\",cups:\"∪︀\",curarr:\"↷\",curarrm:\"⤼\",curlyeqprec:\"⋞\",curlyeqsucc:\"⋟\",curlyvee:\"⋎\",curlywedge:\"⋏\",curre:\"¤\",curren:\"¤\",curvearrowleft:\"↶\",curvearrowright:\"↷\",cuvee:\"⋎\",cuwed:\"⋏\",cwconint:\"∲\",cwint:\"∱\",cylcty:\"⌭\",dArr:\"⇓\",dHar:\"⥥\",dagger:\"†\",daleth:\"ℸ\",darr:\"↓\",dash:\"‐\",dashv:\"⊣\",dbkarow:\"⤏\",dblac:\"˝\",dcaron:\"ď\",dcy:\"д\",dd:\"ⅆ\",ddagger:\"‡\",ddarr:\"⇊\",ddotseq:\"⩷\",de:\"°\",deg:\"°\",delta:\"δ\",demptyv:\"⦱\",dfisht:\"⥿\",dfr:\"𝔡\",dharl:\"⇃\",dharr:\"⇂\",diam:\"⋄\",diamond:\"⋄\",diamondsuit:\"♦\",diams:\"♦\",die:\"¨\",digamma:\"ϝ\",disin:\"⋲\",div:\"÷\",divid:\"÷\",divide:\"÷\",divideontimes:\"⋇\",divonx:\"⋇\",djcy:\"ђ\",dlcorn:\"⌞\",dlcrop:\"⌍\",dollar:\"$\",dopf:\"𝕕\",dot:\"˙\",doteq:\"≐\",doteqdot:\"≑\",dotminus:\"∸\",dotplus:\"∔\",dotsquare:\"⊡\",doublebarwedge:\"⌆\",downarrow:\"↓\",downdownarrows:\"⇊\",downharpoonleft:\"⇃\",downharpoonright:\"⇂\",drbkarow:\"⤐\",drcorn:\"⌟\",drcrop:\"⌌\",dscr:\"𝒹\",dscy:\"ѕ\",dsol:\"⧶\",dstrok:\"đ\",dtdot:\"⋱\",dtri:\"▿\",dtrif:\"▾\",duarr:\"⇵\",duhar:\"⥯\",dwangle:\"⦦\",dzcy:\"џ\",dzigrarr:\"⟿\",eDDot:\"⩷\",eDot:\"≑\",eacut:\"é\",eacute:\"é\",easter:\"⩮\",ecaron:\"ě\",ecir:\"ê\",ecirc:\"ê\",ecolon:\"≕\",ecy:\"э\",edot:\"ė\",ee:\"ⅇ\",efDot:\"≒\",efr:\"𝔢\",eg:\"⪚\",egrav:\"è\",egrave:\"è\",egs:\"⪖\",egsdot:\"⪘\",el:\"⪙\",elinters:\"⏧\",ell:\"ℓ\",els:\"⪕\",elsdot:\"⪗\",emacr:\"ē\",empty:\"∅\",emptyset:\"∅\",emptyv:\"∅\",emsp13:\" \",emsp14:\" \",emsp:\" \",eng:\"ŋ\",ensp:\" \",eogon:\"ę\",eopf:\"𝕖\",epar:\"⋕\",eparsl:\"⧣\",eplus:\"⩱\",epsi:\"ε\",epsilon:\"ε\",epsiv:\"ϵ\",eqcirc:\"≖\",eqcolon:\"≕\",eqsim:\"≂\",eqslantgtr:\"⪖\",eqslantless:\"⪕\",equals:\"=\",equest:\"≟\",equiv:\"≡\",equivDD:\"⩸\",eqvparsl:\"⧥\",erDot:\"≓\",erarr:\"⥱\",escr:\"ℯ\",esdot:\"≐\",esim:\"≂\",eta:\"η\",et:\"ð\",eth:\"ð\",eum:\"ë\",euml:\"ë\",euro:\"€\",excl:\"!\",exist:\"∃\",expectation:\"ℰ\",exponentiale:\"ⅇ\",fallingdotseq:\"≒\",fcy:\"ф\",female:\"♀\",ffilig:\"ﬃ\",fflig:\"ﬀ\",ffllig:\"ﬄ\",ffr:\"𝔣\",filig:\"ﬁ\",fjlig:\"fj\",flat:\"♭\",fllig:\"ﬂ\",fltns:\"▱\",fnof:\"ƒ\",fopf:\"𝕗\",forall:\"∀\",fork:\"⋔\",forkv:\"⫙\",fpartint:\"⨍\",frac1:\"¼\",frac12:\"½\",frac13:\"⅓\",frac14:\"¼\",frac15:\"⅕\",frac16:\"⅙\",frac18:\"⅛\",frac23:\"⅔\",frac25:\"⅖\",frac3:\"¾\",frac34:\"¾\",frac35:\"⅗\",frac38:\"⅜\",frac45:\"⅘\",frac56:\"⅚\",frac58:\"⅝\",frac78:\"⅞\",frasl:\"⁄\",frown:\"⌢\",fscr:\"𝒻\",gE:\"≧\",gEl:\"⪌\",gacute:\"ǵ\",gamma:\"γ\",gammad:\"ϝ\",gap:\"⪆\",gbreve:\"ğ\",gcirc:\"ĝ\",gcy:\"г\",gdot:\"ġ\",ge:\"≥\",gel:\"⋛\",geq:\"≥\",geqq:\"≧\",geqslant:\"⩾\",ges:\"⩾\",gescc:\"⪩\",gesdot:\"⪀\",gesdoto:\"⪂\",gesdotol:\"⪄\",gesl:\"⋛︀\",gesles:\"⪔\",gfr:\"𝔤\",gg:\"≫\",ggg:\"⋙\",gimel:\"ℷ\",gjcy:\"ѓ\",gl:\"≷\",glE:\"⪒\",gla:\"⪥\",glj:\"⪤\",gnE:\"≩\",gnap:\"⪊\",gnapprox:\"⪊\",gne:\"⪈\",gneq:\"⪈\",gneqq:\"≩\",gnsim:\"⋧\",gopf:\"𝕘\",grave:\"`\",gscr:\"ℊ\",gsim:\"≳\",gsime:\"⪎\",gsiml:\"⪐\",g:\">\",gt:\">\",gtcc:\"⪧\",gtcir:\"⩺\",gtdot:\"⋗\",gtlPar:\"⦕\",gtquest:\"⩼\",gtrapprox:\"⪆\",gtrarr:\"⥸\",gtrdot:\"⋗\",gtreqless:\"⋛\",gtreqqless:\"⪌\",gtrless:\"≷\",gtrsim:\"≳\",gvertneqq:\"≩︀\",gvnE:\"≩︀\",hArr:\"⇔\",hairsp:\" \",half:\"½\",hamilt:\"ℋ\",hardcy:\"ъ\",harr:\"↔\",harrcir:\"⥈\",harrw:\"↭\",hbar:\"ℏ\",hcirc:\"ĥ\",hearts:\"♥\",heartsuit:\"♥\",hellip:\"…\",hercon:\"⊹\",hfr:\"𝔥\",hksearow:\"⤥\",hkswarow:\"⤦\",hoarr:\"⇿\",homtht:\"∻\",hookleftarrow:\"↩\",hookrightarrow:\"↪\",hopf:\"𝕙\",horbar:\"―\",hscr:\"𝒽\",hslash:\"ℏ\",hstrok:\"ħ\",hybull:\"⁃\",hyphen:\"‐\",iacut:\"í\",iacute:\"í\",ic:\"⁣\",icir:\"î\",icirc:\"î\",icy:\"и\",iecy:\"е\",iexc:\"¡\",iexcl:\"¡\",iff:\"⇔\",ifr:\"𝔦\",igrav:\"ì\",igrave:\"ì\",ii:\"ⅈ\",iiiint:\"⨌\",iiint:\"∭\",iinfin:\"⧜\",iiota:\"℩\",ijlig:\"ĳ\",imacr:\"ī\",image:\"ℑ\",imagline:\"ℐ\",imagpart:\"ℑ\",imath:\"ı\",imof:\"⊷\",imped:\"Ƶ\",in:\"∈\",incare:\"℅\",infin:\"∞\",infintie:\"⧝\",inodot:\"ı\",int:\"∫\",intcal:\"⊺\",integers:\"ℤ\",intercal:\"⊺\",intlarhk:\"⨗\",intprod:\"⨼\",iocy:\"ё\",iogon:\"į\",iopf:\"𝕚\",iota:\"ι\",iprod:\"⨼\",iques:\"¿\",iquest:\"¿\",iscr:\"𝒾\",isin:\"∈\",isinE:\"⋹\",isindot:\"⋵\",isins:\"⋴\",isinsv:\"⋳\",isinv:\"∈\",it:\"⁢\",itilde:\"ĩ\",iukcy:\"і\",ium:\"ï\",iuml:\"ï\",jcirc:\"ĵ\",jcy:\"й\",jfr:\"𝔧\",jmath:\"ȷ\",jopf:\"𝕛\",jscr:\"𝒿\",jsercy:\"ј\",jukcy:\"є\",kappa:\"κ\",kappav:\"ϰ\",kcedil:\"ķ\",kcy:\"к\",kfr:\"𝔨\",kgreen:\"ĸ\",khcy:\"х\",kjcy:\"ќ\",kopf:\"𝕜\",kscr:\"𝓀\",lAarr:\"⇚\",lArr:\"⇐\",lAtail:\"⤛\",lBarr:\"⤎\",lE:\"≦\",lEg:\"⪋\",lHar:\"⥢\",lacute:\"ĺ\",laemptyv:\"⦴\",lagran:\"ℒ\",lambda:\"λ\",lang:\"⟨\",langd:\"⦑\",langle:\"⟨\",lap:\"⪅\",laqu:\"«\",laquo:\"«\",larr:\"←\",larrb:\"⇤\",larrbfs:\"⤟\",larrfs:\"⤝\",larrhk:\"↩\",larrlp:\"↫\",larrpl:\"⤹\",larrsim:\"⥳\",larrtl:\"↢\",lat:\"⪫\",latail:\"⤙\",late:\"⪭\",lates:\"⪭︀\",lbarr:\"⤌\",lbbrk:\"❲\",lbrace:\"{\",lbrack:\"[\",lbrke:\"⦋\",lbrksld:\"⦏\",lbrkslu:\"⦍\",lcaron:\"ľ\",lcedil:\"ļ\",lceil:\"⌈\",lcub:\"{\",lcy:\"л\",ldca:\"⤶\",ldquo:\"“\",ldquor:\"„\",ldrdhar:\"⥧\",ldrushar:\"⥋\",ldsh:\"↲\",le:\"≤\",leftarrow:\"←\",leftarrowtail:\"↢\",leftharpoondown:\"↽\",leftharpoonup:\"↼\",leftleftarrows:\"⇇\",leftrightarrow:\"↔\",leftrightarrows:\"⇆\",leftrightharpoons:\"⇋\",leftrightsquigarrow:\"↭\",leftthreetimes:\"⋋\",leg:\"⋚\",leq:\"≤\",leqq:\"≦\",leqslant:\"⩽\",les:\"⩽\",lescc:\"⪨\",lesdot:\"⩿\",lesdoto:\"⪁\",lesdotor:\"⪃\",lesg:\"⋚︀\",lesges:\"⪓\",lessapprox:\"⪅\",lessdot:\"⋖\",lesseqgtr:\"⋚\",lesseqqgtr:\"⪋\",lessgtr:\"≶\",lesssim:\"≲\",lfisht:\"⥼\",lfloor:\"⌊\",lfr:\"𝔩\",lg:\"≶\",lgE:\"⪑\",lhard:\"↽\",lharu:\"↼\",lharul:\"⥪\",lhblk:\"▄\",ljcy:\"љ\",ll:\"≪\",llarr:\"⇇\",llcorner:\"⌞\",llhard:\"⥫\",lltri:\"◺\",lmidot:\"ŀ\",lmoust:\"⎰\",lmoustache:\"⎰\",lnE:\"≨\",lnap:\"⪉\",lnapprox:\"⪉\",lne:\"⪇\",lneq:\"⪇\",lneqq:\"≨\",lnsim:\"⋦\",loang:\"⟬\",loarr:\"⇽\",lobrk:\"⟦\",longleftarrow:\"⟵\",longleftrightarrow:\"⟷\",longmapsto:\"⟼\",longrightarrow:\"⟶\",looparrowleft:\"↫\",looparrowright:\"↬\",lopar:\"⦅\",lopf:\"𝕝\",loplus:\"⨭\",lotimes:\"⨴\",lowast:\"∗\",lowbar:\"_\",loz:\"◊\",lozenge:\"◊\",lozf:\"⧫\",lpar:\"(\",lparlt:\"⦓\",lrarr:\"⇆\",lrcorner:\"⌟\",lrhar:\"⇋\",lrhard:\"⥭\",lrm:\"‎\",lrtri:\"⊿\",lsaquo:\"‹\",lscr:\"𝓁\",lsh:\"↰\",lsim:\"≲\",lsime:\"⪍\",lsimg:\"⪏\",lsqb:\"[\",lsquo:\"‘\",lsquor:\"‚\",lstrok:\"ł\",l:\"<\",lt:\"<\",ltcc:\"⪦\",ltcir:\"⩹\",ltdot:\"⋖\",lthree:\"⋋\",ltimes:\"⋉\",ltlarr:\"⥶\",ltquest:\"⩻\",ltrPar:\"⦖\",ltri:\"◃\",ltrie:\"⊴\",ltrif:\"◂\",lurdshar:\"⥊\",luruhar:\"⥦\",lvertneqq:\"≨︀\",lvnE:\"≨︀\",mDDot:\"∺\",mac:\"¯\",macr:\"¯\",male:\"♂\",malt:\"✠\",maltese:\"✠\",map:\"↦\",mapsto:\"↦\",mapstodown:\"↧\",mapstoleft:\"↤\",mapstoup:\"↥\",marker:\"▮\",mcomma:\"⨩\",mcy:\"м\",mdash:\"—\",measuredangle:\"∡\",mfr:\"𝔪\",mho:\"℧\",micr:\"µ\",micro:\"µ\",mid:\"∣\",midast:\"*\",midcir:\"⫰\",middo:\"·\",middot:\"·\",minus:\"−\",minusb:\"⊟\",minusd:\"∸\",minusdu:\"⨪\",mlcp:\"⫛\",mldr:\"…\",mnplus:\"∓\",models:\"⊧\",mopf:\"𝕞\",mp:\"∓\",mscr:\"𝓂\",mstpos:\"∾\",mu:\"μ\",multimap:\"⊸\",mumap:\"⊸\",nGg:\"⋙̸\",nGt:\"≫⃒\",nGtv:\"≫̸\",nLeftarrow:\"⇍\",nLeftrightarrow:\"⇎\",nLl:\"⋘̸\",nLt:\"≪⃒\",nLtv:\"≪̸\",nRightarrow:\"⇏\",nVDash:\"⊯\",nVdash:\"⊮\",nabla:\"∇\",nacute:\"ń\",nang:\"∠⃒\",nap:\"≉\",napE:\"⩰̸\",napid:\"≋̸\",napos:\"ŉ\",napprox:\"≉\",natur:\"♮\",natural:\"♮\",naturals:\"ℕ\",nbs:\" \",nbsp:\" \",nbump:\"≎̸\",nbumpe:\"≏̸\",ncap:\"⩃\",ncaron:\"ň\",ncedil:\"ņ\",ncong:\"≇\",ncongdot:\"⩭̸\",ncup:\"⩂\",ncy:\"н\",ndash:\"–\",ne:\"≠\",neArr:\"⇗\",nearhk:\"⤤\",nearr:\"↗\",nearrow:\"↗\",nedot:\"≐̸\",nequiv:\"≢\",nesear:\"⤨\",nesim:\"≂̸\",nexist:\"∄\",nexists:\"∄\",nfr:\"𝔫\",ngE:\"≧̸\",nge:\"≱\",ngeq:\"≱\",ngeqq:\"≧̸\",ngeqslant:\"⩾̸\",nges:\"⩾̸\",ngsim:\"≵\",ngt:\"≯\",ngtr:\"≯\",nhArr:\"⇎\",nharr:\"↮\",nhpar:\"⫲\",ni:\"∋\",nis:\"⋼\",nisd:\"⋺\",niv:\"∋\",njcy:\"њ\",nlArr:\"⇍\",nlE:\"≦̸\",nlarr:\"↚\",nldr:\"‥\",nle:\"≰\",nleftarrow:\"↚\",nleftrightarrow:\"↮\",nleq:\"≰\",nleqq:\"≦̸\",nleqslant:\"⩽̸\",nles:\"⩽̸\",nless:\"≮\",nlsim:\"≴\",nlt:\"≮\",nltri:\"⋪\",nltrie:\"⋬\",nmid:\"∤\",nopf:\"𝕟\",no:\"¬\",not:\"¬\",notin:\"∉\",notinE:\"⋹̸\",notindot:\"⋵̸\",notinva:\"∉\",notinvb:\"⋷\",notinvc:\"⋶\",notni:\"∌\",notniva:\"∌\",notnivb:\"⋾\",notnivc:\"⋽\",npar:\"∦\",nparallel:\"∦\",nparsl:\"⫽⃥\",npart:\"∂̸\",npolint:\"⨔\",npr:\"⊀\",nprcue:\"⋠\",npre:\"⪯̸\",nprec:\"⊀\",npreceq:\"⪯̸\",nrArr:\"⇏\",nrarr:\"↛\",nrarrc:\"⤳̸\",nrarrw:\"↝̸\",nrightarrow:\"↛\",nrtri:\"⋫\",nrtrie:\"⋭\",nsc:\"⊁\",nsccue:\"⋡\",nsce:\"⪰̸\",nscr:\"𝓃\",nshortmid:\"∤\",nshortparallel:\"∦\",nsim:\"≁\",nsime:\"≄\",nsimeq:\"≄\",nsmid:\"∤\",nspar:\"∦\",nsqsube:\"⋢\",nsqsupe:\"⋣\",nsub:\"⊄\",nsubE:\"⫅̸\",nsube:\"⊈\",nsubset:\"⊂⃒\",nsubseteq:\"⊈\",nsubseteqq:\"⫅̸\",nsucc:\"⊁\",nsucceq:\"⪰̸\",nsup:\"⊅\",nsupE:\"⫆̸\",nsupe:\"⊉\",nsupset:\"⊃⃒\",nsupseteq:\"⊉\",nsupseteqq:\"⫆̸\",ntgl:\"≹\",ntild:\"ñ\",ntilde:\"ñ\",ntlg:\"≸\",ntriangleleft:\"⋪\",ntrianglelefteq:\"⋬\",ntriangleright:\"⋫\",ntrianglerighteq:\"⋭\",nu:\"ν\",num:\"#\",numero:\"№\",numsp:\" \",nvDash:\"⊭\",nvHarr:\"⤄\",nvap:\"≍⃒\",nvdash:\"⊬\",nvge:\"≥⃒\",nvgt:\">⃒\",nvinfin:\"⧞\",nvlArr:\"⤂\",nvle:\"≤⃒\",nvlt:\"<⃒\",nvltrie:\"⊴⃒\",nvrArr:\"⤃\",nvrtrie:\"⊵⃒\",nvsim:\"∼⃒\",nwArr:\"⇖\",nwarhk:\"⤣\",nwarr:\"↖\",nwarrow:\"↖\",nwnear:\"⤧\",oS:\"Ⓢ\",oacut:\"ó\",oacute:\"ó\",oast:\"⊛\",ocir:\"ô\",ocirc:\"ô\",ocy:\"о\",odash:\"⊝\",odblac:\"ő\",odiv:\"⨸\",odot:\"⊙\",odsold:\"⦼\",oelig:\"œ\",ofcir:\"⦿\",ofr:\"𝔬\",ogon:\"˛\",ograv:\"ò\",ograve:\"ò\",ogt:\"⧁\",ohbar:\"⦵\",ohm:\"Ω\",oint:\"∮\",olarr:\"↺\",olcir:\"⦾\",olcross:\"⦻\",oline:\"‾\",olt:\"⧀\",omacr:\"ō\",omega:\"ω\",omicron:\"ο\",omid:\"⦶\",ominus:\"⊖\",oopf:\"𝕠\",opar:\"⦷\",operp:\"⦹\",oplus:\"⊕\",or:\"∨\",orarr:\"↻\",ord:\"º\",order:\"ℴ\",orderof:\"ℴ\",ordf:\"ª\",ordm:\"º\",origof:\"⊶\",oror:\"⩖\",orslope:\"⩗\",orv:\"⩛\",oscr:\"ℴ\",oslas:\"ø\",oslash:\"ø\",osol:\"⊘\",otild:\"õ\",otilde:\"õ\",otimes:\"⊗\",otimesas:\"⨶\",oum:\"ö\",ouml:\"ö\",ovbar:\"⌽\",par:\"¶\",para:\"¶\",parallel:\"∥\",parsim:\"⫳\",parsl:\"⫽\",part:\"∂\",pcy:\"п\",percnt:\"%\",period:\".\",permil:\"‰\",perp:\"⊥\",pertenk:\"‱\",pfr:\"𝔭\",phi:\"φ\",phiv:\"ϕ\",phmmat:\"ℳ\",phone:\"☎\",pi:\"π\",pitchfork:\"⋔\",piv:\"ϖ\",planck:\"ℏ\",planckh:\"ℎ\",plankv:\"ℏ\",plus:\"+\",plusacir:\"⨣\",plusb:\"⊞\",pluscir:\"⨢\",plusdo:\"∔\",plusdu:\"⨥\",pluse:\"⩲\",plusm:\"±\",plusmn:\"±\",plussim:\"⨦\",plustwo:\"⨧\",pm:\"±\",pointint:\"⨕\",popf:\"𝕡\",poun:\"£\",pound:\"£\",pr:\"≺\",prE:\"⪳\",prap:\"⪷\",prcue:\"≼\",pre:\"⪯\",prec:\"≺\",precapprox:\"⪷\",preccurlyeq:\"≼\",preceq:\"⪯\",precnapprox:\"⪹\",precneqq:\"⪵\",precnsim:\"⋨\",precsim:\"≾\",prime:\"′\",primes:\"ℙ\",prnE:\"⪵\",prnap:\"⪹\",prnsim:\"⋨\",prod:\"∏\",profalar:\"⌮\",profline:\"⌒\",profsurf:\"⌓\",prop:\"∝\",propto:\"∝\",prsim:\"≾\",prurel:\"⊰\",pscr:\"𝓅\",psi:\"ψ\",puncsp:\" \",qfr:\"𝔮\",qint:\"⨌\",qopf:\"𝕢\",qprime:\"⁗\",qscr:\"𝓆\",quaternions:\"ℍ\",quatint:\"⨖\",quest:\"?\",questeq:\"≟\",quo:'\"',quot:'\"',rAarr:\"⇛\",rArr:\"⇒\",rAtail:\"⤜\",rBarr:\"⤏\",rHar:\"⥤\",race:\"∽̱\",racute:\"ŕ\",radic:\"√\",raemptyv:\"⦳\",rang:\"⟩\",rangd:\"⦒\",range:\"⦥\",rangle:\"⟩\",raqu:\"»\",raquo:\"»\",rarr:\"→\",rarrap:\"⥵\",rarrb:\"⇥\",rarrbfs:\"⤠\",rarrc:\"⤳\",rarrfs:\"⤞\",rarrhk:\"↪\",rarrlp:\"↬\",rarrpl:\"⥅\",rarrsim:\"⥴\",rarrtl:\"↣\",rarrw:\"↝\",ratail:\"⤚\",ratio:\"∶\",rationals:\"ℚ\",rbarr:\"⤍\",rbbrk:\"❳\",rbrace:\"}\",rbrack:\"]\",rbrke:\"⦌\",rbrksld:\"⦎\",rbrkslu:\"⦐\",rcaron:\"ř\",rcedil:\"ŗ\",rceil:\"⌉\",rcub:\"}\",rcy:\"р\",rdca:\"⤷\",rdldhar:\"⥩\",rdquo:\"”\",rdquor:\"”\",rdsh:\"↳\",real:\"ℜ\",realine:\"ℛ\",realpart:\"ℜ\",reals:\"ℝ\",rect:\"▭\",re:\"®\",reg:\"®\",rfisht:\"⥽\",rfloor:\"⌋\",rfr:\"𝔯\",rhard:\"⇁\",rharu:\"⇀\",rharul:\"⥬\",rho:\"ρ\",rhov:\"ϱ\",rightarrow:\"→\",rightarrowtail:\"↣\",rightharpoondown:\"⇁\",rightharpoonup:\"⇀\",rightleftarrows:\"⇄\",rightleftharpoons:\"⇌\",rightrightarrows:\"⇉\",rightsquigarrow:\"↝\",rightthreetimes:\"⋌\",ring:\"˚\",risingdotseq:\"≓\",rlarr:\"⇄\",rlhar:\"⇌\",rlm:\"‏\",rmoust:\"⎱\",rmoustache:\"⎱\",rnmid:\"⫮\",roang:\"⟭\",roarr:\"⇾\",robrk:\"⟧\",ropar:\"⦆\",ropf:\"𝕣\",roplus:\"⨮\",rotimes:\"⨵\",rpar:\")\",rpargt:\"⦔\",rppolint:\"⨒\",rrarr:\"⇉\",rsaquo:\"›\",rscr:\"𝓇\",rsh:\"↱\",rsqb:\"]\",rsquo:\"’\",rsquor:\"’\",rthree:\"⋌\",rtimes:\"⋊\",rtri:\"▹\",rtrie:\"⊵\",rtrif:\"▸\",rtriltri:\"⧎\",ruluhar:\"⥨\",rx:\"℞\",sacute:\"ś\",sbquo:\"‚\",sc:\"≻\",scE:\"⪴\",scap:\"⪸\",scaron:\"š\",sccue:\"≽\",sce:\"⪰\",scedil:\"ş\",scirc:\"ŝ\",scnE:\"⪶\",scnap:\"⪺\",scnsim:\"⋩\",scpolint:\"⨓\",scsim:\"≿\",scy:\"с\",sdot:\"⋅\",sdotb:\"⊡\",sdote:\"⩦\",seArr:\"⇘\",searhk:\"⤥\",searr:\"↘\",searrow:\"↘\",sec:\"§\",sect:\"§\",semi:\";\",seswar:\"⤩\",setminus:\"∖\",setmn:\"∖\",sext:\"✶\",sfr:\"𝔰\",sfrown:\"⌢\",sharp:\"♯\",shchcy:\"щ\",shcy:\"ш\",shortmid:\"∣\",shortparallel:\"∥\",sh:\"­\",shy:\"­\",sigma:\"σ\",sigmaf:\"ς\",sigmav:\"ς\",sim:\"∼\",simdot:\"⩪\",sime:\"≃\",simeq:\"≃\",simg:\"⪞\",simgE:\"⪠\",siml:\"⪝\",simlE:\"⪟\",simne:\"≆\",simplus:\"⨤\",simrarr:\"⥲\",slarr:\"←\",smallsetminus:\"∖\",smashp:\"⨳\",smeparsl:\"⧤\",smid:\"∣\",smile:\"⌣\",smt:\"⪪\",smte:\"⪬\",smtes:\"⪬︀\",softcy:\"ь\",sol:\"/\",solb:\"⧄\",solbar:\"⌿\",sopf:\"𝕤\",spades:\"♠\",spadesuit:\"♠\",spar:\"∥\",sqcap:\"⊓\",sqcaps:\"⊓︀\",sqcup:\"⊔\",sqcups:\"⊔︀\",sqsub:\"⊏\",sqsube:\"⊑\",sqsubset:\"⊏\",sqsubseteq:\"⊑\",sqsup:\"⊐\",sqsupe:\"⊒\",sqsupset:\"⊐\",sqsupseteq:\"⊒\",squ:\"□\",square:\"□\",squarf:\"▪\",squf:\"▪\",srarr:\"→\",sscr:\"𝓈\",ssetmn:\"∖\",ssmile:\"⌣\",sstarf:\"⋆\",star:\"☆\",starf:\"★\",straightepsilon:\"ϵ\",straightphi:\"ϕ\",strns:\"¯\",sub:\"⊂\",subE:\"⫅\",subdot:\"⪽\",sube:\"⊆\",subedot:\"⫃\",submult:\"⫁\",subnE:\"⫋\",subne:\"⊊\",subplus:\"⪿\",subrarr:\"⥹\",subset:\"⊂\",subseteq:\"⊆\",subseteqq:\"⫅\",subsetneq:\"⊊\",subsetneqq:\"⫋\",subsim:\"⫇\",subsub:\"⫕\",subsup:\"⫓\",succ:\"≻\",succapprox:\"⪸\",succcurlyeq:\"≽\",succeq:\"⪰\",succnapprox:\"⪺\",succneqq:\"⪶\",succnsim:\"⋩\",succsim:\"≿\",sum:\"∑\",sung:\"♪\",sup:\"⊃\",sup1:\"¹\",sup2:\"²\",sup3:\"³\",supE:\"⫆\",supdot:\"⪾\",supdsub:\"⫘\",supe:\"⊇\",supedot:\"⫄\",suphsol:\"⟉\",suphsub:\"⫗\",suplarr:\"⥻\",supmult:\"⫂\",supnE:\"⫌\",supne:\"⊋\",supplus:\"⫀\",supset:\"⊃\",supseteq:\"⊇\",supseteqq:\"⫆\",supsetneq:\"⊋\",supsetneqq:\"⫌\",supsim:\"⫈\",supsub:\"⫔\",supsup:\"⫖\",swArr:\"⇙\",swarhk:\"⤦\",swarr:\"↙\",swarrow:\"↙\",swnwar:\"⤪\",szli:\"ß\",szlig:\"ß\",target:\"⌖\",tau:\"τ\",tbrk:\"⎴\",tcaron:\"ť\",tcedil:\"ţ\",tcy:\"т\",tdot:\"⃛\",telrec:\"⌕\",tfr:\"𝔱\",there4:\"∴\",therefore:\"∴\",theta:\"θ\",thetasym:\"ϑ\",thetav:\"ϑ\",thickapprox:\"≈\",thicksim:\"∼\",thinsp:\" \",thkap:\"≈\",thksim:\"∼\",thor:\"þ\",thorn:\"þ\",tilde:\"˜\",time:\"×\",times:\"×\",timesb:\"⊠\",timesbar:\"⨱\",timesd:\"⨰\",tint:\"∭\",toea:\"⤨\",top:\"⊤\",topbot:\"⌶\",topcir:\"⫱\",topf:\"𝕥\",topfork:\"⫚\",tosa:\"⤩\",tprime:\"‴\",trade:\"™\",triangle:\"▵\",triangledown:\"▿\",triangleleft:\"◃\",trianglelefteq:\"⊴\",triangleq:\"≜\",triangleright:\"▹\",trianglerighteq:\"⊵\",tridot:\"◬\",trie:\"≜\",triminus:\"⨺\",triplus:\"⨹\",trisb:\"⧍\",tritime:\"⨻\",trpezium:\"⏢\",tscr:\"𝓉\",tscy:\"ц\",tshcy:\"ћ\",tstrok:\"ŧ\",twixt:\"≬\",twoheadleftarrow:\"↞\",twoheadrightarrow:\"↠\",uArr:\"⇑\",uHar:\"⥣\",uacut:\"ú\",uacute:\"ú\",uarr:\"↑\",ubrcy:\"ў\",ubreve:\"ŭ\",ucir:\"û\",ucirc:\"û\",ucy:\"у\",udarr:\"⇅\",udblac:\"ű\",udhar:\"⥮\",ufisht:\"⥾\",ufr:\"𝔲\",ugrav:\"ù\",ugrave:\"ù\",uharl:\"↿\",uharr:\"↾\",uhblk:\"▀\",ulcorn:\"⌜\",ulcorner:\"⌜\",ulcrop:\"⌏\",ultri:\"◸\",umacr:\"ū\",um:\"¨\",uml:\"¨\",uogon:\"ų\",uopf:\"𝕦\",uparrow:\"↑\",updownarrow:\"↕\",upharpoonleft:\"↿\",upharpoonright:\"↾\",uplus:\"⊎\",upsi:\"υ\",upsih:\"ϒ\",upsilon:\"υ\",upuparrows:\"⇈\",urcorn:\"⌝\",urcorner:\"⌝\",urcrop:\"⌎\",uring:\"ů\",urtri:\"◹\",uscr:\"𝓊\",utdot:\"⋰\",utilde:\"ũ\",utri:\"▵\",utrif:\"▴\",uuarr:\"⇈\",uum:\"ü\",uuml:\"ü\",uwangle:\"⦧\",vArr:\"⇕\",vBar:\"⫨\",vBarv:\"⫩\",vDash:\"⊨\",vangrt:\"⦜\",varepsilon:\"ϵ\",varkappa:\"ϰ\",varnothing:\"∅\",varphi:\"ϕ\",varpi:\"ϖ\",varpropto:\"∝\",varr:\"↕\",varrho:\"ϱ\",varsigma:\"ς\",varsubsetneq:\"⊊︀\",varsubsetneqq:\"⫋︀\",varsupsetneq:\"⊋︀\",varsupsetneqq:\"⫌︀\",vartheta:\"ϑ\",vartriangleleft:\"⊲\",vartriangleright:\"⊳\",vcy:\"в\",vdash:\"⊢\",vee:\"∨\",veebar:\"⊻\",veeeq:\"≚\",vellip:\"⋮\",verbar:\"|\",vert:\"|\",vfr:\"𝔳\",vltri:\"⊲\",vnsub:\"⊂⃒\",vnsup:\"⊃⃒\",vopf:\"𝕧\",vprop:\"∝\",vrtri:\"⊳\",vscr:\"𝓋\",vsubnE:\"⫋︀\",vsubne:\"⊊︀\",vsupnE:\"⫌︀\",vsupne:\"⊋︀\",vzigzag:\"⦚\",wcirc:\"ŵ\",wedbar:\"⩟\",wedge:\"∧\",wedgeq:\"≙\",weierp:\"℘\",wfr:\"𝔴\",wopf:\"𝕨\",wp:\"℘\",wr:\"≀\",wreath:\"≀\",wscr:\"𝓌\",xcap:\"⋂\",xcirc:\"◯\",xcup:\"⋃\",xdtri:\"▽\",xfr:\"𝔵\",xhArr:\"⟺\",xharr:\"⟷\",xi:\"ξ\",xlArr:\"⟸\",xlarr:\"⟵\",xmap:\"⟼\",xnis:\"⋻\",xodot:\"⨀\",xopf:\"𝕩\",xoplus:\"⨁\",xotime:\"⨂\",xrArr:\"⟹\",xrarr:\"⟶\",xscr:\"𝓍\",xsqcup:\"⨆\",xuplus:\"⨄\",xutri:\"△\",xvee:\"⋁\",xwedge:\"⋀\",yacut:\"ý\",yacute:\"ý\",yacy:\"я\",ycirc:\"ŷ\",ycy:\"ы\",ye:\"¥\",yen:\"¥\",yfr:\"𝔶\",yicy:\"ї\",yopf:\"𝕪\",yscr:\"𝓎\",yucy:\"ю\",yum:\"ÿ\",yuml:\"ÿ\",zacute:\"ź\",zcaron:\"ž\",zcy:\"з\",zdot:\"ż\",zeetrf:\"ℨ\",zeta:\"ζ\",zfr:\"𝔷\",zhcy:\"ж\",zigrarr:\"⇝\",zopf:\"𝕫\",zscr:\"𝓏\",zwj:\"‍\",zwnj:\"‌\"},la=function(e){return!!ca.call(sa,e)&&sa[e]},ca={}.hasOwnProperty;var ua={AElig:\"Æ\",AMP:\"&\",Aacute:\"Á\",Acirc:\"Â\",Agrave:\"À\",Aring:\"Å\",Atilde:\"Ã\",Auml:\"Ä\",COPY:\"©\",Ccedil:\"Ç\",ETH:\"Ð\",Eacute:\"É\",Ecirc:\"Ê\",Egrave:\"È\",Euml:\"Ë\",GT:\">\",Iacute:\"Í\",Icirc:\"Î\",Igrave:\"Ì\",Iuml:\"Ï\",LT:\"<\",Ntilde:\"Ñ\",Oacute:\"Ó\",Ocirc:\"Ô\",Ograve:\"Ò\",Oslash:\"Ø\",Otilde:\"Õ\",Ouml:\"Ö\",QUOT:'\"',REG:\"®\",THORN:\"Þ\",Uacute:\"Ú\",Ucirc:\"Û\",Ugrave:\"Ù\",Uuml:\"Ü\",Yacute:\"Ý\",aacute:\"á\",acirc:\"â\",acute:\"´\",aelig:\"æ\",agrave:\"à\",amp:\"&\",aring:\"å\",atilde:\"ã\",auml:\"ä\",brvbar:\"¦\",ccedil:\"ç\",cedil:\"¸\",cent:\"¢\",copy:\"©\",curren:\"¤\",deg:\"°\",divide:\"÷\",eacute:\"é\",ecirc:\"ê\",egrave:\"è\",eth:\"ð\",euml:\"ë\",frac12:\"½\",frac14:\"¼\",frac34:\"¾\",gt:\">\",iacute:\"í\",icirc:\"î\",iexcl:\"¡\",igrave:\"ì\",iquest:\"¿\",iuml:\"ï\",laquo:\"«\",lt:\"<\",macr:\"¯\",micro:\"µ\",middot:\"·\",nbsp:\" \",not:\"¬\",ntilde:\"ñ\",oacute:\"ó\",ocirc:\"ô\",ograve:\"ò\",ordf:\"ª\",ordm:\"º\",oslash:\"ø\",otilde:\"õ\",ouml:\"ö\",para:\"¶\",plusmn:\"±\",pound:\"£\",quot:'\"',raquo:\"»\",reg:\"®\",sect:\"§\",shy:\"­\",sup1:\"¹\",sup2:\"²\",sup3:\"³\",szlig:\"ß\",thorn:\"þ\",times:\"×\",uacute:\"ú\",ucirc:\"û\",ugrave:\"ù\",uml:\"¨\",uuml:\"ü\",yacute:\"ý\",yen:\"¥\",yuml:\"ÿ\"},da={0:\"�\",128:\"€\",130:\"‚\",131:\"ƒ\",132:\"„\",133:\"…\",134:\"†\",135:\"‡\",136:\"ˆ\",137:\"‰\",138:\"Š\",139:\"‹\",140:\"Œ\",142:\"Ž\",145:\"‘\",146:\"’\",147:\"“\",148:\"”\",149:\"•\",150:\"–\",151:\"—\",152:\"˜\",153:\"™\",154:\"š\",155:\"›\",156:\"œ\",158:\"ž\",159:\"Ÿ\"},ha=oa,pa=function(e){var t=\"string\"==typeof e?e.charCodeAt(0):e;return t>=97&&t<=102||t>=65&&t<=70||t>=48&&t<=57},fa=function(e){return ia(e)||aa(e)},ga=la,ma=function(e,t){var n,r,o={};for(r in t||(t={}),wa)n=t[r],o[r]=null==n?wa[r]:n;return(o.position.indent||o.position.start)&&(o.indent=o.position.indent||[],o.position=o.position.start),function(e,t){var n,r,o,i,a,s,l,c,u,d,h,p,f,g,m,v,b,y,w,x=t.additional,k=t.nonTerminated,S=t.text,E=t.reference,A=t.warning,P=t.textContext,T=t.referenceContext,C=t.warningContext,R=t.position,L=t.indent||[],D=e.length,$=0,M=-1,F=R.column||1,O=R.line||1,V=\"\",B=[];for(\"string\"==typeof x&&(x=x.charCodeAt(0)),v=_(),c=A?q:ya,$--,D++;++$<D;)if(a===ka&&(F=L[M]||1),(a=e.charCodeAt($))===Aa){if((l=e.charCodeAt($+1))===xa||l===ka||l===Sa||l===Ea||l===Aa||l===Ta||l!=l||x&&l===x){V+=ba(a),F++;continue}for(p=f=$+1,w=f,l===Ra?(w=++p,(l=e.charCodeAt(w))===La||l===Da?(g=Fa,w=++p):g=Oa):g=Ma,n=\"\",h=\"\",i=\"\",m=Ba[g],w--;++w<D&&m(l=e.charCodeAt(w));)i+=ba(l),g===Ma&&va.call(ua,i)&&(n=i,h=ua[i]);(o=e.charCodeAt(w)===Pa)&&(w++,(r=g===Ma&&ga(i))&&(n=i,h=r)),y=1+w-f,!o&&!k||(i?g===Ma?(o&&!h?c(ja,1):(n!==i&&(y=1+(w=p+n.length)-p,o=!1),o||(u=n?_a:Na,t.attribute?(l=e.charCodeAt(w))===Ca?(c(u,y),h=null):fa(l)?h=null:c(u,y):c(u,y))),s=h):(o||c(qa,y),Wa(s=parseInt(i,Va[g]))?(c(Ha,y),s=ba($a)):s in da?(c(Ia,y),s=da[s]):(d=\"\",Ga(s)&&c(Ia,y),s>65535&&(d+=ba((s-=65536)>>>10|55296),s=56320|1023&s),s=d+ba(s))):g!==Ma&&c(za,y)),s?(N(),v=_(),$=w-1,F+=w-f+1,B.push(s),(b=_()).offset++,E&&E.call(T,s,{start:v,end:b},e.slice(f-1,w)),v=b):(i=e.slice(f-1,w),V+=i,F+=i.length,$=w-1)}else 10===a&&(O++,M++,F=0),a==a?(V+=ba(a),F++):N();return B.join(\"\");function _(){return{line:O,column:F,offset:$+(R.offset||0)}}function q(e,t){var n=_();n.column+=t,n.offset+=t,A.call(C,Ua[e],n,e)}function N(){V&&(B.push(V),S&&S.call(P,V,{start:v,end:_()}),V=\"\")}}(e,o)},va={}.hasOwnProperty,ba=String.fromCharCode,ya=Function.prototype,wa={warning:null,reference:null,text:null,warningContext:null,referenceContext:null,textContext:null,position:{},additional:null,attribute:!1,nonTerminated:!0},xa=9,ka=10,Sa=12,Ea=32,Aa=38,Pa=59,Ta=60,Ca=61,Ra=35,La=88,Da=120,$a=65533,Ma=\"named\",Fa=\"hexadecimal\",Oa=\"decimal\",Va={};Va[Fa]=16,Va[Oa]=10;var Ba={};Ba[Ma]=fa,Ba[Oa]=ha,Ba[Fa]=pa;var _a=1,qa=2,Na=3,za=4,ja=5,Ia=6,Ha=7,Ua={};function Wa(e){return e>=55296&&e<=57343||e>1114111}function Ga(e){return e>=1&&e<=8||11===e||e>=13&&e<=31||e>=127&&e<=159||e>=64976&&e<=65007||!(65535&~e)||65534==(65535&e)}Ua[_a]=\"Named character references must be terminated by a semicolon\",Ua[qa]=\"Numeric character references must be terminated by a semicolon\",Ua[Na]=\"Named character references cannot be empty\",Ua[za]=\"Numeric character references cannot be empty\",Ua[ja]=\"Named character references must be known\",Ua[Ia]=\"Numeric character references cannot be disallowed\",Ua[Ha]=\"Numeric character references cannot be outside the permissible Unicode range\";var Ya,Xa,Za={exports:{}};Ya=Za,Xa=function(e){var t=/(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i,n=0,r={},o={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(t){return t instanceof i?new i(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++n}),e.__id},clone:function e(t,n){var r,i;switch(n=n||{},o.util.type(t)){case\"Object\":if(i=o.util.objId(t),n[i])return n[i];for(var a in r={},n[i]=r,t)t.hasOwnProperty(a)&&(r[a]=e(t[a],n));return r;case\"Array\":return i=o.util.objId(t),n[i]?n[i]:(r=[],n[i]=r,t.forEach((function(t,o){r[o]=e(t,n)})),r);default:return t}},getLanguage:function(e){for(;e;){var n=t.exec(e.className);if(n)return n[1].toLowerCase();e=e.parentElement}return\"none\"},setLanguage:function(e,n){e.className=e.className.replace(RegExp(t,\"gi\"),\"\"),e.classList.add(\"language-\"+n)},currentScript:function(){if(typeof document>\"u\")return null;if(\"currentScript\"in document)return document.currentScript;try{throw new Error}catch(r){var e=(/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(r.stack)||[])[1];if(e){var t=document.getElementsByTagName(\"script\");for(var n in t)if(t[n].src==e)return t[n]}return null}},isActive:function(e,t,n){for(var r=\"no-\"+t;e;){var o=e.classList;if(o.contains(t))return!0;if(o.contains(r))return!1;e=e.parentElement}return!!n}},languages:{plain:r,plaintext:r,text:r,txt:r,extend:function(e,t){var n=o.util.clone(o.languages[e]);for(var r in t)n[r]=t[r];return n},insertBefore:function(e,t,n,r){var i=(r=r||o.languages)[e],a={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in n)n.hasOwnProperty(l)&&(a[l]=n[l]);n.hasOwnProperty(s)||(a[s]=i[s])}var c=r[e];return r[e]=a,o.languages.DFS(o.languages,(function(t,n){n===c&&t!=e&&(this[t]=a)})),a},DFS:function e(t,n,r,i){i=i||{};var a=o.util.objId;for(var s in t)if(t.hasOwnProperty(s)){n.call(t,s,t[s],r||s);var l=t[s],c=o.util.type(l);\"Object\"!==c||i[a(l)]?\"Array\"===c&&!i[a(l)]&&(i[a(l)]=!0,e(l,n,s,i)):(i[a(l)]=!0,e(l,n,null,i))}}},plugins:{},highlightAll:function(e,t){o.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,n){var r={callback:n,container:e,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};o.hooks.run(\"before-highlightall\",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),o.hooks.run(\"before-all-elements-highlight\",r);for(var i,a=0;i=r.elements[a++];)o.highlightElement(i,!0===t,r.callback)},highlightElement:function(t,n,r){var i=o.util.getLanguage(t),a=o.languages[i];o.util.setLanguage(t,i);var s=t.parentElement;s&&\"pre\"===s.nodeName.toLowerCase()&&o.util.setLanguage(s,i);var l={element:t,language:i,grammar:a,code:t.textContent};function c(e){l.highlightedCode=e,o.hooks.run(\"before-insert\",l),l.element.innerHTML=l.highlightedCode,o.hooks.run(\"after-highlight\",l),o.hooks.run(\"complete\",l),r&&r.call(l.element)}if(o.hooks.run(\"before-sanity-check\",l),(s=l.element.parentElement)&&\"pre\"===s.nodeName.toLowerCase()&&!s.hasAttribute(\"tabindex\")&&s.setAttribute(\"tabindex\",\"0\"),!l.code)return o.hooks.run(\"complete\",l),void(r&&r.call(l.element));if(o.hooks.run(\"before-highlight\",l),l.grammar)if(n&&e.Worker){var u=new Worker(o.filename);u.onmessage=function(e){c(e.data)},u.postMessage(JSON.stringify({language:l.language,code:l.code,immediateClose:!0}))}else c(o.highlight(l.code,l.grammar,l.language));else c(o.util.encode(l.code))},highlight:function(e,t,n){var r={code:e,grammar:t,language:n};if(o.hooks.run(\"before-tokenize\",r),!r.grammar)throw new Error('The language \"'+r.language+'\" has no grammar.');return r.tokens=o.tokenize(r.code,r.grammar),o.hooks.run(\"after-tokenize\",r),i.stringify(o.util.encode(r.tokens),r.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var r in n)t[r]=n[r];delete t.rest}var o=new l;return c(o,o.head,e),s(e,o,t,o.head,0),function(e){for(var t=[],n=e.head.next;n!==e.tail;)t.push(n.value),n=n.next;return t}(o)},hooks:{all:{},add:function(e,t){var n=o.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=o.hooks.all[e];if(n&&n.length)for(var r,i=0;r=n[i++];)r(t)}},Token:i};function i(e,t,n,r){this.type=e,this.content=t,this.alias=n,this.length=0|(r||\"\").length}function a(e,t,n,r){e.lastIndex=t;var o=e.exec(n);if(o&&r&&o[1]){var i=o[1].length;o.index+=i,o[0]=o[0].slice(i)}return o}function s(e,t,n,r,l,d){for(var h in n)if(n.hasOwnProperty(h)&&n[h]){var p=n[h];p=Array.isArray(p)?p:[p];for(var f=0;f<p.length;++f){if(d&&d.cause==h+\",\"+f)return;var g=p[f],m=g.inside,v=!!g.lookbehind,b=!!g.greedy,y=g.alias;if(b&&!g.pattern.global){var w=g.pattern.toString().match(/[imsuy]*$/)[0];g.pattern=RegExp(g.pattern.source,w+\"g\")}for(var x=g.pattern||g,k=r.next,S=l;k!==t.tail&&!(d&&S>=d.reach);S+=k.value.length,k=k.next){var E=k.value;if(t.length>e.length)return;if(!(E instanceof i)){var A,P=1;if(b){if(!(A=a(x,S,e,v))||A.index>=e.length)break;var T=A.index,C=A.index+A[0].length,R=S;for(R+=k.value.length;T>=R;)R+=(k=k.next).value.length;if(S=R-=k.value.length,k.value instanceof i)continue;for(var L=k;L!==t.tail&&(R<C||\"string\"==typeof L.value);L=L.next)P++,R+=L.value.length;P--,E=e.slice(S,R),A.index-=S}else if(!(A=a(x,0,E,v)))continue;T=A.index;var D=A[0],$=E.slice(0,T),M=E.slice(T+D.length),F=S+E.length;d&&F>d.reach&&(d.reach=F);var O=k.prev;if($&&(O=c(t,O,$),S+=$.length),u(t,O,P),k=c(t,O,new i(h,m?o.tokenize(D,m):D,y,D)),M&&c(t,k,M),P>1){var V={cause:h+\",\"+f,reach:F};s(e,t,n,k.prev,S,V),d&&V.reach>d.reach&&(d.reach=V.reach)}}}}}}function l(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function c(e,t,n){var r=t.next,o={value:n,prev:t,next:r};return t.next=o,r.prev=o,e.length++,o}function u(e,t,n){for(var r=t.next,o=0;o<n&&r!==e.tail;o++)r=r.next;t.next=r,r.prev=t,e.length-=o}if(e.Prism=o,i.stringify=function e(t,n){if(\"string\"==typeof t)return t;if(Array.isArray(t)){var r=\"\";return t.forEach((function(t){r+=e(t,n)})),r}var i={type:t.type,content:e(t.content,n),tag:\"span\",classes:[\"token\",t.type],attributes:{},language:n},a=t.alias;a&&(Array.isArray(a)?Array.prototype.push.apply(i.classes,a):i.classes.push(a)),o.hooks.run(\"wrap\",i);var s=\"\";for(var l in i.attributes)s+=\" \"+l+'=\"'+(i.attributes[l]||\"\").replace(/\"/g,\"&quot;\")+'\"';return\"<\"+i.tag+' class=\"'+i.classes.join(\" \")+'\"'+s+\">\"+i.content+\"</\"+i.tag+\">\"},!e.document)return e.addEventListener&&(o.disableWorkerMessageHandler||e.addEventListener(\"message\",(function(t){var n=JSON.parse(t.data),r=n.language,i=n.code,a=n.immediateClose;e.postMessage(o.highlight(i,o.languages[r],r)),a&&e.close()}),!1)),o;var d=o.util.currentScript();function h(){o.manual||o.highlightAll()}if(d&&(o.filename=d.src,d.hasAttribute(\"data-manual\")&&(o.manual=!0)),!o.manual){var p=document.readyState;\"loading\"===p||\"interactive\"===p&&d&&d.defer?document.addEventListener(\"DOMContentLoaded\",h):window.requestAnimationFrame?window.requestAnimationFrame(h):window.setTimeout(h,16)}return o}(typeof window<\"u\"?window:typeof WorkerGlobalScope<\"u\"&&self instanceof WorkerGlobalScope?self:{}),Ya.exports&&(Ya.exports=Xa),typeof Mt<\"u\"&&(Mt.Prism=Xa);var Ka=Za.exports,Ja=Qa;function Qa(e){e.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\\s\\S])*?-->/,greedy:!0},prolog:{pattern:/<\\?[\\s\\S]+?\\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,greedy:!0,inside:{\"internal-subset\":{pattern:/(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\\]]/,\"doctype-tag\":/^DOCTYPE/i,name:/[^\\s<>'\"]+/}},cdata:{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,greedy:!0},tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,greedy:!0,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"special-attr\":[],\"attr-value\":{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:[{pattern:/&[\\da-z]{1,8};/i,alias:\"named-entity\"},/&#x?[\\da-f]{1,8};/i]},e.languages.markup.tag.inside[\"attr-value\"].inside.entity=e.languages.markup.entity,e.languages.markup.doctype.inside[\"internal-subset\"].inside=e.languages.markup,e.hooks.add(\"wrap\",(function(e){\"entity\"===e.type&&(e.attributes.title=e.content.value.replace(/&amp;/,\"&\"))})),Object.defineProperty(e.languages.markup.tag,\"addInlined\",{value:function(t,n){var r={};r[\"language-\"+n]={pattern:/(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,lookbehind:!0,inside:e.languages[n]},r.cdata=/^<!\\[CDATA\\[|\\]\\]>$/i;var o={\"included-cdata\":{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,inside:r}};o[\"language-\"+n]={pattern:/[\\s\\S]+/,inside:e.languages[n]};var i={};i[t]={pattern:RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g,(function(){return t})),\"i\"),lookbehind:!0,greedy:!0,inside:o},e.languages.insertBefore(\"markup\",\"cdata\",i)}}),Object.defineProperty(e.languages.markup.tag,\"addAttribute\",{value:function(t,n){e.languages.markup.tag.inside[\"special-attr\"].push({pattern:RegExp(/(^|[\"'\\s])/.source+\"(?:\"+t+\")\"+/\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\"i\"),lookbehind:!0,inside:{\"attr-name\":/^[^\\s=]+/,\"attr-value\":{pattern:/=[\\s\\S]+/,inside:{value:{pattern:/(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,lookbehind:!0,alias:[n,\"language-\"+n],inside:e.languages[n]},punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}}}})}}),e.languages.html=e.languages.markup,e.languages.mathml=e.languages.markup,e.languages.svg=e.languages.markup,e.languages.xml=e.languages.extend(\"markup\",{}),e.languages.ssml=e.languages.xml,e.languages.atom=e.languages.xml,e.languages.rss=e.languages.xml}Qa.displayName=\"markup\",Qa.aliases=[\"html\",\"mathml\",\"svg\",\"xml\",\"ssml\",\"atom\",\"rss\"];var es=ts;function ts(e){!function(e){var t=/(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;e.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:/@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,inside:{rule:/^@[\\w-]+/,\"selector-function-argument\":{pattern:/(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,lookbehind:!0,alias:\"selector\"},keyword:{pattern:/(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,lookbehind:!0}}},url:{pattern:RegExp(\"\\\\burl\\\\((?:\"+t.source+\"|\"+/(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source+\")\\\\)\",\"i\"),greedy:!0,inside:{function:/^url/i,punctuation:/^\\(|\\)$/,string:{pattern:RegExp(\"^\"+t.source+\"$\"),alias:\"url\"}}},selector:{pattern:RegExp(\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\"+t.source+\")*(?=\\\\s*\\\\{)\"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,lookbehind:!0},important:/!important\\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined(\"style\",\"css\"),n.tag.addAttribute(\"style\",\"css\"))}(e)}ts.displayName=\"css\",ts.aliases=[];var ns=rs;function rs(e){e.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,boolean:/\\b(?:false|true)\\b/,function:/\\b\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,punctuation:/[{}[\\];(),.:]/}}rs.displayName=\"clike\",rs.aliases=[];var os=is;function is(e){e.languages.javascript=e.languages.extend(\"clike\",{\"class-name\":[e.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\\})\\s*)catch\\b/,lookbehind:!0},{pattern:/(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],function:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,number:{pattern:RegExp(/(^|[^\\w$])/.source+\"(?:\"+/NaN|Infinity/.source+\"|\"+/0[bB][01]+(?:_[01]+)*n?/.source+\"|\"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+\"|\"+/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source+\"|\"+/\\d+(?:_\\d+)*n/.source+\"|\"+/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source+\")\"+/(?![\\w$])/.source),lookbehind:!0},operator:/--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/}),e.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/,e.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,lookbehind:!0,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:e.languages.regex},\"regex-delimiter\":/^\\/|\\/$/,\"regex-flags\":/^[a-z]+$/}},\"function-variable\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,lookbehind:!0,inside:e.languages.javascript},{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,lookbehind:!0,inside:e.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:e.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:e.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),e.languages.insertBefore(\"javascript\",\"string\",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:\"comment\"},\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:e.languages.javascript}},string:/[\\s\\S]+/}},\"string-property\":{pattern:/((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,lookbehind:!0,greedy:!0,alias:\"property\"}}),e.languages.insertBefore(\"javascript\",\"operator\",{\"literal-property\":{pattern:/((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,lookbehind:!0,alias:\"property\"}}),e.languages.markup&&(e.languages.markup.tag.addInlined(\"script\",\"javascript\"),e.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\"javascript\")),e.languages.js=e.languages.javascript}is.displayName=\"javascript\",is.aliases=[\"js\"];var as,ss,ls=\"object\"==typeof globalThis?globalThis:\"object\"==typeof self?self:\"object\"==typeof window?window:\"object\"==typeof Mt?Mt:{},cs=(ss=(as=\"Prism\"in ls)?ls.Prism:void 0,function(){as?ls.Prism=ss:delete ls.Prism,as=void 0,ss=void 0});ls.Prism={manual:!0,disableWorkerMessageHandler:!0};var us=ra,ds=ma,hs=Ka,ps=Ja,fs=es,gs=ns,ms=os;cs();var vs={}.hasOwnProperty;function bs(){}bs.prototype=hs;var ys=new bs;function ws(e){if(\"function\"!=typeof e||!e.displayName)throw new Error(\"Expected `function` for `grammar`, got `\"+e+\"`\");void 0===ys.languages[e.displayName]&&e(ys)}ys.highlight=function(e,t){var n,r=hs.highlight;if(\"string\"!=typeof e)throw new Error(\"Expected `string` for `value`, got `\"+e+\"`\");if(\"Object\"===ys.util.type(t))n=t,t=null;else{if(\"string\"!=typeof t)throw new Error(\"Expected `string` for `name`, got `\"+t+\"`\");if(!vs.call(ys.languages,t))throw new Error(\"Unknown language: `\"+t+\"` is not registered\");n=ys.languages[t]}return r.call(this,e,n,t)},ys.register=ws,ys.alias=function(e,t){var n,r,o,i,a=ys.languages,s=e;for(n in t&&((s={})[e]=t),s)for(r=s[n],o=(r=\"string\"==typeof r?[r]:r).length,i=-1;++i<o;)a[r[i]]=a[n]},ys.registered=function(e){if(\"string\"!=typeof e)throw new Error(\"Expected `string` for `language`, got `\"+e+\"`\");return vs.call(ys.languages,e)},ys.listLanguages=function(){var e,t=ys.languages,n=[];for(e in t)vs.call(t,e)&&\"object\"==typeof t[e]&&n.push(e);return n},ws(ps),ws(fs),ws(gs),ws(ms),ys.util.encode=function(e){return e},ys.Token.stringify=function(e,t,n){var r;return\"string\"==typeof e?{type:\"text\",value:e}:\"Array\"===ys.util.type(e)?function(e,t){for(var n,r=[],o=e.length,i=-1;++i<o;)\"\"!==(n=e[i])&&null!=n&&r.push(n);for(i=-1,o=r.length;++i<o;)n=r[i],r[i]=ys.Token.stringify(n,t,r);return r}(e,t):(r={type:e.type,content:ys.Token.stringify(e.content,t,n),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t,parent:n},e.alias&&(r.classes=r.classes.concat(e.alias)),ys.hooks.run(\"wrap\",r),us(r.tag+\".\"+r.classes.join(\".\"),function(e){var t;for(t in e)e[t]=ds(e[t]);return e}(r.attributes),r.content))};const xs=[\"top\",\"right\",\"bottom\",\"left\"],ks=Math.min,Ss=Math.max,Es=Math.round,As=Math.floor,Ps=e=>({x:e,y:e}),Ts={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"},Cs={start:\"end\",end:\"start\"};function Rs(e,t,n){return Ss(e,ks(t,n))}function Ls(e,t){return\"function\"==typeof e?e(t):e}function Ds(e){return e.split(\"-\")[0]}function $s(e){return e.split(\"-\")[1]}function Ms(e){return\"x\"===e?\"y\":\"x\"}function Fs(e){return\"y\"===e?\"height\":\"width\"}function Os(e){return[\"top\",\"bottom\"].includes(Ds(e))?\"y\":\"x\"}function Vs(e){return Ms(Os(e))}function Bs(e){return e.replace(/start|end/g,(e=>Cs[e]))}function _s(e){return e.replace(/left|right|bottom|top/g,(e=>Ts[e]))}function qs(e){return\"number\"!=typeof e?function(e){return{top:0,right:0,bottom:0,left:0,...e}}(e):{top:e,right:e,bottom:e,left:e}}function Ns(e){const{x:t,y:n,width:r,height:o}=e;return{width:r,height:o,top:n,left:t,right:t+r,bottom:n+o,x:t,y:n}}function zs(e,t,n){let{reference:r,floating:o}=e;const i=Os(t),a=Vs(t),s=Fs(a),l=Ds(t),c=\"y\"===i,u=r.x+r.width/2-o.width/2,d=r.y+r.height/2-o.height/2,h=r[s]/2-o[s]/2;let p;switch(l){case\"top\":p={x:u,y:r.y-o.height};break;case\"bottom\":p={x:u,y:r.y+r.height};break;case\"right\":p={x:r.x+r.width,y:d};break;case\"left\":p={x:r.x-o.width,y:d};break;default:p={x:r.x,y:r.y}}switch($s(t)){case\"start\":p[a]-=h*(n&&c?-1:1);break;case\"end\":p[a]+=h*(n&&c?-1:1)}return p}async function js(e,t){var n;void 0===t&&(t={});const{x:r,y:o,platform:i,rects:a,elements:s,strategy:l}=e,{boundary:c=\"clippingAncestors\",rootBoundary:u=\"viewport\",elementContext:d=\"floating\",altBoundary:h=!1,padding:p=0}=Ls(t,e),f=qs(p),g=s[h?\"floating\"===d?\"reference\":\"floating\":d],m=Ns(await i.getClippingRect({element:null==(n=await(null==i.isElement?void 0:i.isElement(g)))||n?g:g.contextElement||await(null==i.getDocumentElement?void 0:i.getDocumentElement(s.floating)),boundary:c,rootBoundary:u,strategy:l})),v=\"floating\"===d?{x:r,y:o,width:a.floating.width,height:a.floating.height}:a.reference,b=await(null==i.getOffsetParent?void 0:i.getOffsetParent(s.floating)),y=await(null==i.isElement?void 0:i.isElement(b))&&await(null==i.getScale?void 0:i.getScale(b))||{x:1,y:1},w=Ns(i.convertOffsetParentRelativeRectToViewportRelativeRect?await i.convertOffsetParentRelativeRectToViewportRelativeRect({elements:s,rect:v,offsetParent:b,strategy:l}):v);return{top:(m.top-w.top+f.top)/y.y,bottom:(w.bottom-m.bottom+f.bottom)/y.y,left:(m.left-w.left+f.left)/y.x,right:(w.right-m.right+f.right)/y.x}}function Is(e,t){return{top:e.top-t.height,right:e.right-t.width,bottom:e.bottom-t.height,left:e.left-t.width}}function Hs(e){return xs.some((t=>e[t]>=0))}const Us=function(e){return void 0===e&&(e=0),{name:\"offset\",options:e,async fn(t){var n,r;const{x:o,y:i,placement:a,middlewareData:s}=t,l=await async function(e,t){const{placement:n,platform:r,elements:o}=e,i=await(null==r.isRTL?void 0:r.isRTL(o.floating)),a=Ds(n),s=$s(n),l=\"y\"===Os(n),c=[\"left\",\"top\"].includes(a)?-1:1,u=i&&l?-1:1,d=Ls(t,e);let{mainAxis:h,crossAxis:p,alignmentAxis:f}=\"number\"==typeof d?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...d};return s&&\"number\"==typeof f&&(p=\"end\"===s?-1*f:f),l?{x:p*u,y:h*c}:{x:h*c,y:p*u}}(t,e);return a===(null==(n=s.offset)?void 0:n.placement)&&null!=(r=s.arrow)&&r.alignmentOffset?{}:{x:o+l.x,y:i+l.y,data:{...l,placement:a}}}}};function Ws(e){return Xs(e)?(e.nodeName||\"\").toLowerCase():\"#document\"}function Gs(e){var t;return(null==e||null==(t=e.ownerDocument)?void 0:t.defaultView)||window}function Ys(e){var t;return null==(t=(Xs(e)?e.ownerDocument:e.document)||window.document)?void 0:t.documentElement}function Xs(e){return e instanceof Node||e instanceof Gs(e).Node}function Zs(e){return e instanceof Element||e instanceof Gs(e).Element}function Ks(e){return e instanceof HTMLElement||e instanceof Gs(e).HTMLElement}function Js(e){return!(typeof ShadowRoot>\"u\")&&(e instanceof ShadowRoot||e instanceof Gs(e).ShadowRoot)}function Qs(e){const{overflow:t,overflowX:n,overflowY:r,display:o}=ol(e);return/auto|scroll|overlay|hidden|clip/.test(t+r+n)&&![\"inline\",\"contents\"].includes(o)}function el(e){return[\"table\",\"td\",\"th\"].includes(Ws(e))}function tl(e){const t=nl(),n=ol(e);return\"none\"!==n.transform||\"none\"!==n.perspective||!!n.containerType&&\"normal\"!==n.containerType||!t&&!!n.backdropFilter&&\"none\"!==n.backdropFilter||!t&&!!n.filter&&\"none\"!==n.filter||[\"transform\",\"perspective\",\"filter\"].some((e=>(n.willChange||\"\").includes(e)))||[\"paint\",\"layout\",\"strict\",\"content\"].some((e=>(n.contain||\"\").includes(e)))}function nl(){return!(typeof CSS>\"u\"||!CSS.supports)&&CSS.supports(\"-webkit-backdrop-filter\",\"none\")}function rl(e){return[\"html\",\"body\",\"#document\"].includes(Ws(e))}function ol(e){return Gs(e).getComputedStyle(e)}function il(e){return Zs(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function al(e){if(\"html\"===Ws(e))return e;const t=e.assignedSlot||e.parentNode||Js(e)&&e.host||Ys(e);return Js(t)?t.host:t}function sl(e){const t=al(e);return rl(t)?e.ownerDocument?e.ownerDocument.body:e.body:Ks(t)&&Qs(t)?t:sl(t)}function ll(e,t,n){var r;void 0===t&&(t=[]),void 0===n&&(n=!0);const o=sl(e),i=o===(null==(r=e.ownerDocument)?void 0:r.body),a=Gs(o);return i?t.concat(a,a.visualViewport||[],Qs(o)?o:[],a.frameElement&&n?ll(a.frameElement):[]):t.concat(o,ll(o,[],n))}function cl(e){const t=ol(e);let n=parseFloat(t.width)||0,r=parseFloat(t.height)||0;const o=Ks(e),i=o?e.offsetWidth:n,a=o?e.offsetHeight:r,s=Es(n)!==i||Es(r)!==a;return s&&(n=i,r=a),{width:n,height:r,$:s}}function ul(e){return Zs(e)?e:e.contextElement}function dl(e){const t=ul(e);if(!Ks(t))return Ps(1);const n=t.getBoundingClientRect(),{width:r,height:o,$:i}=cl(t);let a=(i?Es(n.width):n.width)/r,s=(i?Es(n.height):n.height)/o;return(!a||!Number.isFinite(a))&&(a=1),(!s||!Number.isFinite(s))&&(s=1),{x:a,y:s}}const hl=Ps(0);function pl(e){const t=Gs(e);return nl()&&t.visualViewport?{x:t.visualViewport.offsetLeft,y:t.visualViewport.offsetTop}:hl}function fl(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=!1);const o=e.getBoundingClientRect(),i=ul(e);let a=Ps(1);t&&(r?Zs(r)&&(a=dl(r)):a=dl(e));const s=function(e,t,n){return void 0===t&&(t=!1),!(!n||t&&n!==Gs(e))&&t}(i,n,r)?pl(i):Ps(0);let l=(o.left+s.x)/a.x,c=(o.top+s.y)/a.y,u=o.width/a.x,d=o.height/a.y;if(i){const e=Gs(i),t=r&&Zs(r)?Gs(r):r;let n=e,o=n.frameElement;for(;o&&r&&t!==n;){const e=dl(o),t=o.getBoundingClientRect(),r=ol(o),i=t.left+(o.clientLeft+parseFloat(r.paddingLeft))*e.x,a=t.top+(o.clientTop+parseFloat(r.paddingTop))*e.y;l*=e.x,c*=e.y,u*=e.x,d*=e.y,l+=i,c+=a,n=Gs(o),o=n.frameElement}}return Ns({width:u,height:d,x:l,y:c})}const gl=[\":popover-open\",\":modal\"];function ml(e){return gl.some((t=>{try{return e.matches(t)}catch{return!1}}))}function vl(e){return fl(Ys(e)).left+il(e).scrollLeft}function bl(e,t,n){let r;if(\"viewport\"===t)r=function(e,t){const n=Gs(e),r=Ys(e),o=n.visualViewport;let i=r.clientWidth,a=r.clientHeight,s=0,l=0;if(o){i=o.width,a=o.height;const e=nl();(!e||e&&\"fixed\"===t)&&(s=o.offsetLeft,l=o.offsetTop)}return{width:i,height:a,x:s,y:l}}(e,n);else if(\"document\"===t)r=function(e){const t=Ys(e),n=il(e),r=e.ownerDocument.body,o=Ss(t.scrollWidth,t.clientWidth,r.scrollWidth,r.clientWidth),i=Ss(t.scrollHeight,t.clientHeight,r.scrollHeight,r.clientHeight);let a=-n.scrollLeft+vl(e);const s=-n.scrollTop;return\"rtl\"===ol(r).direction&&(a+=Ss(t.clientWidth,r.clientWidth)-o),{width:o,height:i,x:a,y:s}}(Ys(e));else if(Zs(t))r=function(e,t){const n=fl(e,!0,\"fixed\"===t),r=n.top+e.clientTop,o=n.left+e.clientLeft,i=Ks(e)?dl(e):Ps(1);return{width:e.clientWidth*i.x,height:e.clientHeight*i.y,x:o*i.x,y:r*i.y}}(t,n);else{const n=pl(e);r={...t,x:t.x-n.x,y:t.y-n.y}}return Ns(r)}function yl(e,t){const n=al(e);return!(n===t||!Zs(n)||rl(n))&&(\"fixed\"===ol(n).position||yl(n,t))}function wl(e,t){const n=t.get(e);if(n)return n;let r=ll(e,[],!1).filter((e=>Zs(e)&&\"body\"!==Ws(e))),o=null;const i=\"fixed\"===ol(e).position;let a=i?al(e):e;for(;Zs(a)&&!rl(a);){const t=ol(a),n=tl(a);!n&&\"fixed\"===t.position&&(o=null),(i?!n&&!o:!n&&\"static\"===t.position&&o&&[\"absolute\",\"fixed\"].includes(o.position)||Qs(a)&&!n&&yl(e,a))?r=r.filter((e=>e!==a)):o=t,a=al(a)}return t.set(e,r),r}function xl(e,t,n){const r=Ks(t),o=Ys(t),i=\"fixed\"===n,a=fl(e,!0,i,t);let s={scrollLeft:0,scrollTop:0};const l=Ps(0);if(r||!r&&!i)if((\"body\"!==Ws(t)||Qs(o))&&(s=il(t)),r){const e=fl(t,!0,i,t);l.x=e.x+t.clientLeft,l.y=e.y+t.clientTop}else o&&(l.x=vl(o));return{x:a.left+s.scrollLeft-l.x,y:a.top+s.scrollTop-l.y,width:a.width,height:a.height}}function kl(e,t){return Ks(e)&&\"fixed\"!==ol(e).position?t?t(e):e.offsetParent:null}function Sl(e,t){const n=Gs(e);if(!Ks(e)||ml(e))return n;let r=kl(e,t);for(;r&&el(r)&&\"static\"===ol(r).position;)r=kl(r,t);return r&&(\"html\"===Ws(r)||\"body\"===Ws(r)&&\"static\"===ol(r).position&&!tl(r))?n:r||function(e){let t=al(e);for(;Ks(t)&&!rl(t);){if(tl(t))return t;t=al(t)}return null}(e)||n}const El={convertOffsetParentRelativeRectToViewportRelativeRect:function(e){let{elements:t,rect:n,offsetParent:r,strategy:o}=e;const i=\"fixed\"===o,a=Ys(r),s=!!t&&ml(t.floating);if(r===a||s&&i)return n;let l={scrollLeft:0,scrollTop:0},c=Ps(1);const u=Ps(0),d=Ks(r);if((d||!d&&!i)&&((\"body\"!==Ws(r)||Qs(a))&&(l=il(r)),Ks(r))){const e=fl(r);c=dl(r),u.x=e.x+r.clientLeft,u.y=e.y+r.clientTop}return{width:n.width*c.x,height:n.height*c.y,x:n.x*c.x-l.scrollLeft*c.x+u.x,y:n.y*c.y-l.scrollTop*c.y+u.y}},getDocumentElement:Ys,getClippingRect:function(e){let{element:t,boundary:n,rootBoundary:r,strategy:o}=e;const i=[...\"clippingAncestors\"===n?wl(t,this._c):[].concat(n),r],a=i[0],s=i.reduce(((e,n)=>{const r=bl(t,n,o);return e.top=Ss(r.top,e.top),e.right=ks(r.right,e.right),e.bottom=ks(r.bottom,e.bottom),e.left=Ss(r.left,e.left),e}),bl(t,a,o));return{width:s.right-s.left,height:s.bottom-s.top,x:s.left,y:s.top}},getOffsetParent:Sl,getElementRects:async function(e){const t=this.getOffsetParent||Sl,n=this.getDimensions;return{reference:xl(e.reference,await t(e.floating),e.strategy),floating:{x:0,y:0,...await n(e.floating)}}},getClientRects:function(e){return Array.from(e.getClientRects())},getDimensions:function(e){const{width:t,height:n}=cl(e);return{width:t,height:n}},getScale:dl,isElement:Zs,isRTL:function(e){return\"rtl\"===ol(e).direction}};function Al(e,t,n,r){void 0===r&&(r={});const{ancestorScroll:o=!0,ancestorResize:i=!0,elementResize:a=\"function\"==typeof ResizeObserver,layoutShift:s=\"function\"==typeof IntersectionObserver,animationFrame:l=!1}=r,c=ul(e),u=o||i?[...c?ll(c):[],...ll(t)]:[];u.forEach((e=>{o&&e.addEventListener(\"scroll\",n,{passive:!0}),i&&e.addEventListener(\"resize\",n)}));const d=c&&s?function(e,t){let n,r=null;const o=Ys(e);function i(){var e;clearTimeout(n),null==(e=r)||e.disconnect(),r=null}return function a(s,l){void 0===s&&(s=!1),void 0===l&&(l=1),i();const{left:c,top:u,width:d,height:h}=e.getBoundingClientRect();if(s||t(),!d||!h)return;const p={rootMargin:-As(u)+\"px \"+-As(o.clientWidth-(c+d))+\"px \"+-As(o.clientHeight-(u+h))+\"px \"+-As(c)+\"px\",threshold:Ss(0,ks(1,l))||1};let f=!0;function g(e){const t=e[0].intersectionRatio;if(t!==l){if(!f)return a();t?a(!1,t):n=setTimeout((()=>{a(!1,1e-7)}),100)}f=!1}try{r=new IntersectionObserver(g,{...p,root:o.ownerDocument})}catch{r=new IntersectionObserver(g,p)}r.observe(e)}(!0),i}(c,n):null;let h=-1,p=null;a&&(p=new ResizeObserver((e=>{let[r]=e;r&&r.target===c&&p&&(p.unobserve(t),cancelAnimationFrame(h),h=requestAnimationFrame((()=>{var e;null==(e=p)||e.observe(t)}))),n()})),c&&!l&&p.observe(c),p.observe(t));let f,g=l?fl(e):null;return l&&function t(){const r=fl(e);g&&(r.x!==g.x||r.y!==g.y||r.width!==g.width||r.height!==g.height)&&n(),g=r,f=requestAnimationFrame(t)}(),n(),()=>{var e;u.forEach((e=>{o&&e.removeEventListener(\"scroll\",n),i&&e.removeEventListener(\"resize\",n)})),null==d||d(),null==(e=p)||e.disconnect(),p=null,l&&cancelAnimationFrame(f)}}const Pl=function(e){return void 0===e&&(e={}),{name:\"shift\",options:e,async fn(t){const{x:n,y:r,placement:o}=t,{mainAxis:i=!0,crossAxis:a=!1,limiter:s={fn:e=>{let{x:t,y:n}=e;return{x:t,y:n}}},...l}=Ls(e,t),c={x:n,y:r},u=await js(t,l),d=Os(Ds(o)),h=Ms(d);let p=c[h],f=c[d];if(i){const e=\"y\"===h?\"bottom\":\"right\";p=Rs(p+u[\"y\"===h?\"top\":\"left\"],p,p-u[e])}if(a){const e=\"y\"===d?\"bottom\":\"right\";f=Rs(f+u[\"y\"===d?\"top\":\"left\"],f,f-u[e])}const g=s.fn({...t,[h]:p,[d]:f});return{...g,data:{x:g.x-n,y:g.y-r}}}}},Tl=function(e){return void 0===e&&(e={}),{name:\"flip\",options:e,async fn(t){var n,r;const{placement:o,middlewareData:i,rects:a,initialPlacement:s,platform:l,elements:c}=t,{mainAxis:u=!0,crossAxis:d=!0,fallbackPlacements:h,fallbackStrategy:p=\"bestFit\",fallbackAxisSideDirection:f=\"none\",flipAlignment:g=!0,...m}=Ls(e,t);if(null!=(n=i.arrow)&&n.alignmentOffset)return{};const v=Ds(o),b=Ds(s)===s,y=await(null==l.isRTL?void 0:l.isRTL(c.floating)),w=h||(b||!g?[_s(s)]:function(e){const t=_s(e);return[Bs(e),t,Bs(t)]}(s));!h&&\"none\"!==f&&w.push(...function(e,t,n,r){const o=$s(e);let i=function(e,t,n){const r=[\"left\",\"right\"],o=[\"right\",\"left\"],i=[\"top\",\"bottom\"],a=[\"bottom\",\"top\"];switch(e){case\"top\":case\"bottom\":return n?t?o:r:t?r:o;case\"left\":case\"right\":return t?i:a;default:return[]}}(Ds(e),\"start\"===n,r);return o&&(i=i.map((e=>e+\"-\"+o)),t&&(i=i.concat(i.map(Bs)))),i}(s,g,f,y));const x=[s,...w],k=await js(t,m),S=[];let E=(null==(r=i.flip)?void 0:r.overflows)||[];if(u&&S.push(k[v]),d){const e=function(e,t,n){void 0===n&&(n=!1);const r=$s(e),o=Vs(e),i=Fs(o);let a=\"x\"===o?r===(n?\"end\":\"start\")?\"right\":\"left\":\"start\"===r?\"bottom\":\"top\";return t.reference[i]>t.floating[i]&&(a=_s(a)),[a,_s(a)]}(o,a,y);S.push(k[e[0]],k[e[1]])}if(E=[...E,{placement:o,overflows:S}],!S.every((e=>e<=0))){var A,P;const e=((null==(A=i.flip)?void 0:A.index)||0)+1,t=x[e];if(t)return{data:{index:e,overflows:E},reset:{placement:t}};let n=null==(P=E.filter((e=>e.overflows[0]<=0)).sort(((e,t)=>e.overflows[1]-t.overflows[1]))[0])?void 0:P.placement;if(!n)switch(p){case\"bestFit\":{var T;const e=null==(T=E.map((e=>[e.placement,e.overflows.filter((e=>e>0)).reduce(((e,t)=>e+t),0)])).sort(((e,t)=>e[1]-t[1]))[0])?void 0:T[0];e&&(n=e);break}case\"initialPlacement\":n=s}if(o!==n)return{reset:{placement:n}}}return{}}}},Cl=function(e){return void 0===e&&(e={}),{name:\"hide\",options:e,async fn(t){const{rects:n}=t,{strategy:r=\"referenceHidden\",...o}=Ls(e,t);switch(r){case\"referenceHidden\":{const e=Is(await js(t,{...o,elementContext:\"reference\"}),n.reference);return{data:{referenceHiddenOffsets:e,referenceHidden:Hs(e)}}}case\"escaped\":{const e=Is(await js(t,{...o,altBoundary:!0}),n.floating);return{data:{escapedOffsets:e,escaped:Hs(e)}}}default:return{}}}}},Rl=e=>({name:\"arrow\",options:e,async fn(t){const{x:n,y:r,placement:o,rects:i,platform:a,elements:s,middlewareData:l}=t,{element:c,padding:u=0}=Ls(e,t)||{};if(null==c)return{};const d=qs(u),h={x:n,y:r},p=Vs(o),f=Fs(p),g=await a.getDimensions(c),m=\"y\"===p,v=m?\"top\":\"left\",b=m?\"bottom\":\"right\",y=m?\"clientHeight\":\"clientWidth\",w=i.reference[f]+i.reference[p]-h[p]-i.floating[f],x=h[p]-i.reference[p],k=await(null==a.getOffsetParent?void 0:a.getOffsetParent(c));let S=k?k[y]:0;(!S||!await(null==a.isElement?void 0:a.isElement(k)))&&(S=s.floating[y]||i.floating[f]);const E=w/2-x/2,A=S/2-g[f]/2-1,P=ks(d[v],A),T=ks(d[b],A),C=P,R=S-g[f]-T,L=S/2-g[f]/2+E,D=Rs(C,L,R),$=!l.arrow&&null!=$s(o)&&L!==D&&i.reference[f]/2-(L<C?P:T)-g[f]/2<0,M=$?L<C?L-C:L-R:0;return{[p]:h[p]+M,data:{[p]:D,centerOffset:L-D-M,...$&&{alignmentOffset:M}},reset:$}}}),Ll=(e,t,n)=>{const r=new Map,o={platform:El,...n},i={...o.platform,_c:r};return(async(e,t,n)=>{const{placement:r=\"bottom\",strategy:o=\"absolute\",middleware:i=[],platform:a}=n,s=i.filter(Boolean),l=await(null==a.isRTL?void 0:a.isRTL(t));let c=await a.getElementRects({reference:e,floating:t,strategy:o}),{x:u,y:d}=zs(c,r,l),h=r,p={},f=0;for(let n=0;n<s.length;n++){const{name:i,fn:g}=s[n],{x:m,y:v,data:b,reset:y}=await g({x:u,y:d,initialPlacement:r,placement:h,strategy:o,middlewareData:p,rects:c,platform:a,elements:{reference:e,floating:t}});u=null!=m?m:u,d=null!=v?v:d,p={...p,[i]:{...p[i],...b}},y&&f<=50&&(f++,\"object\"==typeof y&&(y.placement&&(h=y.placement),y.rects&&(c=!0===y.rects?await a.getElementRects({reference:e,floating:t,strategy:o}):y.rects),({x:u,y:d}=zs(c,h,l))),n=-1)}return{x:u,y:d,placement:h,strategy:o,middlewareData:p}})(e,t,{...o,platform:i})};var Dl=typeof document<\"u\"?react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_1__.useEffect;function $l(e,t){if(e===t)return!0;if(typeof e!=typeof t)return!1;if(\"function\"==typeof e&&e.toString()===t.toString())return!0;let n,r,o;if(e&&t&&\"object\"==typeof e){if(Array.isArray(e)){if(n=e.length,n!==t.length)return!1;for(r=n;0!=r--;)if(!$l(e[r],t[r]))return!1;return!0}if(o=Object.keys(e),n=o.length,n!==Object.keys(t).length)return!1;for(r=n;0!=r--;)if(!{}.hasOwnProperty.call(t,o[r]))return!1;for(r=n;0!=r--;){const n=o[r];if(!(\"_owner\"===n&&e.$$typeof||$l(e[n],t[n])))return!1}return!0}return e!=e&&t!=t}function Ml(e){return typeof window>\"u\"?1:(e.ownerDocument.defaultView||window).devicePixelRatio||1}function Fl(e,t){const n=Ml(e);return Math.round(t*n)/n}function Ol(e){const t=react__WEBPACK_IMPORTED_MODULE_1__.useRef(e);return Dl((()=>{t.current=e})),t}const Vl=e=>({name:\"arrow\",options:e,fn(t){const{element:n,padding:r}=\"function\"==typeof e?e(t):e;return n&&(o=n,{}.hasOwnProperty.call(o,\"current\"))?null!=n.current?Rl({element:n.current,padding:r}).fn(t):{}:n?Rl({element:n,padding:r}).fn(t):{};var o}}),Bl=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({transformPagePoint:e=>e,isStatic:!1,reducedMotion:\"never\"}),_l=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({}),ql=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null),Nl=typeof document<\"u\",zl=Nl?react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_1__.useEffect,jl=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({strict:!1}),Il=e=>e.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase(),Hl=\"data-\"+Il(\"framerAppearId\"),Ul=!1,Wl=!1;class Gl{constructor(){this.order=[],this.scheduled=new Set}add(e){if(!this.scheduled.has(e))return this.scheduled.add(e),this.order.push(e),!0}remove(e){const t=this.order.indexOf(e);-1!==t&&(this.order.splice(t,1),this.scheduled.delete(e))}clear(){this.order.length=0,this.scheduled.clear()}}const Yl=[\"prepare\",\"read\",\"update\",\"preRender\",\"render\",\"postRender\"];function Xl(e,t){let n=!1,r=!0;const o={delta:0,timestamp:0,isProcessing:!1},i=Yl.reduce(((e,t)=>(e[t]=function(e){let t=new Gl,n=new Gl,r=0,o=!1,i=!1;const a=new WeakSet,s={schedule:(e,i=!1,s=!1)=>{const l=s&&o,c=l?t:n;return i&&a.add(e),c.add(e)&&l&&o&&(r=t.order.length),e},cancel:e=>{n.remove(e),a.delete(e)},process:l=>{if(o)i=!0;else{if(o=!0,[t,n]=[n,t],n.clear(),r=t.order.length,r)for(let n=0;n<r;n++){const r=t.order[n];a.has(r)&&(s.schedule(r),e()),r(l)}o=!1,i&&(i=!1,s.process(l))}}};return s}((()=>n=!0)),e)),{}),a=e=>{i[e].process(o)},s=()=>{const i=performance.now();n=!1,o.delta=r?1e3/60:Math.max(Math.min(i-o.timestamp,40),1),o.timestamp=i,o.isProcessing=!0,Yl.forEach(a),o.isProcessing=!1,n&&t&&(r=!1,e(s))};return{schedule:Yl.reduce(((t,a)=>{const l=i[a];return t[a]=(t,i=!1,a=!1)=>(n||(n=!0,r=!0,o.isProcessing||e(s)),l.schedule(t,i,a)),t}),{}),cancel:e=>Yl.forEach((t=>i[t].cancel(e))),state:o,steps:i}}const{schedule:Zl,cancel:Kl}=Xl(queueMicrotask,!1);function Jl(e){return e&&\"object\"==typeof e&&Object.prototype.hasOwnProperty.call(e,\"current\")}function Ql(e){return\"string\"==typeof e||Array.isArray(e)}function ec(e){return null!==e&&\"object\"==typeof e&&\"function\"==typeof e.start}const tc=[\"animate\",\"whileInView\",\"whileFocus\",\"whileHover\",\"whileTap\",\"whileDrag\",\"exit\"],nc=[\"initial\",...tc];function rc(e){return ec(e.animate)||nc.some((t=>Ql(e[t])))}function oc(e){return!(!rc(e)&&!e.variants)}function ic(e){const{initial:t,animate:n}=function(e,t){if(rc(e)){const{initial:t,animate:n}=e;return{initial:!1===t||Ql(t)?t:void 0,animate:Ql(n)?n:void 0}}return!1!==e.inherit?t:{}}(e,(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_l));return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({initial:t,animate:n})),[ac(t),ac(n)])}function ac(e){return Array.isArray(e)?e.join(\" \"):e}const sc={animation:[\"animate\",\"variants\",\"whileHover\",\"whileTap\",\"exit\",\"whileInView\",\"whileFocus\",\"whileDrag\"],exit:[\"exit\"],drag:[\"drag\",\"dragControls\"],focus:[\"whileFocus\"],hover:[\"whileHover\",\"onHoverStart\",\"onHoverEnd\"],tap:[\"whileTap\",\"onTap\",\"onTapStart\",\"onTapCancel\"],pan:[\"onPan\",\"onPanStart\",\"onPanSessionStart\",\"onPanEnd\"],inView:[\"whileInView\",\"onViewportEnter\",\"onViewportLeave\"],layout:[\"layout\",\"layoutId\"]},lc={};for(const e in sc)lc[e]={isEnabled:t=>sc[e].some((e=>!!t[e]))};const cc=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({}),uc=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({}),dc=Symbol.for(\"motionComponentSymbol\");function hc({preloadedFeatures:e,createVisualElement:t,useRender:n,useVisualState:o,Component:a}){e&&function(e){for(const t in e)lc[t]={...lc[t],...e[t]}}(e);const l=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(l,c){let u;const f={...(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Bl),...l,layoutId:pc(l)},{isStatic:g}=f,m=ic(l),v=o(l,g);if(!g&&Nl){m.visualElement=function(e,t,n,r){const{visualElement:o}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_l),a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(jl),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ql),c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Bl).reducedMotion,u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();r=r||a.renderer,!u.current&&r&&(u.current=r(e,{visualState:t,parent:o,props:n,presenceContext:l,blockInitialAnimation:!!l&&!1===l.initial,reducedMotionConfig:c}));const p=u.current;(0,react__WEBPACK_IMPORTED_MODULE_1__.useInsertionEffect)((()=>{p&&p.update(n,l)}));const f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!(!n[Hl]||window.HandoffComplete));return zl((()=>{p&&(Zl.postRender(p.render),f.current&&p.animationState&&p.animationState.animateChanges())})),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{p&&(p.updateFeatures(),!f.current&&p.animationState&&p.animationState.animateChanges(),f.current&&(f.current=!1,window.HandoffComplete=!0))})),p}(a,v,f,t);const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(uc),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(jl).strict;m.visualElement&&(u=m.visualElement.loadFeatures(f,r,e,n))}return react__WEBPACK_IMPORTED_MODULE_1__.createElement(_l.Provider,{value:m},u&&m.visualElement?react__WEBPACK_IMPORTED_MODULE_1__.createElement(u,{visualElement:m.visualElement,...f}):null,n(a,l,function(e,t,n){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((r=>{r&&e.mount&&e.mount(r),t&&(r?t.mount(r):t.unmount()),n&&(\"function\"==typeof n?n(r):Jl(n)&&(n.current=r))}),[t])}(v,m.visualElement,c),v,g,m.visualElement))}));return l[dc]=a,l}function pc({layoutId:e}){const t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(cc).id;return t&&void 0!==e?t+\"-\"+e:e}function fc(e){function t(t,n={}){return hc(e(t,n))}if(typeof Proxy>\"u\")return t;const n=new Map;return new Proxy(t,{get:(e,r)=>(n.has(r)||n.set(r,t(r)),n.get(r))})}const gc=[\"animate\",\"circle\",\"defs\",\"desc\",\"ellipse\",\"g\",\"image\",\"line\",\"filter\",\"marker\",\"mask\",\"metadata\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"rect\",\"stop\",\"switch\",\"symbol\",\"svg\",\"text\",\"tspan\",\"use\",\"view\"];function mc(e){return\"string\"==typeof e&&!e.includes(\"-\")&&!!(gc.indexOf(e)>-1||/[A-Z]/.test(e))}const vc={};const bc=[\"transformPerspective\",\"x\",\"y\",\"z\",\"translateX\",\"translateY\",\"translateZ\",\"scale\",\"scaleX\",\"scaleY\",\"rotate\",\"rotateX\",\"rotateY\",\"rotateZ\",\"skew\",\"skewX\",\"skewY\"],yc=new Set(bc);function wc(e,{layout:t,layoutId:n}){return yc.has(e)||e.startsWith(\"origin\")||(t||void 0!==n)&&(!!vc[e]||\"opacity\"===e)}const xc=e=>!(!e||!e.getVelocity),kc={x:\"translateX\",y:\"translateY\",z:\"translateZ\",transformPerspective:\"perspective\"},Sc=bc.length;const Ec=e=>t=>\"string\"==typeof t&&t.startsWith(e),Ac=Ec(\"--\"),Pc=Ec(\"var(--\"),Tc=e=>!!Pc(e)&&Cc.test(e.split(\"/*\")[0].trim()),Cc=/var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i,Rc=(e,t)=>t&&\"number\"==typeof e?t.transform(e):e,Lc=(e,t,n)=>n>t?t:n<e?e:n,Dc={test:e=>\"number\"==typeof e,parse:parseFloat,transform:e=>e},$c={...Dc,transform:e=>Lc(0,1,e)},Mc={...Dc,default:1},Fc=e=>Math.round(1e5*e)/1e5,Oc=/(-)?([\\d]*\\.?[\\d])+/g,Vc=/(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi,Bc=/^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;function _c(e){return\"string\"==typeof e}const qc=e=>({test:t=>_c(t)&&t.endsWith(e)&&1===t.split(\" \").length,parse:parseFloat,transform:t=>`${t}${e}`}),Nc=qc(\"deg\"),zc=qc(\"%\"),jc=qc(\"px\"),Ic=qc(\"vh\"),Hc=qc(\"vw\"),Uc={...zc,parse:e=>zc.parse(e)/100,transform:e=>zc.transform(100*e)},Wc={...Dc,transform:Math.round},Gc={borderWidth:jc,borderTopWidth:jc,borderRightWidth:jc,borderBottomWidth:jc,borderLeftWidth:jc,borderRadius:jc,radius:jc,borderTopLeftRadius:jc,borderTopRightRadius:jc,borderBottomRightRadius:jc,borderBottomLeftRadius:jc,width:jc,maxWidth:jc,height:jc,maxHeight:jc,size:jc,top:jc,right:jc,bottom:jc,left:jc,padding:jc,paddingTop:jc,paddingRight:jc,paddingBottom:jc,paddingLeft:jc,margin:jc,marginTop:jc,marginRight:jc,marginBottom:jc,marginLeft:jc,rotate:Nc,rotateX:Nc,rotateY:Nc,rotateZ:Nc,scale:Mc,scaleX:Mc,scaleY:Mc,scaleZ:Mc,skew:Nc,skewX:Nc,skewY:Nc,distance:jc,translateX:jc,translateY:jc,translateZ:jc,x:jc,y:jc,z:jc,perspective:jc,transformPerspective:jc,opacity:$c,originX:Uc,originY:Uc,originZ:jc,zIndex:Wc,fillOpacity:$c,strokeOpacity:$c,numOctaves:Wc};function Yc(e,t,n,r){const{style:o,vars:i,transform:a,transformOrigin:s}=e;let l=!1,c=!1,u=!0;for(const e in t){const n=t[e];if(Ac(e)){i[e]=n;continue}const r=Gc[e],d=Rc(n,r);if(yc.has(e)){if(l=!0,a[e]=d,!u)continue;n!==(r.default||0)&&(u=!1)}else e.startsWith(\"origin\")?(c=!0,s[e]=d):o[e]=d}if(t.transform||(l||r?o.transform=function(e,{enableHardwareAcceleration:t=!0,allowTransformNone:n=!0},r,o){let i=\"\";for(let t=0;t<Sc;t++){const n=bc[t];void 0!==e[n]&&(i+=`${kc[n]||n}(${e[n]}) `)}return t&&!e.z&&(i+=\"translateZ(0)\"),i=i.trim(),o?i=o(e,r?\"\":i):n&&r&&(i=\"none\"),i}(e.transform,n,u,r):o.transform&&(o.transform=\"none\")),c){const{originX:e=\"50%\",originY:t=\"50%\",originZ:n=0}=s;o.transformOrigin=`${e} ${t} ${n}`}}const Xc=()=>({style:{},transform:{},transformOrigin:{},vars:{}});function Zc(e,t,n){for(const r in t)!xc(t[r])&&!wc(r,n)&&(e[r]=t[r])}function Kc(e,t,n){const r={};return Zc(r,e.style||{},e),Object.assign(r,function({transformTemplate:e},t,n){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const r=Xc();return Yc(r,t,{enableHardwareAcceleration:!n},e),Object.assign({},r.vars,r.style)}),[t])}(e,t,n)),r}function Jc(e,t,n){const r={},o=Kc(e,t,n);return e.drag&&!1!==e.dragListener&&(r.draggable=!1,o.userSelect=o.WebkitUserSelect=o.WebkitTouchCallout=\"none\",o.touchAction=!0===e.drag?\"none\":\"pan-\"+(\"x\"===e.drag?\"y\":\"x\")),void 0===e.tabIndex&&(e.onTap||e.onTapStart||e.whileTap)&&(r.tabIndex=0),r.style=o,r}const Qc=new Set([\"animate\",\"exit\",\"variants\",\"initial\",\"style\",\"values\",\"variants\",\"transition\",\"transformTemplate\",\"custom\",\"inherit\",\"onBeforeLayoutMeasure\",\"onAnimationStart\",\"onAnimationComplete\",\"onUpdate\",\"onDragStart\",\"onDrag\",\"onDragEnd\",\"onMeasureDragConstraints\",\"onDirectionLock\",\"onDragTransitionEnd\",\"_dragX\",\"_dragY\",\"onHoverStart\",\"onHoverEnd\",\"onViewportEnter\",\"onViewportLeave\",\"globalTapTarget\",\"ignoreStrict\",\"viewport\"]);function eu(e){return e.startsWith(\"while\")||e.startsWith(\"drag\")&&\"draggable\"!==e||e.startsWith(\"layout\")||e.startsWith(\"onTap\")||e.startsWith(\"onPan\")||e.startsWith(\"onLayout\")||Qc.has(e)}let tu=e=>!eu(e);try{(nu=require(\"@emotion/is-prop-valid\").default)&&(tu=e=>e.startsWith(\"on\")?!eu(e):nu(e))}catch{}var nu;function ru(e,t,n){return\"string\"==typeof e?e:jc.transform(t+n*e)}const ou={offset:\"stroke-dashoffset\",array:\"stroke-dasharray\"},iu={offset:\"strokeDashoffset\",array:\"strokeDasharray\"};function au(e,{attrX:t,attrY:n,attrScale:r,originX:o,originY:i,pathLength:a,pathSpacing:s=1,pathOffset:l=0,...c},u,d,h){if(Yc(e,c,u,h),d)return void(e.style.viewBox&&(e.attrs.viewBox=e.style.viewBox));e.attrs=e.style,e.style={};const{attrs:p,style:f,dimensions:g}=e;p.transform&&(g&&(f.transform=p.transform),delete p.transform),g&&(void 0!==o||void 0!==i||f.transform)&&(f.transformOrigin=function(e,t,n){return`${ru(t,e.x,e.width)} ${ru(n,e.y,e.height)}`}(g,void 0!==o?o:.5,void 0!==i?i:.5)),void 0!==t&&(p.x=t),void 0!==n&&(p.y=n),void 0!==r&&(p.scale=r),void 0!==a&&function(e,t,n=1,r=0,o=!0){e.pathLength=1;const i=o?ou:iu;e[i.offset]=jc.transform(-r);const a=jc.transform(t),s=jc.transform(n);e[i.array]=`${a} ${s}`}(p,a,s,l,!1)}const su=()=>({...Xc(),attrs:{}}),lu=e=>\"string\"==typeof e&&\"svg\"===e.toLowerCase();function cu(e,t,n,r){const o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const n=su();return au(n,t,{enableHardwareAcceleration:!1},lu(r),e.transformTemplate),{...n.attrs,style:{...n.style}}}),[t]);if(e.style){const t={};Zc(t,e.style,e),o.style={...t,...o.style}}return o}function uu(e=!1){return(t,n,r,{latestValues:o},i)=>{const s=(mc(t)?cu:Jc)(n,o,i,t),c=function(e,t,n){const r={};for(const o in e)\"values\"===o&&\"object\"==typeof e.values||(tu(o)||!0===n&&eu(o)||!t&&!eu(o)||e.draggable&&o.startsWith(\"onDrag\"))&&(r[o]=e[o]);return r}(n,\"string\"==typeof t,e),u=t!==react__WEBPACK_IMPORTED_MODULE_1__.Fragment?{...c,...s,ref:r}:{},{children:d}=n,h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>xc(d)?d.get():d),[d]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(t,{...u,children:h})}}function du(e,{style:t,vars:n},r,o){Object.assign(e.style,t,o&&o.getProjectionStyles(r));for(const t in n)e.style.setProperty(t,n[t])}const hu=new Set([\"baseFrequency\",\"diffuseConstant\",\"kernelMatrix\",\"kernelUnitLength\",\"keySplines\",\"keyTimes\",\"limitingConeAngle\",\"markerHeight\",\"markerWidth\",\"numOctaves\",\"targetX\",\"targetY\",\"surfaceScale\",\"specularConstant\",\"specularExponent\",\"stdDeviation\",\"tableValues\",\"viewBox\",\"gradientTransform\",\"pathLength\",\"startOffset\",\"textLength\",\"lengthAdjust\"]);function pu(e,t,n,r){du(e,t,void 0,r);for(const n in t.attrs)e.setAttribute(hu.has(n)?n:Il(n),t.attrs[n])}function fu(e,t){const{style:n}=e,r={};for(const o in n)(xc(n[o])||t.style&&xc(t.style[o])||wc(o,e))&&(r[o]=n[o]);return r}function gu(e,t){const n=fu(e,t);for(const r in e)if(xc(e[r])||xc(t[r])){n[-1!==bc.indexOf(r)?\"attr\"+r.charAt(0).toUpperCase()+r.substring(1):r]=e[r]}return n}function mu(e,t,n,r={},o={}){return\"function\"==typeof t&&(t=t(void 0!==n?n:e.custom,r,o)),\"string\"==typeof t&&(t=e.variants&&e.variants[t]),\"function\"==typeof t&&(t=t(void 0!==n?n:e.custom,r,o)),t}function vu(e){const t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return null===t.current&&(t.current=e()),t.current}const bu=e=>Array.isArray(e),yu=e=>!!(e&&\"object\"==typeof e&&e.mix&&e.toValue),wu=e=>bu(e)?e[e.length-1]||0:e;function xu(e){const t=xc(e)?e.get():e;return yu(t)?t.toValue():t}const ku=e=>(t,n)=>{const r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_l),o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ql),i=()=>function({scrapeMotionValuesFromProps:e,createRenderState:t,onMount:n},r,o,i){const a={latestValues:Su(r,o,i,e),renderState:t()};return n&&(a.mount=e=>n(r,e,a)),a}(e,t,r,o);return n?i():vu(i)};function Su(e,t,n,r){const o={},i=r(e,{});for(const e in i)o[e]=xu(i[e]);let{initial:a,animate:s}=e;const l=rc(e),c=oc(e);t&&c&&!l&&!1!==e.inherit&&(void 0===a&&(a=t.initial),void 0===s&&(s=t.animate));let u=!!n&&!1===n.initial;u=u||!1===a;const d=u?s:a;return d&&\"boolean\"!=typeof d&&!ec(d)&&(Array.isArray(d)?d:[d]).forEach((t=>{const n=mu(e,t);if(!n)return;const{transitionEnd:r,transition:i,...a}=n;for(const e in a){let t=a[e];if(Array.isArray(t)){t=t[u?t.length-1:0]}null!==t&&(o[e]=t)}for(const e in r)o[e]=r[e]})),o}const Eu=e=>e,{schedule:Au,cancel:Pu,state:Tu,steps:Cu}=Xl(typeof requestAnimationFrame<\"u\"?requestAnimationFrame:Eu,!0),Ru={useVisualState:ku({scrapeMotionValuesFromProps:gu,createRenderState:su,onMount:(e,t,{renderState:n,latestValues:r})=>{Au.read((()=>{try{n.dimensions=\"function\"==typeof t.getBBox?t.getBBox():t.getBoundingClientRect()}catch{n.dimensions={x:0,y:0,width:0,height:0}}})),Au.render((()=>{au(n,r,{enableHardwareAcceleration:!1},lu(t.tagName),e.transformTemplate),pu(t,n)}))}})},Lu={useVisualState:ku({scrapeMotionValuesFromProps:fu,createRenderState:Xc})};function Du(e,t,n,r={passive:!0}){return e.addEventListener(t,n,r),()=>e.removeEventListener(t,n)}const $u=e=>\"mouse\"===e.pointerType?\"number\"!=typeof e.button||e.button<=0:!1!==e.isPrimary;function Mu(e,t=\"page\"){return{point:{x:e[t+\"X\"],y:e[t+\"Y\"]}}}const Fu=e=>t=>$u(t)&&e(t,Mu(t));function Ou(e,t,n,r){return Du(e,t,Fu(n),r)}const Vu=(e,t)=>n=>t(e(n)),Bu=(...e)=>e.reduce(Vu);function _u(e){let t=null;return()=>null===t&&(t=e,()=>{t=null})}const qu=_u(\"dragHorizontal\"),Nu=_u(\"dragVertical\");function zu(e){let t=!1;if(\"y\"===e)t=Nu();else if(\"x\"===e)t=qu();else{const e=qu(),n=Nu();e&&n?t=()=>{e(),n()}:(e&&e(),n&&n())}return t}function ju(){const e=zu(!0);return!e||(e(),!1)}class Iu{constructor(e){this.isMounted=!1,this.node=e}update(){}}function Hu(e,t){const n=\"pointer\"+(t?\"enter\":\"leave\"),r=\"onHover\"+(t?\"Start\":\"End\");return Ou(e.current,n,((n,o)=>{if(\"touch\"===n.pointerType||ju())return;const i=e.getProps();e.animationState&&i.whileHover&&e.animationState.setActive(\"whileHover\",t),i[r]&&Au.update((()=>i[r](n,o)))}),{passive:!e.getProps()[r]})}const Uu=(e,t)=>!!t&&(e===t||Uu(e,t.parentElement));function Wu(e,t){if(!t)return;const n=new PointerEvent(\"pointer\"+e);t(n,Mu(n))}const Gu=new WeakMap,Yu=new WeakMap,Xu=e=>{const t=Gu.get(e.target);t&&t(e)},Zu=e=>{e.forEach(Xu)};function Ku(e,t,n){const r=function({root:e,...t}){const n=e||document;Yu.has(n)||Yu.set(n,{});const r=Yu.get(n),o=JSON.stringify(t);return r[o]||(r[o]=new IntersectionObserver(Zu,{root:e,...t})),r[o]}(t);return Gu.set(e,n),r.observe(e),()=>{Gu.delete(e),r.unobserve(e)}}const Ju={some:0,all:1};const Qu={inView:{Feature:class extends Iu{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();const{viewport:e={}}=this.node.getProps(),{root:t,margin:n,amount:r=\"some\",once:o}=e,i={root:t?t.current:void 0,rootMargin:n,threshold:\"number\"==typeof r?r:Ju[r]};return Ku(this.node.current,i,(e=>{const{isIntersecting:t}=e;if(this.isInView===t||(this.isInView=t,o&&!t&&this.hasEnteredView))return;t&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive(\"whileInView\",t);const{onViewportEnter:n,onViewportLeave:r}=this.node.getProps(),i=t?n:r;i&&i(e)}))}mount(){this.startObserver()}update(){if(typeof IntersectionObserver>\"u\")return;const{props:e,prevProps:t}=this.node;[\"amount\",\"margin\",\"root\"].some(function({viewport:e={}},{viewport:t={}}={}){return n=>e[n]!==t[n]}(e,t))&&this.startObserver()}unmount(){}}},tap:{Feature:class extends Iu{constructor(){super(...arguments),this.removeStartListeners=Eu,this.removeEndListeners=Eu,this.removeAccessibleListeners=Eu,this.startPointerPress=(e,t)=>{if(this.isPressing)return;this.removeEndListeners();const n=this.node.getProps(),r=Ou(window,\"pointerup\",((e,t)=>{if(!this.checkPressEnd())return;const{onTap:n,onTapCancel:r,globalTapTarget:o}=this.node.getProps();Au.update((()=>{o||Uu(this.node.current,e.target)?n&&n(e,t):r&&r(e,t)}))}),{passive:!(n.onTap||n.onPointerUp)}),o=Ou(window,\"pointercancel\",((e,t)=>this.cancelPress(e,t)),{passive:!(n.onTapCancel||n.onPointerCancel)});this.removeEndListeners=Bu(r,o),this.startPress(e,t)},this.startAccessiblePress=()=>{const e=Du(this.node.current,\"keydown\",(e=>{if(\"Enter\"!==e.key||this.isPressing)return;this.removeEndListeners(),this.removeEndListeners=Du(this.node.current,\"keyup\",(e=>{\"Enter\"!==e.key||!this.checkPressEnd()||Wu(\"up\",((e,t)=>{const{onTap:n}=this.node.getProps();n&&Au.update((()=>n(e,t)))}))})),Wu(\"down\",((e,t)=>{this.startPress(e,t)}))})),t=Du(this.node.current,\"blur\",(()=>{this.isPressing&&Wu(\"cancel\",((e,t)=>this.cancelPress(e,t)))}));this.removeAccessibleListeners=Bu(e,t)}}startPress(e,t){this.isPressing=!0;const{onTapStart:n,whileTap:r}=this.node.getProps();r&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!0),n&&Au.update((()=>n(e,t)))}checkPressEnd(){return this.removeEndListeners(),this.isPressing=!1,this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!1),!ju()}cancelPress(e,t){if(!this.checkPressEnd())return;const{onTapCancel:n}=this.node.getProps();n&&Au.update((()=>n(e,t)))}mount(){const e=this.node.getProps(),t=Ou(e.globalTapTarget?window:this.node.current,\"pointerdown\",this.startPointerPress,{passive:!(e.onTapStart||e.onPointerStart)}),n=Du(this.node.current,\"focus\",this.startAccessiblePress);this.removeStartListeners=Bu(t,n)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}},focus:{Feature:class extends Iu{constructor(){super(...arguments),this.isActive=!1}onFocus(){let e=!1;try{e=this.node.current.matches(\":focus-visible\")}catch{e=!0}!e||!this.node.animationState||(this.node.animationState.setActive(\"whileFocus\",!0),this.isActive=!0)}onBlur(){!this.isActive||!this.node.animationState||(this.node.animationState.setActive(\"whileFocus\",!1),this.isActive=!1)}mount(){this.unmount=Bu(Du(this.node.current,\"focus\",(()=>this.onFocus())),Du(this.node.current,\"blur\",(()=>this.onBlur())))}unmount(){}}},hover:{Feature:class extends Iu{mount(){this.unmount=Bu(Hu(this.node,!0),Hu(this.node,!1))}unmount(){}}}};function ed(e,t){if(!Array.isArray(t))return!1;const n=t.length;if(n!==e.length)return!1;for(let r=0;r<n;r++)if(t[r]!==e[r])return!1;return!0}function td(e,t,n){const r=e.getProps();return mu(r,t,void 0!==n?n:r.custom,function(e){const t={};return e.values.forEach(((e,n)=>t[n]=e.get())),t}(e),function(e){const t={};return e.values.forEach(((e,n)=>t[n]=e.getVelocity())),t}(e))}let nd=Eu;const rd=e=>1e3*e,od=e=>e/1e3,id=!1,ad=(e,t,n)=>(((1-3*n+3*t)*e+(3*n-6*t))*e+3*t)*e,sd=1e-7,ld=12;function cd(e,t,n,r){if(e===t&&n===r)return Eu;const o=t=>function(e,t,n,r,o){let i,a,s=0;do{a=t+(n-t)/2,i=ad(a,r,o)-e,i>0?n=a:t=a}while(Math.abs(i)>sd&&++s<ld);return a}(t,0,1,e,n);return e=>0===e||1===e?e:ad(o(e),t,r)}const ud=cd(.42,0,1,1),dd=cd(0,0,.58,1),hd=cd(.42,0,.58,1),pd=e=>Array.isArray(e)&&\"number\"!=typeof e[0],fd=e=>t=>t<=.5?e(2*t)/2:(2-e(2*(1-t)))/2,gd=e=>t=>1-e(1-t),md=e=>1-Math.sin(Math.acos(e)),vd=gd(md),bd=fd(md),yd=cd(.33,1.53,.69,.99),wd=gd(yd),xd=fd(wd),kd={linear:Eu,easeIn:ud,easeInOut:hd,easeOut:dd,circIn:md,circInOut:bd,circOut:vd,backIn:wd,backInOut:xd,backOut:yd,anticipate:e=>(e*=2)<1?.5*wd(e):.5*(2-Math.pow(2,-10*(e-1)))},Sd=e=>{if(Array.isArray(e)){const[t,n,r,o]=e;return cd(t,n,r,o)}return\"string\"==typeof e?kd[e]:e},Ed=(e,t,n)=>{const r=t-e;return 0===r?1:(n-e)/r},Ad=(e,t,n)=>e+(t-e)*n;function Pd(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}const Td=(e,t)=>n=>!!(_c(n)&&Bc.test(n)&&n.startsWith(e)||t&&Object.prototype.hasOwnProperty.call(n,t)),Cd=(e,t,n)=>r=>{if(!_c(r))return r;const[o,i,a,s]=r.match(Oc);return{[e]:parseFloat(o),[t]:parseFloat(i),[n]:parseFloat(a),alpha:void 0!==s?parseFloat(s):1}},Rd={...Dc,transform:e=>Math.round((e=>Lc(0,255,e))(e))},Ld={test:Td(\"rgb\",\"red\"),parse:Cd(\"red\",\"green\",\"blue\"),transform:({red:e,green:t,blue:n,alpha:r=1})=>\"rgba(\"+Rd.transform(e)+\", \"+Rd.transform(t)+\", \"+Rd.transform(n)+\", \"+Fc($c.transform(r))+\")\"};const Dd={test:Td(\"#\"),parse:function(e){let t=\"\",n=\"\",r=\"\",o=\"\";return e.length>5?(t=e.substring(1,3),n=e.substring(3,5),r=e.substring(5,7),o=e.substring(7,9)):(t=e.substring(1,2),n=e.substring(2,3),r=e.substring(3,4),o=e.substring(4,5),t+=t,n+=n,r+=r,o+=o),{red:parseInt(t,16),green:parseInt(n,16),blue:parseInt(r,16),alpha:o?parseInt(o,16)/255:1}},transform:Ld.transform},$d={test:Td(\"hsl\",\"hue\"),parse:Cd(\"hue\",\"saturation\",\"lightness\"),transform:({hue:e,saturation:t,lightness:n,alpha:r=1})=>\"hsla(\"+Math.round(e)+\", \"+zc.transform(Fc(t))+\", \"+zc.transform(Fc(n))+\", \"+Fc($c.transform(r))+\")\"},Md=(e,t,n)=>{const r=e*e,o=n*(t*t-r)+r;return o<0?0:Math.sqrt(o)},Fd=[Dd,Ld,$d];function Od(e){const t=(n=e,Fd.find((e=>e.test(n))));var n;let r=t.parse(e);return t===$d&&(r=function({hue:e,saturation:t,lightness:n,alpha:r}){e/=360,n/=100;let o=0,i=0,a=0;if(t/=100){const r=n<.5?n*(1+t):n+t-n*t,s=2*n-r;o=Pd(s,r,e+1/3),i=Pd(s,r,e),a=Pd(s,r,e-1/3)}else o=i=a=n;return{red:Math.round(255*o),green:Math.round(255*i),blue:Math.round(255*a),alpha:r}}(r)),r}const Vd=(e,t)=>{const n=Od(e),r=Od(t),o={...n};return e=>(o.red=Md(n.red,r.red,e),o.green=Md(n.green,r.green,e),o.blue=Md(n.blue,r.blue,e),o.alpha=Ad(n.alpha,r.alpha,e),Ld.transform(o))},Bd={test:e=>Ld.test(e)||Dd.test(e)||$d.test(e),parse:e=>Ld.test(e)?Ld.parse(e):$d.test(e)?$d.parse(e):Dd.parse(e),transform:e=>_c(e)?e:e.hasOwnProperty(\"red\")?Ld.transform(e):$d.transform(e)};const _d=\"number\",qd=\"color\",Nd=\"var\",zd=\"var(\",jd=\"${}\",Id=/(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;function Hd(e){const t=e.toString(),n=t.match(Id)||[],r=[],o={color:[],number:[],var:[]},i=[];for(let e=0;e<n.length;e++){const t=n[e];Bd.test(t)?(o.color.push(e),i.push(qd),r.push(Bd.parse(t))):t.startsWith(zd)?(o.var.push(e),i.push(Nd),r.push(t)):(o.number.push(e),i.push(_d),r.push(parseFloat(t)))}return{values:r,split:t.replace(Id,jd).split(jd),indexes:o,types:i}}function Ud(e){return Hd(e).values}function Wd(e){const{split:t,types:n}=Hd(e),r=t.length;return e=>{let o=\"\";for(let i=0;i<r;i++)if(o+=t[i],void 0!==e[i]){const t=n[i];o+=t===_d?Fc(e[i]):t===qd?Bd.transform(e[i]):e[i]}return o}}const Gd=e=>\"number\"==typeof e?0:e;const Yd={test:function(e){var t,n;return isNaN(e)&&_c(e)&&((null===(t=e.match(Oc))||void 0===t?void 0:t.length)||0)+((null===(n=e.match(Vc))||void 0===n?void 0:n.length)||0)>0},parse:Ud,createTransformer:Wd,getAnimatableNone:function(e){const t=Ud(e);return Wd(e)(t.map(Gd))}};function Xd(e,t){return n=>n>0?t:e}function Zd(e,t){return n=>Ad(e,t,n)}function Kd(e){return\"number\"==typeof e?Zd:\"string\"==typeof e?Tc(e)?Xd:Bd.test(e)?Vd:eh:Array.isArray(e)?Jd:\"object\"==typeof e?Bd.test(e)?Vd:Qd:Xd}function Jd(e,t){const n=[...e],r=n.length,o=e.map(((e,n)=>Kd(e)(e,t[n])));return e=>{for(let t=0;t<r;t++)n[t]=o[t](e);return n}}function Qd(e,t){const n={...e,...t},r={};for(const o in n)void 0!==e[o]&&void 0!==t[o]&&(r[o]=Kd(e[o])(e[o],t[o]));return e=>{for(const t in r)n[t]=r[t](e);return n}}const eh=(e,t)=>{const n=Yd.createTransformer(t),r=Hd(e),o=Hd(t);return r.indexes.var.length===o.indexes.var.length&&r.indexes.color.length===o.indexes.color.length&&r.indexes.number.length>=o.indexes.number.length?Bu(Jd(function(e,t){var n;const r=[],o={color:0,var:0,number:0};for(let i=0;i<t.values.length;i++){const a=t.types[i],s=e.indexes[a][o[a]],l=null!==(n=e.values[s])&&void 0!==n?n:0;r[i]=l,o[a]++}return r}(r,o),o.values),n):Xd(e,t)};function th(e,t,n){return\"number\"==typeof e&&\"number\"==typeof t&&\"number\"==typeof n?Ad(e,t,n):Kd(e)(e,t)}function nh(e,t,{clamp:n=!0,ease:r,mixer:o}={}){const i=e.length;if(1===i)return()=>t[0];e[0]>e[i-1]&&(e=[...e].reverse(),t=[...t].reverse());const a=function(e,t,n){const r=[],o=n||th,i=e.length-1;for(let n=0;n<i;n++){let i=o(e[n],e[n+1]);if(t){const e=Array.isArray(t)?t[n]||Eu:t;i=Bu(e,i)}r.push(i)}return r}(t,r,o),s=a.length,l=t=>{let n=0;if(s>1)for(;n<e.length-2&&!(t<e[n+1]);n++);const r=Ed(e[n],e[n+1],t);return a[n](r)};return n?t=>l(Lc(e[0],e[i-1],t)):l}function rh(e){const t=[0];return function(e,t){const n=e[e.length-1];for(let r=1;r<=t;r++){const o=Ed(0,t,r);e.push(Ad(n,1,o))}}(t,e.length-1),t}function oh({duration:e=300,keyframes:t,times:n,ease:r=\"easeInOut\"}){const o=pd(r)?r.map(Sd):Sd(r),i={done:!1,value:t[0]},a=function(e,t){return e.map((e=>e*t))}(n&&n.length===t.length?n:rh(t),e),s=nh(a,t,{ease:Array.isArray(o)?o:(l=t,c=o,l.map((()=>c||hd)).splice(0,l.length-1))});var l,c;return{calculatedDuration:e,next:t=>(i.value=s(t),i.done=t>=e,i)}}function ih(e,t){return t?e*(1e3/t):0}const ah=5;function sh(e,t,n){const r=Math.max(t-ah,0);return ih(n-e(r),t-r)}const lh=.001,ch=.01,uh=10,dh=.05,hh=1;function ph({duration:e=800,bounce:t=.25,velocity:n=0,mass:r=1}){let o,i,a=1-t;a=Lc(dh,hh,a),e=Lc(ch,uh,od(e)),a<1?(o=t=>{const r=t*a,o=r*e,i=r-n,s=gh(t,a),l=Math.exp(-o);return lh-i/s*l},i=t=>{const r=t*a*e,i=r*n+n,s=Math.pow(a,2)*Math.pow(t,2)*e,l=Math.exp(-r),c=gh(Math.pow(t,2),a);return(-o(t)+lh>0?-1:1)*((i-s)*l)/c}):(o=t=>Math.exp(-t*e)*((t-n)*e+1)-lh,i=t=>Math.exp(-t*e)*(e*e*(n-t)));const s=function(e,t,n){let r=n;for(let n=1;n<fh;n++)r-=e(r)/t(r);return r}(o,i,5/e);if(e=rd(e),isNaN(s))return{stiffness:100,damping:10,duration:e};{const t=Math.pow(s,2)*r;return{stiffness:t,damping:2*a*Math.sqrt(r*t),duration:e}}}const fh=12;function gh(e,t){return e*Math.sqrt(1-t*t)}const mh=[\"duration\",\"bounce\"],vh=[\"stiffness\",\"damping\",\"mass\"];function bh(e,t){return t.some((t=>void 0!==e[t]))}function yh({keyframes:e,restDelta:t,restSpeed:n,...r}){const o=e[0],i=e[e.length-1],a={done:!1,value:o},{stiffness:s,damping:l,mass:c,duration:u,velocity:d,isResolvedFromDuration:h}=function(e){let t={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...e};if(!bh(e,vh)&&bh(e,mh)){const n=ph(e);t={...t,...n,mass:1},t.isResolvedFromDuration=!0}return t}({...r,velocity:-od(r.velocity||0)}),p=d||0,f=l/(2*Math.sqrt(s*c)),g=i-o,m=od(Math.sqrt(s/c)),v=Math.abs(g)<5;let b;if(n||(n=v?.01:2),t||(t=v?.005:.5),f<1){const e=gh(m,f);b=t=>{const n=Math.exp(-f*m*t);return i-n*((p+f*m*g)/e*Math.sin(e*t)+g*Math.cos(e*t))}}else if(1===f)b=e=>i-Math.exp(-m*e)*(g+(p+m*g)*e);else{const e=m*Math.sqrt(f*f-1);b=t=>{const n=Math.exp(-f*m*t),r=Math.min(e*t,300);return i-n*((p+f*m*g)*Math.sinh(r)+e*g*Math.cosh(r))/e}}return{calculatedDuration:h&&u||null,next:e=>{const r=b(e);if(h)a.done=e>=u;else{let o=p;0!==e&&(o=f<1?sh(b,e,r):0);const s=Math.abs(o)<=n,l=Math.abs(i-r)<=t;a.done=s&&l}return a.value=a.done?i:r,a}}}function wh({keyframes:e,velocity:t=0,power:n=.8,timeConstant:r=325,bounceDamping:o=10,bounceStiffness:i=500,modifyTarget:a,min:s,max:l,restDelta:c=.5,restSpeed:u}){const d=e[0],h={done:!1,value:d},p=e=>void 0===s?l:void 0===l||Math.abs(s-e)<Math.abs(l-e)?s:l;let f=n*t;const g=d+f,m=void 0===a?g:a(g);m!==g&&(f=m-d);const v=e=>-f*Math.exp(-e/r),b=e=>m+v(e),y=e=>{const t=v(e),n=b(e);h.done=Math.abs(t)<=c,h.value=h.done?m:n};let w,x;const k=e=>{var t;t=h.value,(void 0!==s&&t<s||void 0!==l&&t>l)&&(w=e,x=yh({keyframes:[h.value,p(h.value)],velocity:sh(b,e,h.value),damping:o,stiffness:i,restDelta:c,restSpeed:u}))};return k(0),{calculatedDuration:null,next:e=>{let t=!1;return!x&&void 0===w&&(t=!0,y(e),k(e)),void 0!==w&&e>w?x.next(e-w):(!t&&y(e),h)}}}let xh;function kh(){xh=void 0}const Sh={now:()=>(void 0===xh&&Sh.set(Tu.isProcessing||Wl?Tu.timestamp:performance.now()),xh),set:e=>{xh=e,queueMicrotask(kh)}},Eh=e=>{const t=({timestamp:t})=>e(t);return{start:()=>Au.update(t,!0),stop:()=>Pu(t),now:()=>Tu.isProcessing?Tu.timestamp:Sh.now()}},Ah=2e4;function Ph(e){let t=0;let n=e.next(t);for(;!n.done&&t<Ah;)t+=50,n=e.next(t);return t>=Ah?1/0:t}const Th={decay:wh,inertia:wh,tween:oh,keyframes:oh,spring:yh},Ch=e=>e/100;function Rh({autoplay:e=!0,delay:t=0,driver:n=Eh,keyframes:r,type:o=\"keyframes\",repeat:i=0,repeatDelay:a=0,repeatType:s=\"loop\",onPlay:l,onStop:c,onComplete:u,onUpdate:d,...h}){let p,f,g=1,m=!1;const v=()=>{f=new Promise((e=>{p=e}))};let b;v();const y=Th[o]||oh;let w;y!==oh&&\"number\"!=typeof r[0]&&(w=Bu(Ch,th(r[0],r[1])),r=[0,100]);const x=y({...h,keyframes:r});let k;\"mirror\"===s&&(k=y({...h,keyframes:[...r].reverse(),velocity:-(h.velocity||0)}));let S=\"idle\",E=null,A=null,P=null;null===x.calculatedDuration&&i&&(x.calculatedDuration=Ph(x));const{calculatedDuration:T}=x;let C=1/0,R=1/0;null!==T&&(C=T+a,R=C*(i+1)-a);let L=0;const D=e=>{if(null===A)return;g>0&&(A=Math.min(A,e)),g<0&&(A=Math.min(e-R/g,A)),L=null!==E?E:Math.round(e-A)*g;const n=L-t*(g>=0?1:-1),o=g>=0?n<0:n>R;L=Math.max(n,0),\"finished\"===S&&null===E&&(L=R);let l=L,c=x;if(i){const e=Math.min(L,R)/C;let t=Math.floor(e),n=e%1;!n&&e>=1&&(n=1),1===n&&t--,t=Math.min(t,i+1),!!(t%2)&&(\"reverse\"===s?(n=1-n,a&&(n-=a/C)):\"mirror\"===s&&(c=k)),l=Lc(0,1,n)*C}const u=o?{done:!1,value:r[0]}:c.next(l);w&&(u.value=w(u.value));let{done:h}=u;!o&&null!==T&&(h=g>=0?L>=R:L<=0);const p=null===E&&(\"finished\"===S||\"running\"===S&&h);return d&&d(u.value),p&&F(),u},$=()=>{b&&b.stop(),b=void 0},M=()=>{S=\"idle\",$(),p(),v(),A=P=null},F=()=>{S=\"finished\",u&&u(),$(),p()},O=()=>{if(m)return;b||(b=n(D));const e=b.now();l&&l(),null!==E?A=e-E:(!A||\"finished\"===S)&&(A=e),\"finished\"===S&&v(),P=A,E=null,S=\"running\",b.start()};e&&O();const V={then:(e,t)=>f.then(e,t),get time(){return od(L)},set time(e){e=rd(e),L=e,null===E&&b&&0!==g?A=b.now()-e/g:E=e},get duration(){const e=null===x.calculatedDuration?Ph(x):x.calculatedDuration;return od(e)},get speed(){return g},set speed(e){e===g||!b||(g=e,V.time=od(L))},get state(){return S},play:O,pause:()=>{S=\"paused\",E=L},stop:()=>{m=!0,\"idle\"!==S&&(S=\"idle\",c&&c(),M())},cancel:()=>{null!==P&&D(P),M()},complete:()=>{S=\"finished\"},sample:e=>(A=0,D(e))};return V}const Lh={type:\"spring\",stiffness:500,damping:25,restSpeed:10},Dh={type:\"keyframes\",duration:.8},$h={type:\"keyframes\",ease:[.25,.1,.35,1],duration:.3},Mh=(e,{keyframes:t})=>t.length>2?Dh:yc.has(e)?e.startsWith(\"scale\")?{type:\"spring\",stiffness:550,damping:0===t[1]?2*Math.sqrt(550):30,restSpeed:10}:Lh:$h,Fh=(e,t)=>\"zIndex\"!==e&&!(\"number\"!=typeof t&&!Array.isArray(t)&&(\"string\"!=typeof t||!Yd.test(t)&&\"0\"!==t||t.startsWith(\"url(\"))),Oh=new Set([\"brightness\",\"contrast\",\"saturate\",\"opacity\"]);function Vh(e){const[t,n]=e.slice(0,-1).split(\"(\");if(\"drop-shadow\"===t)return e;const[r]=n.match(Oc)||[];if(!r)return e;const o=n.replace(r,\"\");let i=Oh.has(t)?1:0;return r!==n&&(i*=100),t+\"(\"+i+o+\")\"}const Bh=/([a-z-]*)\\(.*?\\)/g,_h={...Yd,getAnimatableNone:e=>{const t=e.match(Bh);return t?t.map(Vh).join(\" \"):e}},qh={...Gc,color:Bd,backgroundColor:Bd,outlineColor:Bd,fill:Bd,stroke:Bd,borderColor:Bd,borderTopColor:Bd,borderRightColor:Bd,borderBottomColor:Bd,borderLeftColor:Bd,filter:_h,WebkitFilter:_h},Nh=e=>qh[e];function zh(e,t){let n=Nh(e);return n!==_h&&(n=Yd),n.getAnimatableNone?n.getAnimatableNone(t):void 0}const jh=e=>/^0[^.\\s]+$/.test(e);function Ih(e){return\"number\"==typeof e?0===e:null!==e?\"none\"===e||\"0\"===e||jh(e):void 0}function Hh(e,t){return e[t]||e.default||e}const Uh=(e,t,n,r={})=>o=>{const i=Hh(r,e)||{},a=i.delay||r.delay||0;let{elapsed:s=0}=r;s-=rd(a);const l=function(e,t,n,r){const o=Fh(t,n);let i;i=Array.isArray(n)?[...n]:[null,n];const a=void 0!==r.from?r.from:e.get();let s;const l=[];for(let e=0;e<i.length;e++)null===i[e]&&(i[e]=0===e?a:i[e-1]),Ih(i[e])&&l.push(e),\"string\"==typeof i[e]&&\"none\"!==i[e]&&\"0\"!==i[e]&&(s=i[e]);if(o&&l.length&&s)for(let e=0;e<l.length;e++)i[l[e]]=zh(t,s);return i}(t,e,n,i),c=l[0],u=l[l.length-1],d=Fh(e,c),h=Fh(e,u);let p={keyframes:l,velocity:t.getVelocity(),ease:\"easeOut\",...i,delay:-s,onUpdate:e=>{t.set(e),i.onUpdate&&i.onUpdate(e)},onComplete:()=>{o(),i.onComplete&&i.onComplete()}};if(function({when:e,delay:t,delayChildren:n,staggerChildren:r,staggerDirection:o,repeat:i,repeatType:a,repeatDelay:s,from:l,elapsed:c,...u}){return!!Object.keys(u).length}(i)||(p={...p,...Mh(e,p)}),p.duration&&(p.duration=rd(p.duration)),p.repeatDelay&&(p.repeatDelay=rd(p.repeatDelay)),!d||!h||id||!1===i.type||Ul)return function({keyframes:e,delay:t,onUpdate:n,onComplete:r}){const o=()=>(n&&n(e[e.length-1]),r&&r(),{time:0,speed:1,duration:0,play:Eu,pause:Eu,stop:Eu,then:e=>(e(),Promise.resolve()),cancel:Eu,complete:Eu});return t?Rh({keyframes:[0,1],duration:0,delay:t,onComplete:o}):o()}(p);if(!r.isHandoff&&t.owner&&t.owner.current instanceof HTMLElement&&!t.owner.getProps().onUpdate){const e=!1;if(e)return e}return Rh(p)};function Wh(e){return!(!xc(e)||!e.add)}const Gh=e=>/^\\-?\\d*\\.?\\d+$/.test(e);function Yh(e,t){-1===e.indexOf(t)&&e.push(t)}function Xh(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}class Zh{constructor(){this.subscriptions=[]}add(e){return Yh(this.subscriptions,e),()=>Xh(this.subscriptions,e)}notify(e,t,n){const r=this.subscriptions.length;if(r)if(1===r)this.subscriptions[0](e,t,n);else for(let o=0;o<r;o++){const r=this.subscriptions[o];r&&r(e,t,n)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}class Kh{constructor(e,t={}){var n;this.version=\"11.0.8\",this.canTrackVelocity=!1,this.events={},this.updateAndNotify=(e,t=!0)=>{const n=Sh.now();this.updatedAt!==n&&this.setPrevFrameValue(),this.prev=this.current,this.setCurrent(e),this.current!==this.prev&&this.events.change&&this.events.change.notify(this.current),t&&this.events.renderRequest&&this.events.renderRequest.notify(this.current)},this.hasAnimated=!1,this.setCurrent(e),this.canTrackVelocity=(n=this.current,!isNaN(parseFloat(n))),this.owner=t.owner}setCurrent(e){this.current=e,this.updatedAt=Sh.now()}setPrevFrameValue(e=this.current){this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt}onChange(e){return this.on(\"change\",e)}on(e,t){this.events[e]||(this.events[e]=new Zh);const n=this.events[e].add(t);return\"change\"===e?()=>{n(),Au.read((()=>{this.events.change.getSize()||this.stop()}))}:n}clearListeners(){for(const e in this.events)this.events[e].clear()}attach(e,t){this.passiveEffect=e,this.stopPassiveEffect=t}set(e,t=!0){t&&this.passiveEffect?this.passiveEffect(e,this.updateAndNotify):this.updateAndNotify(e,t)}setWithVelocity(e,t,n){this.set(t),this.prev=void 0,this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt-n}jump(e){this.updateAndNotify(e),this.prev=e,this.prevUpdatedAt=this.prevFrameValue=void 0,this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}get(){return this.current}getPrevious(){return this.prev}getVelocity(){const e=Sh.now();if(!this.canTrackVelocity||void 0===this.prevFrameValue||e-this.updatedAt>30)return 0;const t=Math.min(this.updatedAt-this.prevUpdatedAt,30);return ih(parseFloat(this.current)-parseFloat(this.prevFrameValue),t)}start(e){return this.stop(),new Promise((t=>{this.hasAnimated=!0,this.animation=e(t),this.events.animationStart&&this.events.animationStart.notify()})).then((()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()}))}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function Jh(e,t){return new Kh(e,t)}const Qh=e=>t=>t.test(e),ep=[Dc,jc,zc,Nc,Hc,Ic,{test:e=>\"auto\"===e,parse:e=>e}],tp=e=>ep.find(Qh(e)),np=[...ep,Bd,Yd];function rp(e,t,n){e.hasValue(t)?e.getValue(t).set(n):e.addValue(t,Jh(n))}function op(e,t){return t?(t[e]||t.default||t).from:void 0}function ip({protectedKeys:e,needsAnimating:t},n){const r=e.hasOwnProperty(n)&&!0!==t[n];return t[n]=!1,r}function ap(e,t){const n=e.get();if(!Array.isArray(t))return n!==t;for(let e=0;e<t.length;e++)if(t[e]!==n)return!0}function sp(e,t,{delay:n=0,transitionOverride:r,type:o}={}){let{transition:i=e.getDefaultTransition(),transitionEnd:a,...s}=e.makeTargetAnimatable(t);const l=e.getValue(\"willChange\");r&&(i=r);const c=[],u=o&&e.animationState&&e.animationState.getState()[o];for(const t in s){const r=e.getValue(t),o=s[t];if(!r||void 0===o||u&&ip(u,t))continue;const a={delay:n,elapsed:0,...Hh(i||{},t)};if(window.HandoffAppearAnimations){const n=e.getProps()[Hl];if(n){const e=window.HandoffAppearAnimations(n,t,r,Au);null!==e&&(a.elapsed=e,a.isHandoff=!0)}}let d=!a.isHandoff&&!ap(r,o);if(\"spring\"===a.type&&(r.getVelocity()||a.velocity)&&(d=!1),r.animation&&(d=!1),d)continue;r.start(Uh(t,r,o,e.shouldReduceMotion&&yc.has(t)?{type:!1}:a));const h=r.animation;Wh(l)&&(l.add(t),h.then((()=>l.remove(t)))),c.push(h)}return a&&Promise.all(c).then((()=>{a&&function(e,t){const n=td(e,t);let{transitionEnd:r={},transition:o={},...i}=n?e.makeTargetAnimatable(n,!1):{};i={...i,...r};for(const t in i)rp(e,t,wu(i[t]))}(e,a)})),c}function lp(e,t,n={}){const r=td(e,t,n.custom);let{transition:o=e.getDefaultTransition()||{}}=r||{};n.transitionOverride&&(o=n.transitionOverride);const i=r?()=>Promise.all(sp(e,r,n)):()=>Promise.resolve(),a=e.variantChildren&&e.variantChildren.size?(r=0)=>{const{delayChildren:i=0,staggerChildren:a,staggerDirection:s}=o;return function(e,t,n=0,r=0,o=1,i){const a=[],s=(e.variantChildren.size-1)*r,l=1===o?(e=0)=>e*r:(e=0)=>s-e*r;return Array.from(e.variantChildren).sort(cp).forEach(((e,r)=>{e.notify(\"AnimationStart\",t),a.push(lp(e,t,{...i,delay:n+l(r)}).then((()=>e.notify(\"AnimationComplete\",t))))})),Promise.all(a)}(e,t,i+r,a,s,n)}:()=>Promise.resolve(),{when:s}=o;if(s){const[e,t]=\"beforeChildren\"===s?[i,a]:[a,i];return e().then((()=>t()))}return Promise.all([i(),a(n.delay)])}function cp(e,t){return e.sortNodePosition(t)}const up=[...tc].reverse(),dp=tc.length;function hp(e){return t=>Promise.all(t.map((({animation:t,options:n})=>function(e,t,n={}){let r;if(e.notify(\"AnimationStart\",t),Array.isArray(t)){const o=t.map((t=>lp(e,t,n)));r=Promise.all(o)}else if(\"string\"==typeof t)r=lp(e,t,n);else{const o=\"function\"==typeof t?td(e,t,n.custom):t;r=Promise.all(sp(e,o,n))}return r.then((()=>e.notify(\"AnimationComplete\",t)))}(e,t,n))))}function pp(e){let t=hp(e);const n={animate:fp(!0),whileInView:fp(),whileHover:fp(),whileTap:fp(),whileDrag:fp(),whileFocus:fp(),exit:fp()};let r=!0;const o=(t,n)=>{const r=td(e,n);if(r){const{transition:e,transitionEnd:n,...o}=r;t={...t,...o,...n}}return t};function i(i,a){const s=e.getProps(),l=e.getVariantContext(!0)||{},c=[],u=new Set;let d={},h=1/0;for(let t=0;t<dp;t++){const g=up[t],m=n[g],v=void 0!==s[g]?s[g]:l[g],b=Ql(v),y=g===a?m.isActive:null;!1===y&&(h=t);let w=v===l[g]&&v!==s[g]&&b;if(w&&r&&e.manuallyAnimateOnMount&&(w=!1),m.protectedKeys={...d},!m.isActive&&null===y||!v&&!m.prevProp||ec(v)||\"boolean\"==typeof v)continue;let x=(p=m.prevProp,(\"string\"==typeof(f=v)?f!==p:!!Array.isArray(f)&&!ed(f,p))||g===a&&m.isActive&&!w&&b||t>h&&b),k=!1;const S=Array.isArray(v)?v:[v];let E=S.reduce(o,{});!1===y&&(E={});const{prevResolvedValues:A={}}=m,P={...A,...E},T=e=>{x=!0,u.has(e)&&(k=!0,u.delete(e)),m.needsAnimating[e]=!0};for(const e in P){const t=E[e],n=A[e];if(d.hasOwnProperty(e))continue;let r=!1;r=bu(t)&&bu(n)?!ed(t,n):t!==n,r?void 0!==t?T(e):u.add(e):void 0!==t&&u.has(e)?T(e):m.protectedKeys[e]=!0}m.prevProp=v,m.prevResolvedValues=E,m.isActive&&(d={...d,...E}),r&&e.blockInitialAnimation&&(x=!1),x&&(!w||k)&&c.push(...S.map((e=>({animation:e,options:{type:g,...i}}))))}var p,f;if(u.size){const t={};u.forEach((n=>{const r=e.getBaseTarget(n);void 0!==r&&(t[n]=r)})),c.push({animation:t})}let g=!!c.length;return r&&(!1===s.initial||s.initial===s.animate)&&!e.manuallyAnimateOnMount&&(g=!1),r=!1,g?t(c):Promise.resolve()}return{animateChanges:i,setActive:function(t,r,o){var a;if(n[t].isActive===r)return Promise.resolve();null===(a=e.variantChildren)||void 0===a||a.forEach((e=>{var n;return null===(n=e.animationState)||void 0===n?void 0:n.setActive(t,r)})),n[t].isActive=r;const s=i(o,t);for(const e in n)n[e].protectedKeys={};return s},setAnimateFunction:function(n){t=n(e)},getState:()=>n}}function fp(e=!1){return{isActive:e,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}let gp=0;const mp={animation:{Feature:class extends Iu{constructor(e){super(e),e.animationState||(e.animationState=pp(e))}updateAnimationControlsSubscription(){const{animate:e}=this.node.getProps();this.unmount(),ec(e)&&(this.unmount=e.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){const{animate:e}=this.node.getProps(),{animate:t}=this.node.prevProps||{};e!==t&&this.updateAnimationControlsSubscription()}unmount(){}}},exit:{Feature:class extends Iu{constructor(){super(...arguments),this.id=gp++}update(){if(!this.node.presenceContext)return;const{isPresent:e,onExitComplete:t,custom:n}=this.node.presenceContext,{isPresent:r}=this.node.prevPresenceContext||{};if(!this.node.animationState||e===r)return;const o=this.node.animationState.setActive(\"exit\",!e,{custom:null!=n?n:this.node.getProps().custom});t&&!e&&o.then((()=>t(this.id)))}mount(){const{register:e}=this.node.presenceContext||{};e&&(this.unmount=e(this.id))}unmount(){}}}},vp=(e,t)=>Math.abs(e-t);class bp{constructor(e,t,{transformPagePoint:n,contextWindow:r,dragSnapToOrigin:o=!1}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.contextWindow=window,this.updatePoint=()=>{if(!this.lastMoveEvent||!this.lastMoveEventInfo)return;const e=xp(this.lastMoveEventInfo,this.history),t=null!==this.startEvent,n=function(e,t){const n=vp(e.x,t.x),r=vp(e.y,t.y);return Math.sqrt(n**2+r**2)}(e.offset,{x:0,y:0})>=3;if(!t&&!n)return;const{point:r}=e,{timestamp:o}=Tu;this.history.push({...r,timestamp:o});const{onStart:i,onMove:a}=this.handlers;t||(i&&i(this.lastMoveEvent,e),this.startEvent=this.lastMoveEvent),a&&a(this.lastMoveEvent,e)},this.handlePointerMove=(e,t)=>{this.lastMoveEvent=e,this.lastMoveEventInfo=yp(t,this.transformPagePoint),Au.update(this.updatePoint,!0)},this.handlePointerUp=(e,t)=>{this.end();const{onEnd:n,onSessionEnd:r,resumeAnimation:o}=this.handlers;if(this.dragSnapToOrigin&&o&&o(),!this.lastMoveEvent||!this.lastMoveEventInfo)return;const i=xp(\"pointercancel\"===e.type?this.lastMoveEventInfo:yp(t,this.transformPagePoint),this.history);this.startEvent&&n&&n(e,i),r&&r(e,i)},!$u(e))return;this.dragSnapToOrigin=o,this.handlers=t,this.transformPagePoint=n,this.contextWindow=r||window;const i=yp(Mu(e),this.transformPagePoint),{point:a}=i,{timestamp:s}=Tu;this.history=[{...a,timestamp:s}];const{onSessionStart:l}=t;l&&l(e,xp(i,this.history)),this.removeListeners=Bu(Ou(this.contextWindow,\"pointermove\",this.handlePointerMove),Ou(this.contextWindow,\"pointerup\",this.handlePointerUp),Ou(this.contextWindow,\"pointercancel\",this.handlePointerUp))}updateHandlers(e){this.handlers=e}end(){this.removeListeners&&this.removeListeners(),Pu(this.updatePoint)}}function yp(e,t){return t?{point:t(e.point)}:e}function wp(e,t){return{x:e.x-t.x,y:e.y-t.y}}function xp({point:e},t){return{point:e,delta:wp(e,Sp(t)),offset:wp(e,kp(t)),velocity:Ep(t,.1)}}function kp(e){return e[0]}function Sp(e){return e[e.length-1]}function Ep(e,t){if(e.length<2)return{x:0,y:0};let n=e.length-1,r=null;const o=Sp(e);for(;n>=0&&(r=e[n],!(o.timestamp-r.timestamp>rd(t)));)n--;if(!r)return{x:0,y:0};const i=od(o.timestamp-r.timestamp);if(0===i)return{x:0,y:0};const a={x:(o.x-r.x)/i,y:(o.y-r.y)/i};return a.x===1/0&&(a.x=0),a.y===1/0&&(a.y=0),a}function Ap(e){return e.max-e.min}function Pp(e,t=0,n=.01){return Math.abs(e-t)<=n}function Tp(e,t,n,r=.5){e.origin=r,e.originPoint=Ad(t.min,t.max,e.origin),e.scale=Ap(n)/Ap(t),(Pp(e.scale,1,1e-4)||isNaN(e.scale))&&(e.scale=1),e.translate=Ad(n.min,n.max,e.origin)-e.originPoint,(Pp(e.translate)||isNaN(e.translate))&&(e.translate=0)}function Cp(e,t,n,r){Tp(e.x,t.x,n.x,r?r.originX:void 0),Tp(e.y,t.y,n.y,r?r.originY:void 0)}function Rp(e,t,n){e.min=n.min+t.min,e.max=e.min+Ap(t)}function Lp(e,t,n){e.min=t.min-n.min,e.max=e.min+Ap(t)}function Dp(e,t,n){Lp(e.x,t.x,n.x),Lp(e.y,t.y,n.y)}function $p(e,t,n){return{min:void 0!==t?e.min+t:void 0,max:void 0!==n?e.max+n-(e.max-e.min):void 0}}function Mp(e,t){let n=t.min-e.min,r=t.max-e.max;return t.max-t.min<e.max-e.min&&([n,r]=[r,n]),{min:n,max:r}}const Fp=.35;function Op(e,t,n){return{min:Vp(e,t),max:Vp(e,n)}}function Vp(e,t){return\"number\"==typeof e?e:e[t]||0}const Bp=()=>({x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}}),_p=()=>({x:{min:0,max:0},y:{min:0,max:0}});function qp(e){return[e(\"x\"),e(\"y\")]}function Np({top:e,left:t,right:n,bottom:r}){return{x:{min:t,max:n},y:{min:e,max:r}}}function zp(e){return void 0===e||1===e}function jp({scale:e,scaleX:t,scaleY:n}){return!zp(e)||!zp(t)||!zp(n)}function Ip(e){return jp(e)||Hp(e)||e.z||e.rotate||e.rotateX||e.rotateY}function Hp(e){return Up(e.x)||Up(e.y)}function Up(e){return e&&\"0%\"!==e}function Wp(e,t,n){return n+t*(e-n)}function Gp(e,t,n,r,o){return void 0!==o&&(e=Wp(e,o,r)),Wp(e,n,r)+t}function Yp(e,t=0,n=1,r,o){e.min=Gp(e.min,t,n,r,o),e.max=Gp(e.max,t,n,r,o)}function Xp(e,{x:t,y:n}){Yp(e.x,t.translate,t.scale,t.originPoint),Yp(e.y,n.translate,n.scale,n.originPoint)}function Zp(e){return Number.isInteger(e)||e>1.0000000000001||e<.999999999999?e:1}function Kp(e,t){e.min=e.min+t,e.max=e.max+t}function Jp(e,t,[n,r,o]){const i=void 0!==t[o]?t[o]:.5,a=Ad(e.min,e.max,i);Yp(e,t[n],t[r],a,t.scale)}const Qp=[\"x\",\"scaleX\",\"originX\"],ef=[\"y\",\"scaleY\",\"originY\"];function tf(e,t){Jp(e.x,t,Qp),Jp(e.y,t,ef)}function nf(e,t){return Np(function(e,t){if(!t)return e;const n=t({x:e.left,y:e.top}),r=t({x:e.right,y:e.bottom});return{top:n.y,left:n.x,bottom:r.y,right:r.x}}(e.getBoundingClientRect(),t))}const rf=({current:e})=>e?e.ownerDocument.defaultView:null,of=new WeakMap;class af{constructor(e){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=_p(),this.visualElement=e}start(e,{snapToCursor:t=!1}={}){const{presenceContext:n}=this.visualElement;if(n&&!1===n.isPresent)return;const{dragSnapToOrigin:r}=this.getProps();this.panSession=new bp(e,{onSessionStart:e=>{const{dragSnapToOrigin:n}=this.getProps();n?this.pauseAnimation():this.stopAnimation(),t&&this.snapToCursor(Mu(e,\"page\").point)},onStart:(e,t)=>{const{drag:n,dragPropagation:r,onDragStart:o}=this.getProps();if(n&&!r&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=zu(n),!this.openGlobalLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),qp((e=>{let t=this.getAxisMotionValue(e).get()||0;if(zc.test(t)){const{projection:n}=this.visualElement;if(n&&n.layout){const r=n.layout.layoutBox[e];r&&(t=Ap(r)*(parseFloat(t)/100))}}this.originPoint[e]=t})),o&&Au.update((()=>o(e,t)),!1,!0);const{animationState:i}=this.visualElement;i&&i.setActive(\"whileDrag\",!0)},onMove:(e,t)=>{const{dragPropagation:n,dragDirectionLock:r,onDirectionLock:o,onDrag:i}=this.getProps();if(!n&&!this.openGlobalLock)return;const{offset:a}=t;if(r&&null===this.currentDirection)return this.currentDirection=function(e,t=10){let n=null;return Math.abs(e.y)>t?n=\"y\":Math.abs(e.x)>t&&(n=\"x\"),n}(a),void(null!==this.currentDirection&&o&&o(this.currentDirection));this.updateAxis(\"x\",t.point,a),this.updateAxis(\"y\",t.point,a),this.visualElement.render(),i&&i(e,t)},onSessionEnd:(e,t)=>this.stop(e,t),resumeAnimation:()=>qp((e=>{var t;return\"paused\"===this.getAnimationState(e)&&(null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.play())}))},{transformPagePoint:this.visualElement.getTransformPagePoint(),dragSnapToOrigin:r,contextWindow:rf(this.visualElement)})}stop(e,t){const n=this.isDragging;if(this.cancel(),!n)return;const{velocity:r}=t;this.startAnimation(r);const{onDragEnd:o}=this.getProps();o&&Au.update((()=>o(e,t)))}cancel(){this.isDragging=!1;const{projection:e,animationState:t}=this.visualElement;e&&(e.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:n}=this.getProps();!n&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),t&&t.setActive(\"whileDrag\",!1)}updateAxis(e,t,n){const{drag:r}=this.getProps();if(!n||!sf(e,r,this.currentDirection))return;const o=this.getAxisMotionValue(e);let i=this.originPoint[e]+n[e];this.constraints&&this.constraints[e]&&(i=function(e,{min:t,max:n},r){return void 0!==t&&e<t?e=r?Ad(t,e,r.min):Math.max(e,t):void 0!==n&&e>n&&(e=r?Ad(n,e,r.max):Math.min(e,n)),e}(i,this.constraints[e],this.elastic[e])),o.set(i)}resolveConstraints(){var e;const{dragConstraints:t,dragElastic:n}=this.getProps(),r=this.visualElement.projection&&!this.visualElement.projection.layout?this.visualElement.projection.measure(!1):null===(e=this.visualElement.projection)||void 0===e?void 0:e.layout,o=this.constraints;t&&Jl(t)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!t||!r)&&function(e,{top:t,left:n,bottom:r,right:o}){return{x:$p(e.x,n,o),y:$p(e.y,t,r)}}(r.layoutBox,t),this.elastic=function(e=Fp){return!1===e?e=0:!0===e&&(e=Fp),{x:Op(e,\"left\",\"right\"),y:Op(e,\"top\",\"bottom\")}}(n),o!==this.constraints&&r&&this.constraints&&!this.hasMutatedConstraints&&qp((e=>{this.getAxisMotionValue(e)&&(this.constraints[e]=function(e,t){const n={};return void 0!==t.min&&(n.min=t.min-e.min),void 0!==t.max&&(n.max=t.max-e.min),n}(r.layoutBox[e],this.constraints[e]))}))}resolveRefConstraints(){const{dragConstraints:e,onMeasureDragConstraints:t}=this.getProps();if(!e||!Jl(e))return!1;const n=e.current,{projection:r}=this.visualElement;if(!r||!r.layout)return!1;const o=function(e,t,n){const r=nf(e,n),{scroll:o}=t;return o&&(Kp(r.x,o.offset.x),Kp(r.y,o.offset.y)),r}(n,r.root,this.visualElement.getTransformPagePoint());let i=function(e,t){return{x:Mp(e.x,t.x),y:Mp(e.y,t.y)}}(r.layout.layoutBox,o);if(t){const e=t(function({x:e,y:t}){return{top:t.min,right:e.max,bottom:t.max,left:e.min}}(i));this.hasMutatedConstraints=!!e,e&&(i=Np(e))}return i}startAnimation(e){const{drag:t,dragMomentum:n,dragElastic:r,dragTransition:o,dragSnapToOrigin:i,onDragTransitionEnd:a}=this.getProps(),s=this.constraints||{},l=qp((a=>{if(!sf(a,t,this.currentDirection))return;let l=s&&s[a]||{};i&&(l={min:0,max:0});const c=r?200:1e6,u=r?40:1e7,d={type:\"inertia\",velocity:n?e[a]:0,bounceStiffness:c,bounceDamping:u,timeConstant:750,restDelta:1,restSpeed:10,...o,...l};return this.startAxisValueAnimation(a,d)}));return Promise.all(l).then(a)}startAxisValueAnimation(e,t){const n=this.getAxisMotionValue(e);return n.start(Uh(e,n,0,t))}stopAnimation(){qp((e=>this.getAxisMotionValue(e).stop()))}pauseAnimation(){qp((e=>{var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.pause()}))}getAnimationState(e){var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.state}getAxisMotionValue(e){const t=\"_drag\"+e.toUpperCase(),n=this.visualElement.getProps();return n[t]||this.visualElement.getValue(e,(n.initial?n.initial[e]:void 0)||0)}snapToCursor(e){qp((t=>{const{drag:n}=this.getProps();if(!sf(t,n,this.currentDirection))return;const{projection:r}=this.visualElement,o=this.getAxisMotionValue(t);if(r&&r.layout){const{min:n,max:i}=r.layout.layoutBox[t];o.set(e[t]-Ad(n,i,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:e,dragConstraints:t}=this.getProps(),{projection:n}=this.visualElement;if(!Jl(t)||!n||!this.constraints)return;this.stopAnimation();const r={x:0,y:0};qp((e=>{const t=this.getAxisMotionValue(e);if(t){const n=t.get();r[e]=function(e,t){let n=.5;const r=Ap(e),o=Ap(t);return o>r?n=Ed(t.min,t.max-r,e.min):r>o&&(n=Ed(e.min,e.max-o,t.min)),Lc(0,1,n)}({min:n,max:n},this.constraints[e])}}));const{transformTemplate:o}=this.visualElement.getProps();this.visualElement.current.style.transform=o?o({},\"\"):\"none\",n.root&&n.root.updateScroll(),n.updateLayout(),this.resolveConstraints(),qp((t=>{if(!sf(t,e,null))return;const n=this.getAxisMotionValue(t),{min:o,max:i}=this.constraints[t];n.set(Ad(o,i,r[t]))}))}addListeners(){if(!this.visualElement.current)return;of.set(this.visualElement,this);const e=Ou(this.visualElement.current,\"pointerdown\",(e=>{const{drag:t,dragListener:n=!0}=this.getProps();t&&n&&this.start(e)})),t=()=>{const{dragConstraints:e}=this.getProps();Jl(e)&&(this.constraints=this.resolveRefConstraints())},{projection:n}=this.visualElement,r=n.addEventListener(\"measure\",t);n&&!n.layout&&(n.root&&n.root.updateScroll(),n.updateLayout()),t();const o=Du(window,\"resize\",(()=>this.scalePositionWithinConstraints())),i=n.addEventListener(\"didUpdate\",(({delta:e,hasLayoutChanged:t})=>{this.isDragging&&t&&(qp((t=>{const n=this.getAxisMotionValue(t);n&&(this.originPoint[t]+=e[t].translate,n.set(n.get()+e[t].translate))})),this.visualElement.render())}));return()=>{o(),e(),r(),i&&i()}}getProps(){const e=this.visualElement.getProps(),{drag:t=!1,dragDirectionLock:n=!1,dragPropagation:r=!1,dragConstraints:o=!1,dragElastic:i=Fp,dragMomentum:a=!0}=e;return{...e,drag:t,dragDirectionLock:n,dragPropagation:r,dragConstraints:o,dragElastic:i,dragMomentum:a}}}function sf(e,t,n){return!(!0!==t&&t!==e||null!==n&&n!==e)}const lf=e=>(t,n)=>{e&&Au.update((()=>e(t,n)))};const cf={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function uf(e,t){return t.max===t.min?0:e/(t.max-t.min)*100}const df={correct:(e,t)=>{if(!t.target)return e;if(\"string\"==typeof e){if(!jc.test(e))return e;e=parseFloat(e)}return`${uf(e,t.target.x)}% ${uf(e,t.target.y)}%`}},hf={correct:(e,{treeScale:t,projectionDelta:n})=>{const r=e,o=Yd.parse(e);if(o.length>5)return r;const i=Yd.createTransformer(e),a=\"number\"!=typeof o[0]?1:0,s=n.x.scale*t.x,l=n.y.scale*t.y;o[0+a]/=s,o[1+a]/=l;const c=Ad(s,l,.5);return\"number\"==typeof o[2+a]&&(o[2+a]/=c),\"number\"==typeof o[3+a]&&(o[3+a]/=c),i(o)}};class pf extends react__WEBPACK_IMPORTED_MODULE_1__.Component{componentDidMount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:n,layoutId:r}=this.props,{projection:o}=e;var i;i=gf,Object.assign(vc,i),o&&(t.group&&t.group.add(o),n&&n.register&&r&&n.register(o),o.root.didUpdate(),o.addEventListener(\"animationComplete\",(()=>{this.safeToRemove()})),o.setOptions({...o.options,onExitComplete:()=>this.safeToRemove()})),cf.hasEverUpdated=!0}getSnapshotBeforeUpdate(e){const{layoutDependency:t,visualElement:n,drag:r,isPresent:o}=this.props,i=n.projection;return i&&(i.isPresent=o,r||e.layoutDependency!==t||void 0===t?i.willUpdate():this.safeToRemove(),e.isPresent!==o&&(o?i.promote():i.relegate()||Au.postRender((()=>{const e=i.getStack();(!e||!e.members.length)&&this.safeToRemove()})))),null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),Zl.postRender((()=>{!e.currentAnimation&&e.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:n}=this.props,{projection:r}=e;r&&(r.scheduleCheckAfterUnmount(),t&&t.group&&t.group.remove(r),n&&n.deregister&&n.deregister(r))}safeToRemove(){const{safeToRemove:e}=this.props;e&&e()}render(){return null}}function ff(e){const[t,n]=function(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ql);if(null===e)return[!0,null];const{isPresent:t,onExitComplete:n,register:r}=e,o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>r(o)),[]),!t&&n?[!1,()=>n&&n(o)]:[!0]}(),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(cc);return react__WEBPACK_IMPORTED_MODULE_1__.createElement(pf,{...e,layoutGroup:r,switchLayoutGroup:(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(uc),isPresent:t,safeToRemove:n})}const gf={borderRadius:{...df,applyTo:[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\"]},borderTopLeftRadius:df,borderTopRightRadius:df,borderBottomLeftRadius:df,borderBottomRightRadius:df,boxShadow:hf},mf=[\"TopLeft\",\"TopRight\",\"BottomLeft\",\"BottomRight\"],vf=mf.length,bf=e=>\"string\"==typeof e?parseFloat(e):e,yf=e=>\"number\"==typeof e||jc.test(e);function wf(e,t){return void 0!==e[t]?e[t]:e.borderRadius}const xf=Sf(0,.5,vd),kf=Sf(.5,.95,Eu);function Sf(e,t,n){return r=>r<e?0:r>t?1:n(Ed(e,t,r))}function Ef(e,t){e.min=t.min,e.max=t.max}function Af(e,t){Ef(e.x,t.x),Ef(e.y,t.y)}function Pf(e,t,n,r,o){return e=Wp(e-=t,1/n,r),void 0!==o&&(e=Wp(e,1/o,r)),e}function Tf(e,t,[n,r,o],i,a){!function(e,t=0,n=1,r=.5,o,i=e,a=e){if(zc.test(t)&&(t=parseFloat(t),t=Ad(a.min,a.max,t/100)-a.min),\"number\"!=typeof t)return;let s=Ad(i.min,i.max,r);e===i&&(s-=t),e.min=Pf(e.min,t,n,s,o),e.max=Pf(e.max,t,n,s,o)}(e,t[n],t[r],t[o],t.scale,i,a)}const Cf=[\"x\",\"scaleX\",\"originX\"],Rf=[\"y\",\"scaleY\",\"originY\"];function Lf(e,t,n,r){Tf(e.x,t,Cf,n?n.x:void 0,r?r.x:void 0),Tf(e.y,t,Rf,n?n.y:void 0,r?r.y:void 0)}function Df(e){return 0===e.translate&&1===e.scale}function $f(e){return Df(e.x)&&Df(e.y)}function Mf(e,t){return Math.round(e.x.min)===Math.round(t.x.min)&&Math.round(e.x.max)===Math.round(t.x.max)&&Math.round(e.y.min)===Math.round(t.y.min)&&Math.round(e.y.max)===Math.round(t.y.max)}function Ff(e){return Ap(e.x)/Ap(e.y)}class Of{constructor(){this.members=[]}add(e){Yh(this.members,e),e.scheduleRender()}remove(e){if(Xh(this.members,e),e===this.prevLead&&(this.prevLead=void 0),e===this.lead){const e=this.members[this.members.length-1];e&&this.promote(e)}}relegate(e){const t=this.members.findIndex((t=>e===t));if(0===t)return!1;let n;for(let e=t;e>=0;e--){const t=this.members[e];if(!1!==t.isPresent){n=t;break}}return!!n&&(this.promote(n),!0)}promote(e,t){const n=this.lead;if(e!==n&&(this.prevLead=n,this.lead=e,e.show(),n)){n.instance&&n.scheduleRender(),e.scheduleRender(),e.resumeFrom=n,t&&(e.resumeFrom.preserveOpacity=!0),n.snapshot&&(e.snapshot=n.snapshot,e.snapshot.latestValues=n.animationValues||n.latestValues),e.root&&e.root.isUpdating&&(e.isLayoutDirty=!0);const{crossfade:r}=e.options;!1===r&&n.hide()}}exitAnimationComplete(){this.members.forEach((e=>{const{options:t,resumingFrom:n}=e;t.onExitComplete&&t.onExitComplete(),n&&n.options.onExitComplete&&n.options.onExitComplete()}))}scheduleRender(){this.members.forEach((e=>{e.instance&&e.scheduleRender(!1)}))}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}function Vf(e,t,n){let r=\"\";const o=e.x.translate/t.x,i=e.y.translate/t.y;if((o||i)&&(r=`translate3d(${o}px, ${i}px, 0) `),(1!==t.x||1!==t.y)&&(r+=`scale(${1/t.x}, ${1/t.y}) `),n){const{rotate:e,rotateX:t,rotateY:o}=n;e&&(r+=`rotate(${e}deg) `),t&&(r+=`rotateX(${t}deg) `),o&&(r+=`rotateY(${o}deg) `)}const a=e.x.scale*t.x,s=e.y.scale*t.y;return(1!==a||1!==s)&&(r+=`scale(${a}, ${s})`),r||\"none\"}const Bf=(e,t)=>e.depth-t.depth;class _f{constructor(){this.children=[],this.isDirty=!1}add(e){Yh(this.children,e),this.isDirty=!0}remove(e){Xh(this.children,e),this.isDirty=!0}forEach(e){this.isDirty&&this.children.sort(Bf),this.isDirty=!1,this.children.forEach(e)}}const qf=[\"\",\"X\",\"Y\",\"Z\"],Nf={visibility:\"hidden\"};let zf=0;const jf={type:\"projectionFrame\",totalNodes:0,resolvedTargetDeltas:0,recalculatedProjection:0};function If({attachResizeListener:e,defaultParent:t,measureScroll:n,checkIsScrollRoot:r,resetTransform:o}){return class{constructor(e={},n=(null==t?void 0:t())){this.id=zf++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.projectionUpdateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{var e;this.projectionUpdateScheduled=!1,jf.totalNodes=jf.resolvedTargetDeltas=jf.recalculatedProjection=0,this.nodes.forEach(Wf),this.nodes.forEach(Qf),this.nodes.forEach(eg),this.nodes.forEach(Gf),e=jf,window.MotionDebug&&window.MotionDebug.record(e)},this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.latestValues=e,this.root=n?n.root||n:this,this.path=n?[...n.path,n]:[],this.parent=n,this.depth=n?n.depth+1:0;for(let e=0;e<this.path.length;e++)this.path[e].shouldResetTransform=!0;this.root===this&&(this.nodes=new _f)}addEventListener(e,t){return this.eventHandlers.has(e)||this.eventHandlers.set(e,new Zh),this.eventHandlers.get(e).add(t)}notifyListeners(e,...t){const n=this.eventHandlers.get(e);n&&n.notify(...t)}hasListeners(e){return this.eventHandlers.has(e)}mount(t,n=this.root.hasTreeAnimated){if(this.instance)return;var r;this.isSVG=(r=t)instanceof SVGElement&&\"svg\"!==r.tagName,this.instance=t;const{layoutId:o,layout:i,visualElement:a}=this.options;if(a&&!a.current&&a.mount(t),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),n&&(i||o)&&(this.isLayoutDirty=!0),e){let n;const r=()=>this.root.updateBlockedByResize=!1;e(t,(()=>{this.root.updateBlockedByResize=!0,n&&n(),n=function(e,t){const n=Sh.now(),r=({timestamp:o})=>{const i=o-n;i>=t&&(Pu(r),e(i-t))};return Au.read(r,!0),()=>Pu(r)}(r,250),cf.hasAnimatedSinceResize&&(cf.hasAnimatedSinceResize=!1,this.nodes.forEach(Jf))}))}o&&this.root.registerSharedNode(o,this),!1!==this.options.animate&&a&&(o||i)&&this.addEventListener(\"didUpdate\",(({delta:e,hasLayoutChanged:t,hasRelativeTargetChanged:n,layout:r})=>{if(this.isTreeAnimationBlocked())return this.target=void 0,void(this.relativeTarget=void 0);const o=this.options.transition||a.getDefaultTransition()||ag,{onLayoutAnimationStart:i,onLayoutAnimationComplete:s}=a.getProps(),l=!this.targetLayout||!Mf(this.targetLayout,r)||n,c=!t&&n;if(this.options.layoutRoot||this.resumeFrom&&this.resumeFrom.instance||c||t&&(l||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(e,c);const t={...Hh(o,\"layout\"),onPlay:i,onComplete:s};(a.shouldReduceMotion||this.options.layoutRoot)&&(t.delay=0,t.type=!1),this.startAnimation(t)}else t||Jf(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=r}))}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);const e=this.getStack();e&&e.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,Pu(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){this.isUpdateBlocked()||(this.isUpdating=!0,this.nodes&&this.nodes.forEach(tg),this.animationId++)}getTransformTemplate(){const{visualElement:e}=this.options;return e&&e.getProps().transformTemplate}willUpdate(e=!0){if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked())return void(this.options.onExitComplete&&this.options.onExitComplete());if(!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let e=0;e<this.path.length;e++){const t=this.path[e];t.shouldResetTransform=!0,t.updateScroll(\"snapshot\"),t.options.layoutRoot&&t.willUpdate(!1)}const{layoutId:t,layout:n}=this.options;if(void 0===t&&!n)return;const r=this.getTransformTemplate();this.prevTransformTemplateValue=r?r(this.latestValues,\"\"):void 0,this.updateSnapshot(),e&&this.notifyListeners(\"willUpdate\")}update(){if(this.updateScheduled=!1,this.isUpdateBlocked())return this.unblockUpdate(),this.clearAllSnapshots(),void this.nodes.forEach(Xf);this.isUpdating||this.nodes.forEach(Zf),this.isUpdating=!1,window.HandoffCancelAllAnimations&&window.HandoffCancelAllAnimations(),this.nodes.forEach(Kf),this.nodes.forEach(Hf),this.nodes.forEach(Uf),this.clearAllSnapshots();const e=Sh.now();Tu.delta=Lc(0,1e3/60,e-Tu.timestamp),Tu.timestamp=e,Tu.isProcessing=!0,Cu.update.process(Tu),Cu.preRender.process(Tu),Cu.render.process(Tu),Tu.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,Zl.read((()=>this.update())))}clearAllSnapshots(){this.nodes.forEach(Yf),this.sharedNodes.forEach(ng)}scheduleUpdateProjection(){this.projectionUpdateScheduled||(this.projectionUpdateScheduled=!0,Au.preRender(this.updateProjection,!1,!0))}scheduleCheckAfterUnmount(){Au.postRender((()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()}))}updateSnapshot(){this.snapshot||!this.instance||(this.snapshot=this.measure())}updateLayout(){if(!(this.instance&&(this.updateScroll(),this.options.alwaysMeasureLayout&&this.isLead()||this.isLayoutDirty)))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let e=0;e<this.path.length;e++)this.path[e].updateScroll();const e=this.layout;this.layout=this.measure(!1),this.layoutCorrected=_p(),this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners(\"measure\",this.layout.layoutBox);const{visualElement:t}=this.options;t&&t.notify(\"LayoutMeasure\",this.layout.layoutBox,e?e.layoutBox:void 0)}updateScroll(e=\"measure\"){let t=!(!this.options.layoutScroll||!this.instance);this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===e&&(t=!1),t&&(this.scroll={animationId:this.root.animationId,phase:e,isRoot:r(this.instance),offset:n(this.instance)})}resetTransform(){if(!o)return;const e=this.isLayoutDirty||this.shouldResetTransform,t=this.projectionDelta&&!$f(this.projectionDelta),n=this.getTransformTemplate(),r=n?n(this.latestValues,\"\"):void 0,i=r!==this.prevTransformTemplateValue;e&&(t||Ip(this.latestValues)||i)&&(o(this.instance,r),this.shouldResetTransform=!1,this.scheduleRender())}measure(e=!0){const t=this.measurePageBox();let n=this.removeElementScroll(t);return e&&(n=this.removeTransform(n)),cg((r=n).x),cg(r.y),{animationId:this.root.animationId,measuredBox:t,layoutBox:n,latestValues:{},source:this.id};var r}measurePageBox(){const{visualElement:e}=this.options;if(!e)return _p();const t=e.measureViewportBox(),{scroll:n}=this.root;return n&&(Kp(t.x,n.offset.x),Kp(t.y,n.offset.y)),t}removeElementScroll(e){const t=_p();Af(t,e);for(let n=0;n<this.path.length;n++){const r=this.path[n],{scroll:o,options:i}=r;if(r!==this.root&&o&&i.layoutScroll){if(o.isRoot){Af(t,e);const{scroll:n}=this.root;n&&(Kp(t.x,-n.offset.x),Kp(t.y,-n.offset.y))}Kp(t.x,o.offset.x),Kp(t.y,o.offset.y)}}return t}applyTransform(e,t=!1){const n=_p();Af(n,e);for(let e=0;e<this.path.length;e++){const r=this.path[e];!t&&r.options.layoutScroll&&r.scroll&&r!==r.root&&tf(n,{x:-r.scroll.offset.x,y:-r.scroll.offset.y}),Ip(r.latestValues)&&tf(n,r.latestValues)}return Ip(this.latestValues)&&tf(n,this.latestValues),n}removeTransform(e){const t=_p();Af(t,e);for(let e=0;e<this.path.length;e++){const n=this.path[e];if(!n.instance||!Ip(n.latestValues))continue;jp(n.latestValues)&&n.updateSnapshot();const r=_p();Af(r,n.measurePageBox()),Lf(t,n.latestValues,n.snapshot?n.snapshot.layoutBox:void 0,r)}return Ip(this.latestValues)&&Lf(t,this.latestValues),t}setTargetDelta(e){this.targetDelta=e,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(e){this.options={...this.options,...e,crossfade:void 0===e.crossfade||e.crossfade}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==Tu.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(e=!1){var t;const n=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=n.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=n.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=n.isSharedProjectionDirty);const r=!!this.resumingFrom||this!==n;if(!(e||r&&this.isSharedProjectionDirty||this.isProjectionDirty||null!==(t=this.parent)&&void 0!==t&&t.isProjectionDirty||this.attemptToResolveRelativeTarget))return;const{layout:o,layoutId:i}=this.options;if(this.layout&&(o||i)){if(this.resolvedRelativeTargetAt=Tu.timestamp,!this.targetDelta&&!this.relativeTarget){const e=this.getClosestProjectingParent();e&&e.layout&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget=_p(),this.relativeTargetOrigin=_p(),Dp(this.relativeTargetOrigin,this.layout.layoutBox,e.layout.layoutBox),Af(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(this.relativeTarget||this.targetDelta){if(this.target||(this.target=_p(),this.targetWithTransforms=_p()),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target?(this.forceRelativeParentToResolveTarget(),a=this.target,s=this.relativeTarget,l=this.relativeParent.target,Rp(a.x,s.x,l.x),Rp(a.y,s.y,l.y)):this.targetDelta?(this.resumingFrom?this.target=this.applyTransform(this.layout.layoutBox):Af(this.target,this.layout.layoutBox),Xp(this.target,this.targetDelta)):Af(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;const e=this.getClosestProjectingParent();e&&!!e.resumingFrom==!!this.resumingFrom&&!e.options.layoutScroll&&e.target&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget=_p(),this.relativeTargetOrigin=_p(),Dp(this.relativeTargetOrigin,this.target,e.target),Af(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}jf.resolvedTargetDeltas++}}var a,s,l}getClosestProjectingParent(){if(this.parent&&!jp(this.parent.latestValues)&&!Hp(this.parent.latestValues))return this.parent.isProjecting()?this.parent:this.parent.getClosestProjectingParent()}isProjecting(){return!(!(this.relativeTarget||this.targetDelta||this.options.layoutRoot)||!this.layout)}calcProjection(){var e;const t=this.getLead(),n=!!this.resumingFrom||this!==t;let r=!0;if((this.isProjectionDirty||!(null===(e=this.parent)||void 0===e)&&e.isProjectionDirty)&&(r=!1),n&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(r=!1),this.resolvedRelativeTargetAt===Tu.timestamp&&(r=!1),r)return;const{layout:o,layoutId:i}=this.options;if(this.isTreeAnimating=!!(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!o&&!i)return;Af(this.layoutCorrected,this.layout.layoutBox);const a=this.treeScale.x,s=this.treeScale.y;(function(e,t,n,r=!1){const o=n.length;if(!o)return;let i,a;t.x=t.y=1;for(let s=0;s<o;s++){i=n[s],a=i.projectionDelta;const o=i.instance;o&&o.style&&\"contents\"===o.style.display||(r&&i.options.layoutScroll&&i.scroll&&i!==i.root&&tf(e,{x:-i.scroll.offset.x,y:-i.scroll.offset.y}),a&&(t.x*=a.x.scale,t.y*=a.y.scale,Xp(e,a)),r&&Ip(i.latestValues)&&tf(e,i.latestValues))}t.x=Zp(t.x),t.y=Zp(t.y)})(this.layoutCorrected,this.treeScale,this.path,n),t.layout&&!t.target&&(1!==this.treeScale.x||1!==this.treeScale.y)&&(t.target=t.layout.layoutBox,t.targetWithTransforms=_p());const{target:l}=t;if(!l)return void(this.projectionTransform&&(this.projectionDelta=Bp(),this.projectionTransform=\"none\",this.scheduleRender()));this.projectionDelta||(this.projectionDelta=Bp(),this.projectionDeltaWithTransform=Bp());const c=this.projectionTransform;Cp(this.projectionDelta,this.layoutCorrected,l,this.latestValues),this.projectionTransform=Vf(this.projectionDelta,this.treeScale),(this.projectionTransform!==c||this.treeScale.x!==a||this.treeScale.y!==s)&&(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners(\"projectionUpdate\",l)),jf.recalculatedProjection++}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(e=!0){if(this.options.scheduleRender&&this.options.scheduleRender(),e){const e=this.getStack();e&&e.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}setAnimationOrigin(e,t=!1){const n=this.snapshot,r=n?n.latestValues:{},o={...this.latestValues},i=Bp();(!this.relativeParent||!this.relativeParent.options.layoutRoot)&&(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!t;const a=_p(),s=(n?n.source:void 0)!==(this.layout?this.layout.source:void 0),l=this.getStack(),c=!l||l.members.length<=1,u=!(!s||c||!0!==this.options.crossfade||this.path.some(ig));let d;this.animationProgress=0,this.mixTargetDelta=t=>{const n=t/1e3;var l,h,p,f,g,m;rg(i.x,e.x,n),rg(i.y,e.y,n),this.setTargetDelta(i),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout&&(Dp(a,this.layout.layoutBox,this.relativeParent.layout.layoutBox),p=this.relativeTarget,f=this.relativeTargetOrigin,g=a,m=n,og(p.x,f.x,g.x,m),og(p.y,f.y,g.y,m),d&&(l=this.relativeTarget,h=d,l.x.min===h.x.min&&l.x.max===h.x.max&&l.y.min===h.y.min&&l.y.max===h.y.max)&&(this.isProjectionDirty=!1),d||(d=_p()),Af(d,this.relativeTarget)),s&&(this.animationValues=o,function(e,t,n,r,o,i){o?(e.opacity=Ad(0,void 0!==n.opacity?n.opacity:1,xf(r)),e.opacityExit=Ad(void 0!==t.opacity?t.opacity:1,0,kf(r))):i&&(e.opacity=Ad(void 0!==t.opacity?t.opacity:1,void 0!==n.opacity?n.opacity:1,r));for(let o=0;o<vf;o++){const i=`border${mf[o]}Radius`;let a=wf(t,i),s=wf(n,i);void 0===a&&void 0===s||(a||(a=0),s||(s=0),0===a||0===s||yf(a)===yf(s)?(e[i]=Math.max(Ad(bf(a),bf(s),r),0),(zc.test(s)||zc.test(a))&&(e[i]+=\"%\")):e[i]=s)}(t.rotate||n.rotate)&&(e.rotate=Ad(t.rotate||0,n.rotate||0,r))}(o,r,this.latestValues,n,u,c)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=n},this.mixTargetDelta(this.options.layoutRoot?1e3:0)}startAnimation(e){this.notifyListeners(\"animationStart\"),this.currentAnimation&&this.currentAnimation.stop(),this.resumingFrom&&this.resumingFrom.currentAnimation&&this.resumingFrom.currentAnimation.stop(),this.pendingAnimation&&(Pu(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=Au.update((()=>{cf.hasAnimatedSinceResize=!0,this.currentAnimation=function(e,t,n){const r=xc(e)?e:Jh(e);return r.start(Uh(\"\",r,t,n)),r.animation}(0,1e3,{...e,onUpdate:t=>{this.mixTargetDelta(t),e.onUpdate&&e.onUpdate(t)},onComplete:()=>{e.onComplete&&e.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0}))}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);const e=this.getStack();e&&e.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners(\"animationComplete\")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(1e3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const e=this.getLead();let{targetWithTransforms:t,target:n,layout:r,latestValues:o}=e;if(t&&n&&r){if(this!==e&&this.layout&&r&&ug(this.options.animationType,this.layout.layoutBox,r.layoutBox)){n=this.target||_p();const t=Ap(this.layout.layoutBox.x);n.x.min=e.target.x.min,n.x.max=n.x.min+t;const r=Ap(this.layout.layoutBox.y);n.y.min=e.target.y.min,n.y.max=n.y.min+r}Af(t,n),tf(t,o),Cp(this.projectionDeltaWithTransform,this.layoutCorrected,t,o)}}registerSharedNode(e,t){this.sharedNodes.has(e)||this.sharedNodes.set(e,new Of),this.sharedNodes.get(e).add(t);const n=t.options.initialPromotionConfig;t.promote({transition:n?n.transition:void 0,preserveFollowOpacity:n&&n.shouldPreserveFollowOpacity?n.shouldPreserveFollowOpacity(t):void 0})}isLead(){const e=this.getStack();return!e||e.lead===this}getLead(){var e;const{layoutId:t}=this.options;return t&&(null===(e=this.getStack())||void 0===e?void 0:e.lead)||this}getPrevLead(){var e;const{layoutId:t}=this.options;return t?null===(e=this.getStack())||void 0===e?void 0:e.prevLead:void 0}getStack(){const{layoutId:e}=this.options;if(e)return this.root.sharedNodes.get(e)}promote({needsReset:e,transition:t,preserveFollowOpacity:n}={}){const r=this.getStack();r&&r.promote(this,n),e&&(this.projectionDelta=void 0,this.needsReset=!0),t&&this.setOptions({transition:t})}relegate(){const e=this.getStack();return!!e&&e.relegate(this)}resetRotation(){const{visualElement:e}=this.options;if(!e)return;let t=!1;const{latestValues:n}=e;if((n.rotate||n.rotateX||n.rotateY||n.rotateZ)&&(t=!0),!t)return;const r={};for(let t=0;t<qf.length;t++){const o=\"rotate\"+qf[t];n[o]&&(r[o]=n[o],e.setStaticValue(o,0))}e.render();for(const t in r)e.setStaticValue(t,r[t]);e.scheduleRender()}getProjectionStyles(e){var t,n;if(!this.instance||this.isSVG)return;if(!this.isVisible)return Nf;const r={visibility:\"\"},o=this.getTransformTemplate();if(this.needsReset)return this.needsReset=!1,r.opacity=\"\",r.pointerEvents=xu(null==e?void 0:e.pointerEvents)||\"\",r.transform=o?o(this.latestValues,\"\"):\"none\",r;const i=this.getLead();if(!this.projectionDelta||!this.layout||!i.target){const t={};return this.options.layoutId&&(t.opacity=void 0!==this.latestValues.opacity?this.latestValues.opacity:1,t.pointerEvents=xu(null==e?void 0:e.pointerEvents)||\"\"),this.hasProjected&&!Ip(this.latestValues)&&(t.transform=o?o({},\"\"):\"none\",this.hasProjected=!1),t}const a=i.animationValues||i.latestValues;this.applyTransformsToTarget(),r.transform=Vf(this.projectionDeltaWithTransform,this.treeScale,a),o&&(r.transform=o(a,r.transform));const{x:s,y:l}=this.projectionDelta;r.transformOrigin=`${100*s.origin}% ${100*l.origin}% 0`,i.animationValues?r.opacity=i===this?null!==(n=null!==(t=a.opacity)&&void 0!==t?t:this.latestValues.opacity)&&void 0!==n?n:1:this.preserveOpacity?this.latestValues.opacity:a.opacityExit:r.opacity=i===this?void 0!==a.opacity?a.opacity:\"\":void 0!==a.opacityExit?a.opacityExit:0;for(const e in vc){if(void 0===a[e])continue;const{correct:t,applyTo:n}=vc[e],o=\"none\"===r.transform?a[e]:t(a[e],i);if(n){const e=n.length;for(let t=0;t<e;t++)r[n[t]]=o}else r[e]=o}return this.options.layoutId&&(r.pointerEvents=i===this?xu(null==e?void 0:e.pointerEvents)||\"\":\"none\"),r}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach((e=>{var t;return null===(t=e.currentAnimation)||void 0===t?void 0:t.stop()})),this.root.nodes.forEach(Xf),this.root.sharedNodes.clear()}}}function Hf(e){e.updateLayout()}function Uf(e){var t;const n=(null===(t=e.resumeFrom)||void 0===t?void 0:t.snapshot)||e.snapshot;if(e.isLead()&&e.layout&&n&&e.hasListeners(\"didUpdate\")){const{layoutBox:t,measuredBox:r}=e.layout,{animationType:o}=e.options,i=n.source!==e.layout.source;\"size\"===o?qp((e=>{const r=i?n.measuredBox[e]:n.layoutBox[e],o=Ap(r);r.min=t[e].min,r.max=r.min+o})):ug(o,n.layoutBox,t)&&qp((r=>{const o=i?n.measuredBox[r]:n.layoutBox[r],a=Ap(t[r]);o.max=o.min+a,e.relativeTarget&&!e.currentAnimation&&(e.isProjectionDirty=!0,e.relativeTarget[r].max=e.relativeTarget[r].min+a)}));const a=Bp();Cp(a,t,n.layoutBox);const s=Bp();i?Cp(s,e.applyTransform(r,!0),n.measuredBox):Cp(s,t,n.layoutBox);const l=!$f(a);let c=!1;if(!e.resumeFrom){const r=e.getClosestProjectingParent();if(r&&!r.resumeFrom){const{snapshot:o,layout:i}=r;if(o&&i){const a=_p();Dp(a,n.layoutBox,o.layoutBox);const s=_p();Dp(s,t,i.layoutBox),Mf(a,s)||(c=!0),r.options.layoutRoot&&(e.relativeTarget=s,e.relativeTargetOrigin=a,e.relativeParent=r)}}}e.notifyListeners(\"didUpdate\",{layout:t,snapshot:n,delta:s,layoutDelta:a,hasLayoutChanged:l,hasRelativeTargetChanged:c})}else if(e.isLead()){const{onExitComplete:t}=e.options;t&&t()}e.options.transition=void 0}function Wf(e){jf.totalNodes++,e.parent&&(e.isProjecting()||(e.isProjectionDirty=e.parent.isProjectionDirty),e.isSharedProjectionDirty||(e.isSharedProjectionDirty=!!(e.isProjectionDirty||e.parent.isProjectionDirty||e.parent.isSharedProjectionDirty)),e.isTransformDirty||(e.isTransformDirty=e.parent.isTransformDirty))}function Gf(e){e.isProjectionDirty=e.isSharedProjectionDirty=e.isTransformDirty=!1}function Yf(e){e.clearSnapshot()}function Xf(e){e.clearMeasurements()}function Zf(e){e.isLayoutDirty=!1}function Kf(e){const{visualElement:t}=e.options;t&&t.getProps().onBeforeLayoutMeasure&&t.notify(\"BeforeLayoutMeasure\"),e.resetTransform()}function Jf(e){e.finishAnimation(),e.targetDelta=e.relativeTarget=e.target=void 0,e.isProjectionDirty=!0}function Qf(e){e.resolveTargetDelta()}function eg(e){e.calcProjection()}function tg(e){e.resetRotation()}function ng(e){e.removeLeadSnapshot()}function rg(e,t,n){e.translate=Ad(t.translate,0,n),e.scale=Ad(t.scale,1,n),e.origin=t.origin,e.originPoint=t.originPoint}function og(e,t,n,r){e.min=Ad(t.min,n.min,r),e.max=Ad(t.max,n.max,r)}function ig(e){return e.animationValues&&void 0!==e.animationValues.opacityExit}const ag={duration:.45,ease:[.4,0,.1,1]},sg=e=>typeof navigator<\"u\"&&navigator.userAgent&&navigator.userAgent.toLowerCase().includes(e),lg=sg(\"applewebkit/\")&&!sg(\"chrome/\")?Math.round:Eu;function cg(e){e.min=lg(e.min),e.max=lg(e.max)}function ug(e,t,n){return\"position\"===e||\"preserve-aspect\"===e&&!Pp(Ff(t),Ff(n),.2)}const dg=If({attachResizeListener:(e,t)=>Du(e,\"resize\",t),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),hg={current:void 0},pg=If({measureScroll:e=>({x:e.scrollLeft,y:e.scrollTop}),defaultParent:()=>{if(!hg.current){const e=new dg({});e.mount(window),e.setOptions({layoutScroll:!0}),hg.current=e}return hg.current},resetTransform:(e,t)=>{e.style.transform=void 0!==t?t:\"none\"},checkIsScrollRoot:e=>\"fixed\"===window.getComputedStyle(e).position}),fg={pan:{Feature:class extends Iu{constructor(){super(...arguments),this.removePointerDownListener=Eu}onPointerDown(e){this.session=new bp(e,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint(),contextWindow:rf(this.node)})}createPanHandlers(){const{onPanSessionStart:e,onPanStart:t,onPan:n,onPanEnd:r}=this.node.getProps();return{onSessionStart:lf(e),onStart:lf(t),onMove:n,onEnd:(e,t)=>{delete this.session,r&&Au.update((()=>r(e,t)))}}}mount(){this.removePointerDownListener=Ou(this.node.current,\"pointerdown\",(e=>this.onPointerDown(e)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}},drag:{Feature:class extends Iu{constructor(e){super(e),this.removeGroupControls=Eu,this.removeListeners=Eu,this.controls=new af(e)}mount(){const{dragControls:e}=this.node.getProps();e&&(this.removeGroupControls=e.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||Eu}unmount(){this.removeGroupControls(),this.removeListeners()}},ProjectionNode:pg,MeasureLayout:ff}},gg=/var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;function mg(e,t,n=1){const[r,o]=function(e){const t=gg.exec(e);if(!t)return[,];const[,n,r]=t;return[n,r]}(e);if(!r)return;const i=window.getComputedStyle(t).getPropertyValue(r);if(i){const e=i.trim();return Gh(e)?parseFloat(e):e}return Tc(o)?mg(o,t,n+1):o}const vg=new Set([\"width\",\"height\",\"top\",\"left\",\"right\",\"bottom\",\"x\",\"y\",\"translateX\",\"translateY\"]),bg=e=>vg.has(e),yg=e=>e===Dc||e===jc,wg=(e,t)=>parseFloat(e.split(\", \")[t]),xg=(e,t)=>(n,{transform:r})=>{if(\"none\"===r||!r)return 0;const o=r.match(/^matrix3d\\((.+)\\)$/);if(o)return wg(o[1],t);{const t=r.match(/^matrix\\((.+)\\)$/);return t?wg(t[1],e):0}},kg=new Set([\"x\",\"y\",\"z\"]),Sg=bc.filter((e=>!kg.has(e)));const Eg={width:({x:e},{paddingLeft:t=\"0\",paddingRight:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),height:({y:e},{paddingTop:t=\"0\",paddingBottom:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),top:(e,{top:t})=>parseFloat(t),left:(e,{left:t})=>parseFloat(t),bottom:({y:e},{top:t})=>parseFloat(t)+(e.max-e.min),right:({x:e},{left:t})=>parseFloat(t)+(e.max-e.min),x:xg(4,13),y:xg(5,14)};Eg.translateX=Eg.x,Eg.translateY=Eg.y;const Ag=(e,t,n={},r={})=>{t={...t},r={...r};const o=Object.keys(t).filter(bg);let i=[],a=!1;const s=[];if(o.forEach((o=>{const l=e.getValue(o);if(!e.hasValue(o))return;let c=n[o],u=tp(c);const d=t[o];let h;if(bu(d)){const e=d.length,t=null===d[0]?1:0;c=d[t],u=tp(c);for(let n=t;n<e&&null!==d[n];n++)h?nd(tp(d[n])===h):h=tp(d[n])}else h=tp(d);if(u!==h)if(yg(u)&&yg(h)){const e=l.get();\"string\"==typeof e&&l.set(parseFloat(e)),\"string\"==typeof d?t[o]=parseFloat(d):Array.isArray(d)&&h===jc&&(t[o]=d.map(parseFloat))}else null!=u&&u.transform&&null!=h&&h.transform&&(0===c||0===d)?0===c?l.set(h.transform(c)):t[o]=u.transform(d):(a||(i=function(e){const t=[];return Sg.forEach((n=>{const r=e.getValue(n);void 0!==r&&(t.push([n,r.get()]),r.set(n.startsWith(\"scale\")?1:0))})),t.length&&e.render(),t}(e),a=!0),s.push(o),r[o]=void 0!==r[o]?r[o]:t[o],l.jump(d))})),s.length){const n=s.indexOf(\"height\")>=0?window.pageYOffset:null,o=((e,t,n)=>{const r=t.measureViewportBox(),o=t.current,i=getComputedStyle(o),{display:a}=i,s={};\"none\"===a&&t.setStaticValue(\"display\",e.display||\"block\"),n.forEach((e=>{s[e]=Eg[e](r,i)})),t.render();const l=t.measureViewportBox();return n.forEach((n=>{const r=t.getValue(n);r&&r.jump(s[n]),e[n]=Eg[n](l,i)})),e})(t,e,s);return i.length&&i.forEach((([t,n])=>{e.getValue(t).set(n)})),e.render(),Nl&&null!==n&&window.scrollTo({top:n}),{target:o,transitionEnd:r}}return{target:t,transitionEnd:r}};function Pg(e,t,n,r){return(e=>Object.keys(e).some(bg))(t)?Ag(e,t,n,r):{target:t,transitionEnd:r}}const Tg=(e,t,n,r)=>{const o=function(e,{...t},n){const r=e.current;if(!(r instanceof Element))return{target:t,transitionEnd:n};n&&(n={...n}),e.values.forEach((e=>{const t=e.get();if(!Tc(t))return;const n=mg(t,r);n&&e.set(n)}));for(const e in t){const o=t[e];if(!Tc(o))continue;const i=mg(o,r);i&&(t[e]=i,n||(n={}),void 0===n[e]&&(n[e]=o))}return{target:t,transitionEnd:n}}(e,t,r);return Pg(e,t=o.target,n,r=o.transitionEnd)},Cg={current:null},Rg={current:!1};const Lg=new WeakMap,Dg=Object.keys(lc),$g=Dg.length,Mg=[\"AnimationStart\",\"AnimationComplete\",\"Update\",\"BeforeLayoutMeasure\",\"LayoutMeasure\",\"LayoutAnimationStart\",\"LayoutAnimationComplete\"],Fg=nc.length;class Og{constructor({parent:e,props:t,presenceContext:n,reducedMotionConfig:r,visualState:o},i={}){this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify(\"Update\",this.latestValues),this.render=()=>{this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.scheduleRender=()=>Au.render(this.render,!1,!0);const{latestValues:a,renderState:s}=o;this.latestValues=a,this.baseTarget={...a},this.initialValues=t.initial?{...a}:{},this.renderState=s,this.parent=e,this.props=t,this.presenceContext=n,this.depth=e?e.depth+1:0,this.reducedMotionConfig=r,this.options=i,this.isControllingVariants=rc(t),this.isVariantNode=oc(t),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=!(!e||!e.current);const{willChange:l,...c}=this.scrapeMotionValuesFromProps(t,{});for(const e in c){const t=c[e];void 0!==a[e]&&xc(t)&&(t.set(a[e],!1),Wh(l)&&l.add(e))}}scrapeMotionValuesFromProps(e,t){return{}}mount(e){this.current=e,Lg.set(e,this),this.projection&&!this.projection.instance&&this.projection.mount(e),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach(((e,t)=>this.bindToMotionValue(t,e))),Rg.current||function(){if(Rg.current=!0,Nl)if(window.matchMedia){const e=window.matchMedia(\"(prefers-reduced-motion)\"),t=()=>Cg.current=e.matches;e.addListener(t),t()}else Cg.current=!1}(),this.shouldReduceMotion=\"never\"!==this.reducedMotionConfig&&(\"always\"===this.reducedMotionConfig||Cg.current),this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){Lg.delete(this.current),this.projection&&this.projection.unmount(),Pu(this.notifyUpdate),Pu(this.render),this.valueSubscriptions.forEach((e=>e())),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const e in this.events)this.events[e].clear();for(const e in this.features)this.features[e].unmount();this.current=null}bindToMotionValue(e,t){const n=yc.has(e),r=t.on(\"change\",(t=>{this.latestValues[e]=t,this.props.onUpdate&&Au.update(this.notifyUpdate,!1,!0),n&&this.projection&&(this.projection.isTransformDirty=!0)})),o=t.on(\"renderRequest\",this.scheduleRender);this.valueSubscriptions.set(e,(()=>{r(),o()}))}sortNodePosition(e){return this.current&&this.sortInstanceNodePosition&&this.type===e.type?this.sortInstanceNodePosition(this.current,e.current):0}loadFeatures({children:e,...t},n,r,o){let i,a;for(let e=0;e<$g;e++){const n=Dg[e],{isEnabled:r,Feature:o,ProjectionNode:s,MeasureLayout:l}=lc[n];s&&(i=s),r(t)&&(!this.features[n]&&o&&(this.features[n]=new o(this)),l&&(a=l))}if((\"html\"===this.type||\"svg\"===this.type)&&!this.projection&&i){this.projection=new i(this.latestValues,this.parent&&this.parent.projection);const{layoutId:e,layout:n,drag:r,dragConstraints:a,layoutScroll:s,layoutRoot:l}=t;this.projection.setOptions({layoutId:e,layout:n,alwaysMeasureLayout:!!r||a&&Jl(a),visualElement:this,scheduleRender:()=>this.scheduleRender(),animationType:\"string\"==typeof n?n:\"both\",initialPromotionConfig:o,layoutScroll:s,layoutRoot:l})}return a}updateFeatures(){for(const e in this.features){const t=this.features[e];t.isMounted?t.update():(t.mount(),t.isMounted=!0)}}triggerBuild(){this.build(this.renderState,this.latestValues,this.options,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):_p()}getStaticValue(e){return this.latestValues[e]}setStaticValue(e,t){this.latestValues[e]=t}makeTargetAnimatable(e,t=!0){return this.makeTargetAnimatableFromInstance(e,t)}update(e,t){(e.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=e,this.prevPresenceContext=this.presenceContext,this.presenceContext=t;for(let t=0;t<Mg.length;t++){const n=Mg[t];this.propEventSubscriptions[n]&&(this.propEventSubscriptions[n](),delete this.propEventSubscriptions[n]);const r=e[\"on\"+n];r&&(this.propEventSubscriptions[n]=this.on(n,r))}this.prevMotionValues=function(e,t,n){const{willChange:r}=t;for(const o in t){const i=t[o],a=n[o];if(xc(i))e.addValue(o,i),Wh(r)&&r.add(o);else if(xc(a))e.addValue(o,Jh(i,{owner:e})),Wh(r)&&r.remove(o);else if(a!==i)if(e.hasValue(o)){const t=e.getValue(o);!t.hasAnimated&&t.set(i)}else{const t=e.getStaticValue(o);e.addValue(o,Jh(void 0!==t?t:i,{owner:e}))}}for(const r in n)void 0===t[r]&&e.removeValue(r);return t}(this,this.scrapeMotionValuesFromProps(e,this.prevProps),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(e){return this.props.variants?this.props.variants[e]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}getVariantContext(e=!1){if(e)return this.parent?this.parent.getVariantContext():void 0;if(!this.isControllingVariants){const e=this.parent&&this.parent.getVariantContext()||{};return void 0!==this.props.initial&&(e.initial=this.props.initial),e}const t={};for(let e=0;e<Fg;e++){const n=nc[e],r=this.props[n];(Ql(r)||!1===r)&&(t[n]=r)}return t}addVariantChild(e){const t=this.getClosestVariantNode();if(t)return t.variantChildren&&t.variantChildren.add(e),()=>t.variantChildren.delete(e)}addValue(e,t){t!==this.values.get(e)&&(this.removeValue(e),this.bindToMotionValue(e,t)),this.values.set(e,t),this.latestValues[e]=t.get()}removeValue(e){this.values.delete(e);const t=this.valueSubscriptions.get(e);t&&(t(),this.valueSubscriptions.delete(e)),delete this.latestValues[e],this.removeValueFromRenderState(e,this.renderState)}hasValue(e){return this.values.has(e)}getValue(e,t){if(this.props.values&&this.props.values[e])return this.props.values[e];let n=this.values.get(e);return void 0===n&&void 0!==t&&(n=Jh(t,{owner:this}),this.addValue(e,n)),n}readValue(e){var t;return void 0===this.latestValues[e]&&this.current?null!==(t=this.getBaseTargetFromProps(this.props,e))&&void 0!==t?t:this.readValueFromInstance(this.current,e,this.options):this.latestValues[e]}setBaseTarget(e,t){this.baseTarget[e]=t}getBaseTarget(e){var t;const{initial:n}=this.props,r=\"string\"==typeof n||\"object\"==typeof n?null===(t=mu(this.props,n))||void 0===t?void 0:t[e]:void 0;if(n&&void 0!==r)return r;const o=this.getBaseTargetFromProps(this.props,e);return void 0===o||xc(o)?void 0!==this.initialValues[e]&&void 0===r?void 0:this.baseTarget[e]:o}on(e,t){return this.events[e]||(this.events[e]=new Zh),this.events[e].add(t)}notify(e,...t){this.events[e]&&this.events[e].notify(...t)}}class Vg extends Og{sortInstanceNodePosition(e,t){return 2&e.compareDocumentPosition(t)?1:-1}getBaseTargetFromProps(e,t){return e.style?e.style[t]:void 0}removeValueFromRenderState(e,{vars:t,style:n}){delete t[e],delete n[e]}makeTargetAnimatableFromInstance({transition:e,transitionEnd:t,...n},r){const o=function(e,t,n){const r={};for(const o in e){const e=op(o,t);if(void 0!==e)r[o]=e;else{const e=n.getValue(o);e&&(r[o]=e.get())}}return r}(n,e||{},this);if(r){!function(e,t,n){var r,o;const i=Object.keys(t).filter((t=>!e.hasValue(t))),a=i.length;if(a)for(let l=0;l<a;l++){const a=i[l],c=t[a];let u=null;Array.isArray(c)&&(u=c[0]),null===u&&(u=null!==(o=null!==(r=n[a])&&void 0!==r?r:e.readValue(a))&&void 0!==o?o:t[a]),null!=u&&(\"string\"==typeof u&&(Gh(u)||jh(u))?u=parseFloat(u):(s=u,!np.find(Qh(s))&&Yd.test(c)&&(u=zh(a,c))),e.addValue(a,Jh(u,{owner:e})),void 0===n[a]&&(n[a]=u),null!==u&&e.setBaseTarget(a,u))}var s}(this,n,o);const e=Tg(this,n,o,t);t=e.transitionEnd,n=e.target}return{transition:e,transitionEnd:t,...n}}}class Bg extends Vg{constructor(){super(...arguments),this.type=\"html\"}readValueFromInstance(e,t){if(yc.has(t)){const e=Nh(t);return e&&e.default||0}{const r=(n=e,window.getComputedStyle(n)),o=(Ac(t)?r.getPropertyValue(t):r[t])||0;return\"string\"==typeof o?o.trim():o}var n}measureInstanceViewportBox(e,{transformPagePoint:t}){return nf(e,t)}build(e,t,n,r){Yc(e,t,n,r.transformTemplate)}scrapeMotionValuesFromProps(e,t){return fu(e,t)}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);const{children:e}=this.props;xc(e)&&(this.childSubscription=e.on(\"change\",(e=>{this.current&&(this.current.textContent=`${e}`)})))}renderInstance(e,t,n,r){du(e,t,n,r)}}class _g extends Vg{constructor(){super(...arguments),this.type=\"svg\",this.isSVGTag=!1}getBaseTargetFromProps(e,t){return e[t]}readValueFromInstance(e,t){if(yc.has(t)){const e=Nh(t);return e&&e.default||0}return t=hu.has(t)?t:Il(t),e.getAttribute(t)}measureInstanceViewportBox(){return _p()}scrapeMotionValuesFromProps(e,t){return gu(e,t)}build(e,t,n,r){au(e,t,n,this.isSVGTag,r.transformTemplate)}renderInstance(e,t,n,r){pu(e,t,0,r)}mount(e){this.isSVGTag=lu(e.tagName),super.mount(e)}}const qg=(e,t)=>mc(e)?new _g(t,{enableHardwareAcceleration:!1}):new Bg(t,{enableHardwareAcceleration:!0}),Ng={...mp,...Qu,...fg,...{layout:{ProjectionNode:pg,MeasureLayout:ff}}},zg=fc(((e,t)=>function(e,{forwardMotionProps:t=!1},n,r){return{...mc(e)?Ru:Lu,preloadedFeatures:n,useRender:uu(t),createVisualElement:r,Component:e}}(e,t,Ng,qg)));function jg(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);return zl((()=>(e.current=!0,()=>{e.current=!1})),[]),e}class Ig extends react__WEBPACK_IMPORTED_MODULE_1__.Component{getSnapshotBeforeUpdate(e){const t=this.props.childRef.current;if(t&&e.isPresent&&!this.props.isPresent){const e=this.props.sizeRef.current;e.height=t.offsetHeight||0,e.width=t.offsetWidth||0,e.top=t.offsetTop,e.left=t.offsetLeft}return null}componentDidUpdate(){}render(){return this.props.children}}function Hg({children:e,isPresent:t}){const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({width:0,height:0,top:0,left:0});return (0,react__WEBPACK_IMPORTED_MODULE_1__.useInsertionEffect)((()=>{const{width:e,height:r,top:a,left:s}=i.current;if(t||!o.current||!e||!r)return;o.current.dataset.motionPopId=n;const l=document.createElement(\"style\");return document.head.appendChild(l),l.sheet&&l.sheet.insertRule(`\\n          [data-motion-pop-id=\"${n}\"] {\\n            position: absolute !important;\\n            width: ${e}px !important;\\n            height: ${r}px !important;\\n            top: ${a}px !important;\\n            left: ${s}px !important;\\n          }\\n        `),()=>{document.head.removeChild(l)}}),[t]),react__WEBPACK_IMPORTED_MODULE_1__.createElement(Ig,{isPresent:t,childRef:o,sizeRef:i},react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(e,{ref:o}))}const Ug=({children:e,initial:t,isPresent:n,onExitComplete:o,custom:i,presenceAffectsLayout:s,mode:l})=>{const c=vu(Wg),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({id:u,initial:t,isPresent:n,custom:i,onExitComplete:e=>{c.set(e,!0);for(const e of c.values())if(!e)return;o&&o()},register:e=>(c.set(e,!1),()=>c.delete(e))})),s?void 0:[n]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{c.forEach(((e,t)=>c.set(t,!1)))}),[n]),react__WEBPACK_IMPORTED_MODULE_1__.useEffect((()=>{!n&&!c.size&&o&&o()}),[n]),\"popLayout\"===l&&(e=react__WEBPACK_IMPORTED_MODULE_1__.createElement(Hg,{isPresent:n},e)),react__WEBPACK_IMPORTED_MODULE_1__.createElement(ql.Provider,{value:d},e)};function Wg(){return new Map}const Gg=e=>e.key||\"\";const Yg=({children:e,custom:t,initial:n=!0,onExitComplete:o,exitBeforeEnter:a,presenceAffectsLayout:l=!0,mode:c=\"sync\"})=>{const u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(cc).forceRender||function(){const e=jg(),[t,n]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{e.current&&n(t+1)}),[t]);return[(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>Au.postRender(r)),[r]),t]}()[0],h=jg(),f=function(e){const t=[];return react__WEBPACK_IMPORTED_MODULE_1__.Children.forEach(e,(e=>{(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(e)&&t.push(e)})),t}(e);let g=f;const m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map).current,x=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(g),k=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map).current,S=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!0);if(zl((()=>{S.current=!1,function(e,t){e.forEach((e=>{const n=Gg(e);t.set(n,e)}))}(f,k),x.current=g})),E=()=>{S.current=!0,k.clear(),m.clear()},(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>()=>E()),[]),S.current)return react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment,null,g.map((e=>react__WEBPACK_IMPORTED_MODULE_1__.createElement(Ug,{key:Gg(e),isPresent:!0,initial:!!n&&void 0,presenceAffectsLayout:l,mode:c},e))));var E;g=[...g];const A=x.current.map(Gg),P=f.map(Gg),T=A.length;for(let e=0;e<T;e++){const t=A[e];-1===P.indexOf(t)&&!m.has(t)&&m.set(t,void 0)}return\"wait\"===c&&m.size&&(g=[]),m.forEach(((e,n)=>{if(-1!==P.indexOf(n))return;const i=k.get(n);if(!i)return;const a=A.indexOf(n);let s=e;if(!s){const e=()=>{m.delete(n);const e=Array.from(k.keys()).filter((e=>!P.includes(e)));if(e.forEach((e=>k.delete(e))),x.current=f.filter((t=>{const r=Gg(t);return r===n||e.includes(r)})),!m.size){if(!1===h.current)return;u(),o&&o()}};s=react__WEBPACK_IMPORTED_MODULE_1__.createElement(Ug,{key:Gg(i),isPresent:!1,onExitComplete:e,custom:t,presenceAffectsLayout:l,mode:c},i),m.set(n,s)}g.splice(a,0,s)})),g=g.map((e=>{const t=e.key;return m.has(t)?e:react__WEBPACK_IMPORTED_MODULE_1__.createElement(Ug,{key:Gg(e),isPresent:!0,presenceAffectsLayout:l,mode:c},e)})),react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment,null,m.size?g:g.map((e=>(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(e))))},Xg=function(e){const t=function(e){const t={...e,color:we(void 0)};return{light:Me({scheme:\"light\"},t),dark:Me({scheme:\"dark\"},t)}}(e);return Q({_version:2,avatar:null!=void 0?undefined:N.avatar,button:null!=void 0?undefined:N.button,card:null!=void 0?undefined:N.card,color:ft(t),container:null!=void 0?undefined:N.container,font:null!=void 0?undefined:z,input:null!=void 0?undefined:N.input,layer:null!=void 0?undefined:N.layer,media:null!=void 0?undefined:N.media,radius:null!=void 0?undefined:N.radius,shadow:null!=void 0?undefined:N.shadow,space:null!=void 0?undefined:N.space,style:null!=void 0?undefined:N.style})}(),Zg=[],Kg={},Jg=\"--motion-content-opacity\",Qg={initial:{opacity:.5,[Jg]:0,scale:.97,willChange:\"transform\"},animate:{opacity:[null,1,1],[Jg]:[null,null,1],scale:1},exit:{opacity:[null,null,0],[Jg]:[null,0,0],scale:.97},transition:{duration:.4,type:\"spring\"}};function em(e){return 0===e?0:e/16+\"rem\"}function tm(e,t,n){return((null==t?void 0:t.map(n))||[]).map(((t,n)=>0===n?t:{[`@media screen and (min-width: ${e[n-1]}px)`]:t}))}function nm(e,t,n=Zg){if(!Array.isArray(n))throw new Error(\"the property must be array of numbers\");if(0===n.length)return null;const{media:r,space:o}=X(e);return tm(r,n,(e=>{return n=t,r=em(o[e]),n.reduce(((e,t)=>(e[t]=r,e)),{});var n,r}))}function rm(e,t){const{$size:n,$weight:r}=t,{font:o,media:i}=X(t.theme),{family:a,sizes:s,weights:l}=o[e],c=r&&l[r]||l.regular,u=s[2],d={position:\"relative\",fontFamily:a,fontWeight:c,padding:\"1px 0\",margin:0,\"&:before\":{content:'\"\"',display:\"block\",height:0},\"&:after\":{content:'\"\"',display:\"block\",height:0},\"& > code, & > span\":{display:\"block\"},\"&:not([hidden])\":{display:\"block\"}};if(!n)return rm.warned||(console.warn(\"No size specified for responsive font\",{fontKey:e,$size:n,props:t,base:d}),rm.warned=!0),[d];return[d,...tm(i,n,(e=>function(e){const{ascenderHeight:t,descenderHeight:n,fontSize:r,iconSize:o,letterSpacing:i,lineHeight:a}=e,s=t+n,l=a-s,c=(l-o)/2,u=2*Math.floor(1.125*r/2)+1,d=(l-u)/2;return{fontSize:em(r),lineHeight:`calc(${a} / ${r})`,letterSpacing:em(i),transform:`translateY(${em(n)})`,\"&:before\":{marginTop:`calc(${em(0-s)} - 1px)`},\"&:after\":{marginBottom:\"-1px\"},\"& svg:not([data-sanity-icon])\":{fontSize:`calc(${u} / 16 * 1rem)`,margin:em(d)},\"& [data-sanity-icon]\":{fontSize:`calc(${o} / 16 * 1rem)`,margin:em(c)}}}(s[e]||u)))]}function om(e,t){const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>JSON.stringify(null!=e?e:t)),[t,e]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>function(e,t){return void 0===e?t||Zg:Array.isArray(e)?e:[e]}(e,t)),[n])}var im,am,sm=[],lm=\"ResizeObserver loop completed with undelivered notifications.\";(am=im||(im={})).BORDER_BOX=\"border-box\",am.CONTENT_BOX=\"content-box\",am.DEVICE_PIXEL_CONTENT_BOX=\"device-pixel-content-box\";var cm,um=function(e){return Object.freeze(e)},dm=function(){return function(e,t){this.inlineSize=e,this.blockSize=t,um(this)}}(),hm=function(){function e(e,t,n,r){return this.x=e,this.y=t,this.width=n,this.height=r,this.top=this.y,this.left=this.x,this.bottom=this.top+this.height,this.right=this.left+this.width,um(this)}return e.prototype.toJSON=function(){var e=this;return{x:e.x,y:e.y,top:e.top,right:e.right,bottom:e.bottom,left:e.left,width:e.width,height:e.height}},e.fromRect=function(t){return new e(t.x,t.y,t.width,t.height)},e}(),pm=function(e){return e instanceof SVGElement&&\"getBBox\"in e},fm=function(e){if(pm(e)){var t=e.getBBox(),n=t.width,r=t.height;return!n&&!r}var o=e,i=o.offsetWidth,a=o.offsetHeight;return!(i||a||e.getClientRects().length)},gm=function(e){var t;if(e instanceof Element)return!0;var n=null===(t=null==e?void 0:e.ownerDocument)||void 0===t?void 0:t.defaultView;return!!(n&&e instanceof n.Element)},mm=typeof window<\"u\"?window:{},vm=new WeakMap,bm=/auto|scroll/,ym=/^tb|vertical/,wm=/msie|trident/i.test(mm.navigator&&mm.navigator.userAgent),xm=function(e){return parseFloat(e||\"0\")},km=function(e,t,n){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=!1),new dm((n?t:e)||0,(n?e:t)||0)},Sm=um({devicePixelContentBoxSize:km(),borderBoxSize:km(),contentBoxSize:km(),contentRect:new hm(0,0,0,0)}),Em=function(e,t){if(void 0===t&&(t=!1),vm.has(e)&&!t)return vm.get(e);if(fm(e))return vm.set(e,Sm),Sm;var n=getComputedStyle(e),r=pm(e)&&e.ownerSVGElement&&e.getBBox(),o=!wm&&\"border-box\"===n.boxSizing,i=ym.test(n.writingMode||\"\"),a=!r&&bm.test(n.overflowY||\"\"),s=!r&&bm.test(n.overflowX||\"\"),l=r?0:xm(n.paddingTop),c=r?0:xm(n.paddingRight),u=r?0:xm(n.paddingBottom),d=r?0:xm(n.paddingLeft),h=r?0:xm(n.borderTopWidth),p=r?0:xm(n.borderRightWidth),f=r?0:xm(n.borderBottomWidth),g=d+c,m=l+u,v=(r?0:xm(n.borderLeftWidth))+p,b=h+f,y=s?e.offsetHeight-b-e.clientHeight:0,w=a?e.offsetWidth-v-e.clientWidth:0,x=o?g+v:0,k=o?m+b:0,S=r?r.width:xm(n.width)-x-w,E=r?r.height:xm(n.height)-k-y,A=S+g+w+v,P=E+m+y+b,T=um({devicePixelContentBoxSize:km(Math.round(S*devicePixelRatio),Math.round(E*devicePixelRatio),i),borderBoxSize:km(A,P,i),contentBoxSize:km(S,E,i),contentRect:new hm(d,l,S,E)});return vm.set(e,T),T},Am=function(e,t,n){var r=Em(e,n),o=r.borderBoxSize,i=r.contentBoxSize,a=r.devicePixelContentBoxSize;switch(t){case im.DEVICE_PIXEL_CONTENT_BOX:return a;case im.BORDER_BOX:return o;default:return i}},Pm=function(){return function(e){var t=Em(e);this.target=e,this.contentRect=t.contentRect,this.borderBoxSize=um([t.borderBoxSize]),this.contentBoxSize=um([t.contentBoxSize]),this.devicePixelContentBoxSize=um([t.devicePixelContentBoxSize])}}(),Tm=function(e){if(fm(e))return 1/0;for(var t=0,n=e.parentNode;n;)t+=1,n=n.parentNode;return t},Cm=function(){var e=1/0,t=[];sm.forEach((function(n){if(0!==n.activeTargets.length){var r=[];n.activeTargets.forEach((function(t){var n=new Pm(t.target),o=Tm(t.target);r.push(n),t.lastReportedSize=Am(t.target,t.observedBox),o<e&&(e=o)})),t.push((function(){n.callback.call(n.observer,r,n.observer)})),n.activeTargets.splice(0,n.activeTargets.length)}}));for(var n=0,r=t;n<r.length;n++){(0,r[n])()}return e},Rm=function(e){sm.forEach((function(t){t.activeTargets.splice(0,t.activeTargets.length),t.skippedTargets.splice(0,t.skippedTargets.length),t.observationTargets.forEach((function(n){n.isActive()&&(Tm(n.target)>e?t.activeTargets.push(n):t.skippedTargets.push(n))}))}))},Lm=function(){var e,t=0;for(Rm(t);sm.some((function(e){return e.activeTargets.length>0}));)t=Cm(),Rm(t);return sm.some((function(e){return e.skippedTargets.length>0}))&&(\"function\"==typeof ErrorEvent?e=new ErrorEvent(\"error\",{message:lm}):((e=document.createEvent(\"Event\")).initEvent(\"error\",!1,!1),e.message=lm),window.dispatchEvent(e)),t>0},Dm=[],$m=function(e){if(!cm){var t=0,n=document.createTextNode(\"\");new MutationObserver((function(){return Dm.splice(0).forEach((function(e){return e()}))})).observe(n,{characterData:!0}),cm=function(){n.textContent=\"\".concat(t?t--:t++)}}Dm.push(e),cm()},Mm=0,Fm={attributes:!0,characterData:!0,childList:!0,subtree:!0},Om=[\"resize\",\"load\",\"transitionend\",\"animationend\",\"animationstart\",\"animationiteration\",\"keyup\",\"keydown\",\"mouseup\",\"mousedown\",\"mouseover\",\"mouseout\",\"blur\",\"focus\"],Vm=function(e){return void 0===e&&(e=0),Date.now()+e},Bm=!1,_m=new(function(){function e(){var e=this;this.stopped=!0,this.listener=function(){return e.schedule()}}return e.prototype.run=function(e){var t,n=this;if(void 0===e&&(e=250),!Bm){Bm=!0;var r=Vm(e);t=function(){var t=!1;try{t=Lm()}finally{if(Bm=!1,e=r-Vm(),!Mm)return;t?n.run(1e3):e>0?n.run(e):n.start()}},$m((function(){requestAnimationFrame(t)}))}},e.prototype.schedule=function(){this.stop(),this.run()},e.prototype.observe=function(){var e=this,t=function(){return e.observer&&e.observer.observe(document.body,Fm)};document.body?t():mm.addEventListener(\"DOMContentLoaded\",t)},e.prototype.start=function(){var e=this;this.stopped&&(this.stopped=!1,this.observer=new MutationObserver(this.listener),this.observe(),Om.forEach((function(t){return mm.addEventListener(t,e.listener,!0)})))},e.prototype.stop=function(){var e=this;this.stopped||(this.observer&&this.observer.disconnect(),Om.forEach((function(t){return mm.removeEventListener(t,e.listener,!0)})),this.stopped=!0)},e}()),qm=function(e){!Mm&&e>0&&_m.start(),!(Mm+=e)&&_m.stop()},Nm=function(){function e(e,t){this.target=e,this.observedBox=t||im.CONTENT_BOX,this.lastReportedSize={inlineSize:0,blockSize:0}}return e.prototype.isActive=function(){var e,t=Am(this.target,this.observedBox,!0);return e=this.target,!pm(e)&&!function(e){switch(e.tagName){case\"INPUT\":if(\"image\"!==e.type)break;case\"VIDEO\":case\"AUDIO\":case\"EMBED\":case\"OBJECT\":case\"CANVAS\":case\"IFRAME\":case\"IMG\":return!0}return!1}(e)&&\"inline\"===getComputedStyle(e).display&&(this.lastReportedSize=t),this.lastReportedSize.inlineSize!==t.inlineSize||this.lastReportedSize.blockSize!==t.blockSize},e}(),zm=function(){return function(e,t){this.activeTargets=[],this.skippedTargets=[],this.observationTargets=[],this.observer=e,this.callback=t}}(),jm=new WeakMap,Im=function(e,t){for(var n=0;n<e.length;n+=1)if(e[n].target===t)return n;return-1},Hm=function(){function e(){}return e.connect=function(e,t){var n=new zm(e,t);jm.set(e,n)},e.observe=function(e,t,n){var r=jm.get(e),o=0===r.observationTargets.length;Im(r.observationTargets,t)<0&&(o&&sm.push(r),r.observationTargets.push(new Nm(t,n&&n.box)),qm(1),_m.schedule())},e.unobserve=function(e,t){var n=jm.get(e),r=Im(n.observationTargets,t),o=1===n.observationTargets.length;r>=0&&(o&&sm.splice(sm.indexOf(n),1),n.observationTargets.splice(r,1),qm(-1))},e.disconnect=function(e){var t=this,n=jm.get(e);n.observationTargets.slice().forEach((function(n){return t.unobserve(e,n.target)})),n.activeTargets.splice(0,n.activeTargets.length)},e}(),Um=function(){function e(e){if(0===arguments.length)throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");if(\"function\"!=typeof e)throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");Hm.connect(this,e)}return e.prototype.observe=function(e,t){if(0===arguments.length)throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");if(!gm(e))throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");Hm.observe(this,e,t)},e.prototype.unobserve=function(e){if(0===arguments.length)throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");if(!gm(e))throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");Hm.unobserve(this,e)},e.prototype.disconnect=function(){Hm.disconnect(this)},e.toString=function(){return\"function ResizeObserver () { [polyfill code] }\"},e}();const Wm=typeof document<\"u\"&&typeof window<\"u\"&&window.ResizeObserver?window.ResizeObserver:Um,Gm=function(){const e=new WeakMap,t=new WeakMap;return{subscribe(n,r){const o=t.get(n)||[];let i=e.get(n);return t.has(n)||(t.set(n,o),i={subscribe(e,t){const n=new Wm((([e])=>{t({_contentRect:e.contentRect,border:{width:e.borderBoxSize[0].inlineSize,height:e.borderBoxSize[0].blockSize},content:{width:e.contentRect.width,height:e.contentRect.height}})}));return n.observe(e),()=>{n.unobserve(e),n.disconnect()}}}.subscribe(n,(e=>{for(const t of o)t(e)}))),o.push(r),()=>{const e=o.indexOf(r);e>-1&&o.splice(e,1),0===o.length&&i&&i()}}}}();const Ym=function(){if(typeof globalThis<\"u\")return globalThis;if(typeof window<\"u\")return window;if(typeof self<\"u\")return self;if(typeof global<\"u\")return global;throw new Error(\"@sanity/ui: could not locate global scope\")}();function Xm(e,t){return typeof document>\"u\"?(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(t):(Ym[e]=Ym[e]||(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(t),Ym[e])}const Zm=Xm(Symbol.for(\"@sanity/ui/context/theme\"),null);function Km(t){const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Zm),{children:r,scheme:o=(null==n?void 0:n.scheme)||\"light\",theme:i=(null==n?void 0:n.theme)||null,tone:l=(null==n?void 0:n.tone)||\"default\"}=t,c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>i?{version:0,theme:i,scheme:o,tone:l}:null),[i,o,l]),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>i?Dt(i,o,l):null),[o,i,l]);return u?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Zm.Provider,{value:c,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Eo,{theme:u,children:r})}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pre\",{children:'ThemeProvider: no \"theme\" property provided'})}function Jm(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Zm);if(!e)throw new Error(\"useRootTheme(): missing context value\");return e}function Qm(t){const{children:n,scheme:r,tone:o}=t,i=Jm();return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Km,{scheme:r||i.scheme,theme:i.theme,tone:o,children:n})}function ev(){return X(function(){var e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(So);if(!e)throw Ir(18);return e}())}const tv=new WeakMap;function nv(e,t){return 0===t?`screen and (max-width: ${e[t]-1}px)`:t===e.length?`screen and (min-width: ${e[t-1]}px)`:`screen and (min-width: ${e[t-1]}px) and (max-width: ${e[t]-1}px)`}function rv(){return 0}function ov(){const{media:e}=ev();let t=tv.get(e);return t||(t=function(e){const t=e.length;let n;const r=()=>{if(!n){n=[];for(let r=t;r>-1;r-=1){const t=nv(e,r);n.push({index:r,mq:window.matchMedia(t)})}}return n};return{getSnapshot:()=>{for(const{index:e,mq:t}of r())if(t.matches)return e;return 0},subscribe:e=>{const t=[];for(const{mq:n}of r()){const r=()=>{n.matches&&e()};n.addEventListener(\"change\",r),t.push((()=>n.removeEventListener(\"change\",r)))}return()=>{for(const e of t)e()}}}}(e),tv.set(e,t)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(t.subscribe,t.getSnapshot,rv)}let iv;function av(){return iv||(iv=window.matchMedia(\"(prefers-reduced-motion: reduce)\")),iv}function sv(e){const t=av();return t.addEventListener(\"change\",e),()=>t.removeEventListener(\"change\",e)}function lv(){return av().matches}function cv(){return!1}function uv(e){var t,n;const{card:r,media:o}=X(e.theme),i=`${null!=(n=null==(t=r.border)?void 0:t.width)?n:1}px solid var(--card-border-color)`;return tm(o,e.$border,(e=>e?{\"&&\":{border:i}}:{\"&&\":{border:0}}))}function dv(e){var t,n;const{card:r,media:o}=X(e.theme),i=`${null!=(n=null==(t=r.border)?void 0:t.width)?n:1}px solid var(--card-border-color)`;return tm(o,e.$borderTop,(e=>e?{\"&&\":{borderTop:i}}:{\"&&\":{borderTop:0}}))}function hv(e){var t,n;const{card:r,media:o}=X(e.theme),i=`${null!=(n=null==(t=r.border)?void 0:t.width)?n:1}px solid var(--card-border-color)`;return tm(o,e.$borderRight,(e=>e?{\"&&\":{borderRight:i}}:{\"&&\":{borderRight:0}}))}function pv(e){var t,n;const{card:r,media:o}=X(e.theme),i=`${null!=(n=null==(t=r.border)?void 0:t.width)?n:1}px solid var(--card-border-color)`;return tm(o,e.$borderBottom,(e=>e?{\"&&\":{borderBottom:i}}:{\"&&\":{borderBottom:0}}))}function fv(e){var t,n;const{card:r,media:o}=X(e.theme),i=`${null!=(n=null==(t=r.border)?void 0:t.width)?n:1}px solid var(--card-border-color)`;return tm(o,e.$borderLeft,(e=>e?{\"&&\":{borderLeft:i}}:{\"&&\":{borderLeft:0}}))}const gv={'&[data-as=\"ul\"],&[data-as=\"ol\"]':{listStyle:\"none\"}},mv={content:\"content-box\",border:\"border-box\"},vv={stretch:\"stretch\",fill:\"100%\"};function bv(e){const{media:t}=X(e.theme);return tm(t,e.$display,(e=>({\"&:not([hidden])\":{display:e}})))}function yv(e){const{media:t}=X(e.theme);return tm(t,e.$sizing,(e=>({boxSizing:mv[e]})))}function wv(e){const{media:t}=X(e.theme);return tm(t,e.$height,(e=>({height:vv[e]})))}function xv(e){const{media:t}=X(e.theme);return tm(t,e.$overflow,(e=>({overflow:e})))}const kv={\"&&:not([hidden])\":{display:\"flex\"}};function Sv(e){const{media:t}=X(e.theme);return tm(t,e.$align,(e=>({alignItems:e})))}function Ev(e){const{media:t,space:n}=X(e.theme);return tm(t,e.$gap,(e=>({gap:e?em(n[e]):void 0})))}function Av(e){const{media:t}=X(e.theme);return tm(t,e.$wrap,(e=>({flexWrap:e})))}function Pv(e){const{media:t}=X(e.theme);return tm(t,e.$justify,(e=>({justifyContent:e})))}function Tv(e){const{media:t}=X(e.theme);return tm(t,e.$direction,(e=>({flexDirection:e})))}const Cv={minWidth:0,minHeight:0};function Rv(){return[Cv,Lv]}function Lv(e){const{media:t}=X(e.theme);return e.$flex?tm(t,e.$flex,(e=>({flex:e}))):Zg}function Dv(e){return`inset 0 0 0 ${e.width}px ${e.color}`}function $v(e){const{base:t,border:n,focusRing:r}=e,o=r.offset+r.width,i=0-r.offset,a=t?t.bg:\"var(--card-bg-color)\";return[i>0&&`inset 0 0 0 ${i}px var(--card-focus-ring-color)`,n&&Dv(n),i<0&&`0 0 0 ${0-i}px ${a}`,o>0&&`0 0 0 ${o}px var(--card-focus-ring-color)`].filter(Boolean).join(\",\")}const Mv={auto:\"auto\",full:\"1 / -1\"},Fv={auto:\"auto\",full:\"1 / -1\"};function Ov(e){const{media:t}=X(e.theme);return tm(t,e.$row,(e=>\"number\"==typeof e?{gridRow:`span ${e} / span ${e}`}:{gridRow:Mv[e]}))}function Vv(e){const{media:t}=X(e.theme);return tm(t,e.$rowStart,(e=>({gridRowStart:e})))}function Bv(e){const{media:t}=X(e.theme);return tm(t,e.$rowEnd,(e=>({gridRowEnd:e})))}function _v(e){const{media:t}=X(e.theme);return tm(t,e.$column,(e=>\"number\"==typeof e?{gridColumn:`span ${e} / span ${e}`}:{gridColumn:Fv[e]}))}function qv(e){const{media:t}=X(e.theme);return tm(t,e.$columnStart,(e=>({gridColumnStart:e})))}function Nv(e){const{media:t}=X(e.theme);return tm(t,e.$columnEnd,(e=>({gridColumnEnd:e})))}function zv(e,t){return`${e.map(em).join(\" \")} ${t}`}Ro`\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  align-items: center;\n`,Ro`\n  white-space: nowrap;\n\n  & > div {\n    vertical-align: top;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  }\n`;const jv=$o.div((function(){return gv}),Rv,(function(){return[yv,wv,xv,bv]}),(function(){return[Ov,Vv,Bv,_v,qv,Nv]}),(function(e){const{theme:t}=e;return[nm(t,[\"margin\"],e.$margin),nm(t,[\"marginLeft\",\"marginRight\"],e.$marginX),nm(t,[\"marginTop\",\"marginBottom\"],e.$marginY),nm(t,[\"marginTop\"],e.$marginTop),nm(t,[\"marginRight\"],e.$marginRight),nm(t,[\"marginBottom\"],e.$marginBottom),nm(t,[\"marginLeft\"],e.$marginLeft)].filter(Boolean)}),(function(e){const{theme:t}=e;return[nm(t,[\"padding\"],e.$padding),nm(t,[\"paddingLeft\",\"paddingRight\"],e.$paddingX),nm(t,[\"paddingTop\",\"paddingBottom\"],e.$paddingY),nm(t,[\"paddingTop\"],e.$paddingTop),nm(t,[\"paddingRight\"],e.$paddingRight),nm(t,[\"paddingBottom\"],e.$paddingBottom),nm(t,[\"paddingLeft\"],e.$paddingLeft)].filter(Boolean)})),Iv=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{as:r=\"div\",column:o,columnStart:i,columnEnd:a,display:s=\"block\",flex:l,height:c,margin:u=0,marginX:d,marginY:h,marginTop:p,marginRight:f,marginBottom:g,marginLeft:m,overflow:v,padding:b=0,paddingX:y,paddingY:w,paddingTop:x,paddingRight:k,paddingBottom:S,paddingLeft:E,row:A,rowStart:P,rowEnd:T,sizing:C,...R}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(jv,{\"data-as\":\"string\"==typeof r?r:void 0,\"data-ui\":\"Box\",...R,$column:om(o),$columnStart:om(i),$columnEnd:om(a),$display:om(s),$flex:om(l),$height:om(c),$margin:om(u),$marginX:om(d),$marginY:om(h),$marginTop:om(p),$marginRight:om(f),$marginBottom:om(g),$marginLeft:om(m),$overflow:om(v),$padding:om(b),$paddingX:om(y),$paddingY:om(w),$paddingTop:om(x),$paddingRight:om(k),$paddingBottom:om(S),$paddingLeft:om(E),$row:om(A),$rowStart:om(P),$rowEnd:om(T),$sizing:om(C),as:r,ref:n,children:t.children})}));const Hv=$o.div((function(e){return rm(\"text\",e)}),(function(e){const{media:t}=X(e.theme);return tm(t,e.$align,(e=>({textAlign:e})))}),(function(e){const{$accent:t,$muted:n}=e,{font:r}=X(e.theme);return Ro`\n    color: var(--card-fg-color);\n\n    ${t&&Ro`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${n&&Ro`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${r.code.family};\n      border-radius: 1px;\n      background-color: var(--card-code-bg-color);\n      color: var(--card-code-fg-color);\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n      color: var(--card-link-color);\n      outline: none;\n\n      @media (hover: hover) {\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      &:focus {\n        box-shadow:\n          0 0 0 1px var(--card-bg-color),\n          0 0 0 3px var(--card-focus-ring-color);\n      }\n\n      &:focus:not(:focus-visible) {\n        box-shadow: none;\n      }\n    }\n\n    & strong {\n      font-weight: ${r.text.weights.bold};\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n      color: var(--card-icon-color);\n\n      & path {\n        vector-effect: non-scaling-stroke !important;\n      }\n    }\n  `})),Uv=$o.span`\n  display: block;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  overflow: clip;\n`,Wv=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{accent:r=!1,align:o,children:i,muted:a=!1,size:s=2,textOverflow:l,weight:c,...u}=t;let d=i;return\"ellipsis\"===l&&(d=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Uv,{children:d})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Hv,{\"data-ui\":\"Text\",...u,$accent:r,$align:om(o),$muted:a,ref:n,$size:om(s),$weight:c,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:d})})})),Gv=$o(Iv)(Rv,(function(){return[kv,Sv,Ev,Av,Pv,Tv]})),Yv=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{align:r,as:o,direction:i=\"row\",gap:a,justify:s,wrap:l,...c}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Gv,{\"data-ui\":\"Flex\",...c,$align:om(r),$direction:om(i),$gap:om(a),$justify:om(s),$wrap:om(l),forwardedAs:o,ref:n})}));function Xv(e,t,n=!1){return{\"--card-backdrop-color\":e.backdrop,\"--card-focus-ring-color\":e.focusRing,\"--card-shadow-outline-color\":e.shadow.outline,\"--card-shadow-umbra-color\":e.shadow.umbra,\"--card-shadow-penumbra-color\":e.shadow.penumbra,\"--card-shadow-ambient-color\":e.shadow.ambient,\"--card-accent-fg-color\":t.accent.fg,\"--card-avatar-gray-bg-color\":t.avatar.gray.bg,\"--card-avatar-gray-fg-color\":t.avatar.gray.fg,\"--card-avatar-blue-bg-color\":t.avatar.blue.bg,\"--card-avatar-blue-fg-color\":t.avatar.blue.fg,\"--card-avatar-purple-bg-color\":t.avatar.purple.bg,\"--card-avatar-purple-fg-color\":t.avatar.purple.fg,\"--card-avatar-magenta-bg-color\":t.avatar.magenta.bg,\"--card-avatar-magenta-fg-color\":t.avatar.magenta.fg,\"--card-avatar-red-bg-color\":t.avatar.red.bg,\"--card-avatar-red-fg-color\":t.avatar.red.fg,\"--card-avatar-orange-bg-color\":t.avatar.orange.bg,\"--card-avatar-orange-fg-color\":t.avatar.orange.fg,\"--card-avatar-yellow-bg-color\":t.avatar.yellow.bg,\"--card-avatar-yellow-fg-color\":t.avatar.yellow.fg,\"--card-avatar-green-bg-color\":t.avatar.green.bg,\"--card-avatar-green-fg-color\":t.avatar.green.fg,\"--card-avatar-cyan-bg-color\":t.avatar.cyan.bg,\"--card-avatar-cyan-fg-color\":t.avatar.cyan.fg,\"--card-bg-color\":t.bg,\"--card-bg-image\":n?`repeating-conic-gradient(${t.bg} 0% 25%, ${t.muted.bg} 0% 50%)`:void 0,\"--card-border-color\":t.border,\"--card-badge-default-bg-color\":t.badge.default.bg,\"--card-badge-default-dot-color\":t.badge.default.dot,\"--card-badge-default-fg-color\":t.badge.default.fg,\"--card-badge-default-icon-color\":t.badge.default.icon,\"--card-badge-primary-bg-color\":t.badge.primary.bg,\"--card-badge-primary-dot-color\":t.badge.primary.dot,\"--card-badge-primary-fg-color\":t.badge.primary.fg,\"--card-badge-primary-icon-color\":t.badge.primary.icon,\"--card-badge-positive-bg-color\":t.badge.positive.bg,\"--card-badge-positive-dot-color\":t.badge.positive.dot,\"--card-badge-positive-fg-color\":t.badge.positive.fg,\"--card-badge-positive-icon-color\":t.badge.positive.icon,\"--card-badge-caution-bg-color\":t.badge.caution.bg,\"--card-badge-caution-dot-color\":t.badge.caution.dot,\"--card-badge-caution-fg-color\":t.badge.caution.fg,\"--card-badge-caution-icon-color\":t.badge.caution.icon,\"--card-badge-critical-bg-color\":t.badge.critical.bg,\"--card-badge-critical-dot-color\":t.badge.critical.dot,\"--card-badge-critical-fg-color\":t.badge.critical.fg,\"--card-badge-critical-icon-color\":t.badge.critical.icon,\"--card-code-bg-color\":t.code.bg,\"--card-code-fg-color\":t.code.fg,\"--card-fg-color\":t.fg,\"--card-icon-color\":t.icon,\"--card-kbd-bg-color\":t.kbd.bg,\"--card-kbd-border-color\":t.kbd.border,\"--card-kbd-fg-color\":t.kbd.fg,\"--card-link-fg-color\":t.link.fg,\"--card-muted-bg-color\":t.muted.bg,\"--card-muted-fg-color\":t.muted.fg,\"--card-skeleton-color-from\":t.skeleton.from,\"--card-skeleton-color-to\":t.skeleton.to,\"--card-bg2-color\":t.muted.bg,\"--card-link-color\":t.link.fg,\"--card-hairline-soft-color\":t.border,\"--card-hairline-hard-color\":t.border}}function Zv(e){const{$checkered:t}=e,{space:n}=X(e.theme);return Ro`\n    ${t&&Ro`\n      background-size: ${n[3]}px ${n[3]}px;\n      background-position: 50% 50%;\n      background-image: var(--card-bg-image);\n    `}\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      outline: none;\n      text-decoration: none;\n    }\n\n    /* &:is(pre) */\n    &[data-as='pre'] {\n      font: inherit;\n    }\n  `}function Kv(e){var t;const{$checkered:n,$focusRing:r,$muted:o}=e,{card:i,color:a,style:s}=X(e.theme),l={width:i.border.width,color:\"var(--card-border-color)\"};return Ro`\n    color-scheme: ${a._dark?\"dark\":\"light\"};\n\n    ${Xv(a,a,n)}\n\n    background-color: ${o?\"var(--card-muted-bg-color)\":\"var(--card-bg-color)\"};\n    color: var(--card-fg-color);\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      --card-focus-ring-box-shadow: none;\n\n      cursor: default;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &:disabled {\n        ${Xv(a,a.selectable.default.disabled,n)}\n      }\n\n      &:not(:disabled) {\n        &[data-pressed] {\n          ${Xv(a,a.selectable.default.pressed,n)}\n        }\n\n        &[data-selected] {\n          ${Xv(a,a.selectable.default.selected,n)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${Xv(a,a.selectable.default.hovered,n)}\n            }\n\n            &:active {\n              ${Xv(a,a.selectable.default.pressed,n)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${r?$v({base:a,border:l,focusRing:i.focusRing}):void 0};\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      cursor: pointer;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &[data-disabled] {\n        ${Xv(a,a.selectable.default.disabled,n)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${Xv(a,a.selectable.default.pressed,n)}\n        }\n\n        &[data-selected] {\n          ${Xv(a,a.selectable.default.selected,n)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${Xv(a,a.selectable.default.hovered,n)}\n            }\n\n            &:active {\n              ${Xv(a,a.selectable.default.pressed,n)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${r?$v({base:a,border:l,focusRing:i.focusRing}):void 0};\n        }\n      }\n    }\n\n    ${null==(t=null==s?void 0:s.card)?void 0:t.root}\n  `}Mo`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;const Jv=$o(Iv)((function(){return[uv,dv,hv,pv,fv]}),(function(e){const{media:t,radius:n}=X(e.theme);return tm(t,e.$radius,(e=>{let t=0;return\"number\"==typeof e&&(t=em(n[e])),\"full\"===e&&(t=\"9999px\"),{borderRadius:t}}))}),(function(e){const{card:t,media:n,shadow:r}=X(e.theme);return tm(n,e.$shadow,(e=>function(e,t=1){return e?{boxShadow:`0 0 0 ${em(t)} var(--card-shadow-outline-color), ${zv(e.umbra,\"var(--card-shadow-umbra-color)\")}, ${zv(e.penumbra,\"var(--card-shadow-penumbra-color)\")}, ${zv(e.ambient,\"var(--card-shadow-ambient-color)\")}`}:Kg}(r[e],t.shadow.outline)))}),(function(e){return[Zv(e),Kv(e)]})),Qv=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{__unstable_checkered:r=!1,__unstable_focusRing:o=!1,as:i,border:a,borderTop:s,borderRight:l,borderBottom:c,borderLeft:u,muted:d,pressed:h,radius:p=0,scheme:f,selected:g,shadow:m,tone:v=\"default\",...b}=t,y=Kt.isValidElementType(i)?i:\"div\",w=Jm(),x=\"inherit\"===v?w.tone:v;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Qm,{scheme:f,tone:x,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Jv,{\"data-as\":\"string\"==typeof y?y:void 0,\"data-scheme\":w.scheme,\"data-ui\":\"Card\",\"data-tone\":x,...b,$border:om(a),$borderTop:om(s),$borderRight:om(l),$borderBottom:om(c),$borderLeft:om(u),$checkered:r,$focusRing:o,$muted:d,$radius:om(p),$shadow:om(m),$tone:x,\"data-checkered\":r?\"\":void 0,\"data-pressed\":h?\"\":void 0,\"data-selected\":g?\"\":void 0,forwardedAs:y,ref:n,selected:g})})})),eb={name:\"@sanity/ui/origin\",fn({middlewareData:e,placement:t,rects:n}){var r,o;const[i]=t.split(\"-\"),a=n.floating.width,s=n.floating.height,l=(null==(r=e.shift)?void 0:r.x)||0,c=(null==(o=e.shift)?void 0:o.y)||0;if(a<=0||s<=0)return{};const u=[\"bottom\",\"top\"].includes(i),{originX:d,originY:h}=u?{originX:tb(.5-l/a,0,1),originY:\"bottom\"===i?0:1}:{originX:\"left\"===i?1:0,originY:tb(.5-c/s,0,1)};return{data:{originX:d,originY:h}}}};function tb(e,t,n){return Math.min(Math.max(e,t),n)}function nb(e,t,n){const r=t.x-e.x,o=t.y-e.y,i=Math.sqrt(r*r+o*o);return rb(e,t,Math.min(1,n/i))}function rb(e,t,n){return{x:e.x+(t.x-e.x)*n,y:e.y+(t.y-e.y)*n}}const ob=$o.div((({$w:e})=>Ro`\n    position: absolute;\n    width: ${e}px;\n    height: ${e}px;\n\n    :empty + & {\n      display: none;\n    }\n\n    & > svg {\n      display: block;\n      line-height: 0;\n      transform-origin: ${e/2}px ${e/2}px;\n    }\n\n    [data-placement^='top'] > & {\n      bottom: -${e}px;\n\n      & > svg {\n        transform: rotate(0);\n      }\n    }\n\n    [data-placement^='right'] > & {\n      left: -${e}px;\n\n      & > svg {\n        transform: rotate(90deg);\n      }\n    }\n\n    [data-placement^='left'] > & {\n      right: -${e}px;\n\n      & > svg {\n        transform: rotate(-90deg);\n      }\n    }\n\n    [data-placement^='bottom'] > & {\n      top: -${e}px;\n\n      & > svg {\n        transform: rotate(180deg);\n      }\n    }\n  `)),ib=$o.path`\n  stroke: var(--card-shadow-outline-color);\n`,ab=$o.path`\n  fill: var(--card-bg-color);\n`,sb=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{width:o,height:i,radius:a=0,...s}=n,{card:l}=ev(),c=l.shadow.outline,u=function(e){const t=e.length,n=[];for(let r=0;r<t;r+=1){const t=e[r],o=e[r-1],i=e[r+1];if(o&&t.radius){const e=nb(t,o,t.radius),r=nb(t,i,t.radius),a=rb(e,t,.5),s=rb(t,r,.5);n.push({type:\"point\",...e}),n.push({type:\"curve\",curveEnd:r,startControl:a,endControl:s})}else n.push({type:\"point\",...t})}return n}([{x:0,y:0},{x:a,y:0,radius:a},{x:o/2,y:i-1,radius:a},{x:o-a,y:0,radius:a},{x:o,y:0}]),d=function(e){return e.map(((e,t)=>\"point\"===e.type?`${0===t?\"M\":\"L\"} ${e.x} ${e.y}`:\"curve\"===e.type?`C ${e.startControl.x} ${e.startControl.y} ${e.endControl.x} ${e.endControl.y} ${e.curveEnd.x} ${e.curveEnd.y}`:\"\")).join(\" \")}(u),h=`${d}`,p=`${d} M ${o} -1 M 0 -1 Z`;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ob,{...s,$w:o,ref:r,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{width:o,height:o,viewBox:`0 0 ${o} ${o}`,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"mask\",{id:\"stroke-mask\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:0,y:c,width:o,height:o,fill:\"white\"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ib,{d:h,mask:\"url(#stroke-mask)\",strokeWidth:2*c}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ab,{d:p})]})})})),lb=Xm(Symbol.for(\"@sanity/ui/context/boundaryElement\"),null);function cb(e){return!(!e||\"object\"!=typeof e||Array.isArray(e))}const ub={version:0,element:null};function db({children:e,condition:t,wrapper:n}){return t?n(e):e}function hb(e){if(!cb(e)||0!==e.version)throw new Error(\"the context value is not compatible\");if(!e)throw new Error(\"components using `useLayer()` should be wrapped in a <LayerProvider>.\");if(0===e.version)return e;throw new Error(\"could not get layer context\")}const pb=Xm(Symbol.for(\"@sanity/ui/context/layer\"),null);function fb(e){return e instanceof Node&&e.nodeType===Node.ELEMENT_NODE}function gb(t){var n;const{children:r,zOffset:o=0}=t,l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(pb),c=l&&hb(l),u=null==c?void 0:c.registerChild,d=(null!=(n=null==c?void 0:c.level)?n:0)+1,h=om(o),f=h.length-1,g=Math.min(ov(),f),m=c?c.zIndex+h[g]:h[g],[,b]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}),[y,w]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),x=0===y,k=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=null==u?void 0:u(e);return void 0!==e?b((t=>{var n;const r=null!=(n=t[e])?n:0,o={...t,[e]:r+1};return w(Object.keys(o).length),o})):w((e=>e+1)),()=>{void 0!==e?b((t=>{const n={...t};return 1===n[e]?(delete n[e],w(Object.keys(n).length)):n[e]-=1,n})):w((e=>e-1)),null==t||t()}}),[u]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>null==u?void 0:u(d)),[d,u]);const S=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({version:0,isTopLayer:x,level:d,registerChild:k,size:y,zIndex:m})),[x,d,k,y,m]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(pb.Provider,{value:S,children:r})}const mb=Symbol.for(\"@sanity/ui/context/portal\"),vb=Symbol.for(\"@sanity/ui/context/portal/element\");Ym[vb]=null;const bb=Xm(mb,{version:0,boundaryElement:null,get element(){return typeof document>\"u\"?null:(Ym[vb]||(Ym[vb]=document.createElement(\"div\"),Ym[vb].setAttribute(\"data-portal\",\"\"),document.body.appendChild(Ym[vb])),Ym[vb])}});function yb(e){var t;const{children:n,__unstable_name:r}=e,o=function(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(bb);if(!e)throw new Error(\"usePortal(): missing context value\");if(!cb(e)||0!==e.version)throw new Error(\"usePortal(): the context value is not compatible\");return e}(),i=(r?o.elements&&o.elements[r]:o.element)||(null==(t=o.elements)?void 0:t.default);return i?(0,react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal)(n,i):null}const wb=[0,0,0,0],xb={top:[\"bottom\",\"left\",\"right\"],\"top-start\":[\"bottom-start\",\"left-start\",\"right-start\"],\"top-end\":[\"bottom-end\",\"left-end\",\"right-end\"],bottom:[\"top\",\"left\",\"right\"],\"bottom-start\":[\"top-start\",\"left-start\",\"right-start\"],\"bottom-end\":[\"top-end\",\"left-end\",\"right-end\"],left:[\"right\",\"top\",\"bottom\"],\"left-start\":[\"right-start\",\"top-start\",\"bottom-start\"],\"left-end\":[\"right-end\",\"top-end\",\"bottom-end\"],right:[\"left\",\"top\",\"bottom\"],\"right-start\":[\"left-start\",\"top-start\",\"bottom-start\"],\"right-end\":[\"left-end\",\"top-end\",\"bottom-end\"]};const kb=$o(zg(Qv))`\n  &:not([hidden]) {\n    display: flex;\n  }\n  flex-direction: column;\n  width: max-content;\n  min-width: min-content;\n  & > * {\n    opacity: var(${Jg}, 1);\n    will-change: opacity;\n  }\n`,Sb=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{__unstable_margins:o,animate:i,arrow:l,arrowRef:c,arrowX:u,arrowY:d,children:h,padding:p,placement:f,originX:g,originY:m,overflow:v,radius:b,scheme:y,shadow:w,strategy:x,style:k,tone:S,width:E,x:A,y:P,...T}=n,{zIndex:C}=function(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(pb);if(!e)throw new Error(\"useLayer(): missing context value\");try{return hb(e)}catch(e){throw e instanceof Error?new Error(`useLayer(): ${e.message}`):new Error(`useLayer(): ${e}`)}}(),R=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>o||wb),[o]),L=(null!=A?A:0)+R[3],D=(null!=P?P:0)+R[0],$=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({left:L,originX:g,originY:m,position:x,top:D,width:E,zIndex:C,willChange:i?\"transform\":void 0,...k})),[i,g,m,x,k,E,L,D,C]),M=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({left:null!==u?u:void 0,top:null!==d?d:void 0,right:void 0,bottom:void 0})),[u,d]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(kb,{\"data-ui\":\"Popover\",...T,\"data-placement\":f,radius:b,ref:r,scheme:y,shadow:w,sizing:\"border\",style:$,tone:S,...i?Qg:{},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Yv,{\"data-ui\":\"Popover__wrapper\",direction:\"column\",flex:1,overflow:v,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Yv,{direction:\"column\",flex:1,padding:p,children:h})}),l&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sb,{ref:c,style:M,width:19,height:8,radius:2})]})})));Sb.displayName=\"PopoverCard\";(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(o,l){var c,u,h,f,g,m,y,w,x,E;const{container:A,layer:P}=ev(),T=function(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(lb);if(e&&(!cb(e)||0!==e.version))throw new Error(\"useBoundaryElement(): the context value is not compatible\");return e||ub}(),{__unstable_margins:C=wb,animate:L=!1,arrow:D=!1,boundaryElement:$=T.element,children:M,constrainSize:F=!1,content:O,disabled:V,fallbackPlacements:B=(null!=(u=o.fallbackPlacements)?u:xb[null!=(c=o.placement)?c:\"bottom\"]),matchReferenceWidth:_,floatingBoundary:q=(null!=(h=o.boundaryElement)?h:T.element),onActivate:N,open:z,overflow:j=\"hidden\",padding:I,placement:H=\"bottom\",portal:U,preventOverflow:W=!0,radius:G=3,referenceBoundary:Y=(null!=(f=o.boundaryElement)?f:T.element),referenceElement:X,scheme:Z,shadow:K=3,tone:J=\"inherit\",width:Q=\"auto\",zOffset:ee=P.popover.zOffset,updateRef:te,...ne}=o,re=!(0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(sv,lv,cv)&&L,oe=null==(g=function(e){const[t,n]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(e)return Gm.subscribe(e,n)}),[e]),t}($))?void 0:g.border,ie=om(I),ae=om(G),se=om(K),le=om(Q),ce=om(ee),ue=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),de=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),he=\"viewport\";(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(l,(()=>ue.current));const pe=ov(),fe=F||W?null==oe?void 0:oe.width:void 0,ge=function(e){const{container:t,mediaIndex:n,width:r}=e,o=r[n],i=void 0===o?r[r.length-1]:o;return\"number\"==typeof i?t[i]:void 0}({container:A,mediaIndex:pe,width:le}),me=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(ge);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{me.current=ge}),[ge]);const ve=function(e){const{boundaryWidth:t,currentWidth:n}=e;if(void 0!==n||void 0!==t)return Math.min(null!=n?n:1/0,(t||1/0)-8)}({boundaryWidth:fe,currentWidth:ge}),be=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(ve);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{be.current=ve}),[ve]);const ye=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=ue.current;if(!z||!e)return;const t=ye.current;_?void 0!==t&&(e.style.width=`${t}px`):void 0!==ge&&(e.style.width=`${ge}px`),\"number\"==typeof ve&&(e.style.maxWidth=`${ve}px`)}),[ge,_,ve,z]);const we=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const e=[];return(F||W)&&e.push({...Tl(t={boundary:q||void 0,fallbackPlacements:B,padding:4,rootBoundary:he}),options:[t,n]}),e.push(((e,t)=>({...Us(e),options:[e,t]}))({mainAxis:4})),(F||_)&&e.push(function(e){const{apply:t,margins:n,padding:r=0}=e;return{name:\"@sanity/ui/size\",async fn(o){const{elements:i,placement:a,platform:s,rects:l}=o,{floating:c,reference:u}=l,d=await js(o,{altBoundary:!0,boundary:e.boundaryElement||void 0,elementContext:\"floating\",padding:r,rootBoundary:\"viewport\"});let h=1/0,p=1/0;const f=c.width,g=c.height;a.includes(\"top\")&&(h=f-(d.left+d.right),p=g-d.top),a.includes(\"right\")&&(h=f-d.right,p=g-(d.top+d.bottom)),a.includes(\"bottom\")&&(h=f-(d.left+d.right),p=g-d.bottom),a.includes(\"left\")&&(h=f-d.left,p=g-(d.top+d.bottom)),t({availableWidth:h-n[1]-n[3],availableHeight:p-n[0]-n[2],elements:i,referenceWidth:u.width-n[1]-n[3]});const m=await s.getDimensions(i.floating),v=m.height;return f!==m.width||g!==v?{reset:{rects:!0}}:{}}}}({apply({availableWidth:e,availableHeight:t,elements:n,referenceWidth:r}){ye.current=r;const o=me.current,i=be.current;_?n.floating.style.width=`${r}px`:void 0!==o&&(n.floating.style.width=`${o}px`),F&&(n.floating.style.maxWidth=`${Math.min(e,null!=i?i:1/0)}px`,n.floating.style.maxHeight=`${t}px`)},boundaryElement:q||void 0,constrainSize:F,margins:C,matchReferenceWidth:_,padding:4})),W&&e.push(((e,t)=>({...Pl(e),options:[e,t]}))({boundary:q||void 0,rootBoundary:he,padding:4})),D&&e.push(((e,t)=>({...Vl(e),options:[e,t]}))({element:de,padding:4})),re&&e.push(eb),e.push(((e,t)=>({...Cl(e),options:[e,t]}))({boundary:Y||void 0,padding:4,strategy:\"referenceHidden\"})),e;var t,n}),[re,D,F,B,q,C,_,W,Y]),{x:xe,y:ke,middlewareData:Se,placement:Ee,refs:Ae,strategy:Pe,update:Te}=function(e){void 0===e&&(e={});const{placement:t=\"bottom\",strategy:n=\"absolute\",middleware:o=[],platform:i,elements:{reference:a,floating:s}={},transform:l=!0,whileElementsMounted:c,open:u}=e,[d,h]=react__WEBPACK_IMPORTED_MODULE_1__.useState({x:0,y:0,strategy:n,placement:t,middlewareData:{},isPositioned:!1}),[p,f]=react__WEBPACK_IMPORTED_MODULE_1__.useState(o);$l(p,o)||f(o);const[g,m]=react__WEBPACK_IMPORTED_MODULE_1__.useState(null),[v,b]=react__WEBPACK_IMPORTED_MODULE_1__.useState(null),y=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((e=>{e!==S.current&&(S.current=e,m(e))}),[]),w=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((e=>{e!==E.current&&(E.current=e,b(e))}),[]),x=a||g,k=s||v,S=react__WEBPACK_IMPORTED_MODULE_1__.useRef(null),E=react__WEBPACK_IMPORTED_MODULE_1__.useRef(null),A=react__WEBPACK_IMPORTED_MODULE_1__.useRef(d),P=null!=c,T=Ol(c),C=Ol(i),L=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((()=>{if(!S.current||!E.current)return;const e={placement:t,strategy:n,middleware:p};C.current&&(e.platform=C.current),Ll(S.current,E.current,e).then((e=>{const t={...e,isPositioned:!0};D.current&&!$l(A.current,t)&&(A.current=t,react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync((()=>{h(t)})))}))}),[p,t,n,C]);Dl((()=>{!1===u&&A.current.isPositioned&&(A.current.isPositioned=!1,h((e=>({...e,isPositioned:!1}))))}),[u]);const D=react__WEBPACK_IMPORTED_MODULE_1__.useRef(!1);Dl((()=>(D.current=!0,()=>{D.current=!1})),[]),Dl((()=>{if(x&&(S.current=x),k&&(E.current=k),x&&k){if(T.current)return T.current(x,k,L);L()}}),[x,k,L,T,P]);const $=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>({reference:S,floating:E,setReference:y,setFloating:w})),[y,w]),M=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>({reference:x,floating:k})),[x,k]),F=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>{const e={position:n,left:0,top:0};if(!M.floating)return e;const t=Fl(M.floating,d.x),r=Fl(M.floating,d.y);return l?{...e,transform:\"translate(\"+t+\"px, \"+r+\"px)\",...Ml(M.floating)>=1.5&&{willChange:\"transform\"}}:{position:n,left:t,top:r}}),[n,l,M.floating,d.x,d.y]);return react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>({...d,update:L,refs:$,elements:M,floatingStyles:F})),[d,L,$,M,F])}({middleware:we,placement:H,whileElementsMounted:Al}),Ce=null==(m=Se.hide)?void 0:m.referenceHidden,Re=null==(y=Se.arrow)?void 0:y.x,Le=null==(w=Se.arrow)?void 0:w.y,De=null==(x=Se[\"@sanity/ui/origin\"])?void 0:x.originX,$e=null==(E=Se[\"@sanity/ui/origin\"])?void 0:E.originY,Me=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{de.current=e}),[]),Fe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue.current=e,Ae.setFloating(e)}),[Ae]),Oe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{Ae.setReference(e);const t=null==M?void 0:M.ref;\"function\"==typeof t?t(e):t&&(t.current=e)}),[M,Ae]),Ve=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>!M||X?null:(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(M,{ref:Oe})),[M,X,Oe]);if((0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{te&&(\"function\"==typeof te?te(Te):te&&(te.current=Te))}),[Te,te]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{Ve||Ae.setReference(X||null)}),[X,Ae,Ve]),V)return M||(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{});const Be=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gb,{zOffset:ce,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Sb,{...ne,__unstable_margins:C,animate:re,arrow:D,arrowRef:Me,arrowX:Re,arrowY:Le,hidden:Ce,overflow:j,padding:ie,placement:Ee,radius:ae,ref:Fe,scheme:Z,shadow:se,originX:De,originY:$e,strategy:Pe,tone:J,width:_?ye.current:ge,x:xe,y:ke,children:O})});return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(db,{condition:re,wrapper:t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Yg,{children:t}),children:z&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(db,{condition:!!U,wrapper:t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(yb,{__unstable_name:\"string\"==typeof U?U:void 0,children:t}),children:Be})}),Ve]})}))).displayName=\"Popover\";const Eb={\"&&:not([hidden])\":{display:\"grid\"},'&[data-as=\"ul\"],&[data-as=\"ol\"]':{listStyle:\"none\"},gridTemplateColumns:\"minmax(0, 1fr)\",gridAutoRows:\"min-content\"};const Ab=$o(Iv)((function(){return Eb}),(function(e){const{media:t,space:n}=X(e.theme);return tm(t,e.$space,(e=>({gridGap:em(n[e])})))})),Pb=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{as:r,space:o,...i}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ab,{\"data-as\":\"string\"==typeof r?r:void 0,\"data-ui\":\"Stack\",...i,$space:om(o),forwardedAs:r,ref:n})})),Tb=$o(zg(Qv))`\n  & > * {\n    opacity: var(${Jg}, 1);\n    will-change: opacity;\n  }\n`;(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{animate:o,arrow:i,arrowRef:s,arrowX:l,arrowY:c,children:u,originX:d,originY:h,padding:p,placement:f,radius:g,scheme:m,shadow:v,style:b,...y}=n,w=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({originX:d,originY:h,willChange:o?\"transform\":void 0,...b})),[o,d,h,b]),x=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({left:null!==l?l:void 0,top:null!==c?c:void 0,right:void 0,bottom:void 0})),[l,c]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Tb,{\"data-ui\":\"Tooltip__card\",...y,\"data-placement\":f,padding:p,radius:g,ref:r,scheme:m,shadow:v,style:w,...o?Qg:{},children:[u,i&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sb,{ref:s,style:x,width:15,height:6,radius:2})]})}))).displayName=\"TooltipCard\";Xm(Symbol.for(\"@sanity/ui/context/tooltipDelayGroup\"),null),Mo`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;Xm(Symbol.for(\"@sanity/ui/context/dialog\"),{version:0});Xm(Symbol.for(\"@sanity/ui/context/menu\"),null);const Cb=Ro`\n  background-image: linear-gradient(\n    to right,\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-to),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from)\n  );\n  background-position: 100%;\n  background-size: 200% 100%;\n  background-attachment: fixed;\n  animation-name: ${Mo`\n  0% {\n    background-position: 100%;\n  }\n  100% {\n    background-position: -100%;\n  }\n`};\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 2000ms;\n`;Ro`\n  opacity: ${({$visible:e})=>e?1:0};\n  transition: opacity 200ms ease-in;\n\n  @media screen and (prefers-reduced-motion: no-preference) {\n    ${({$animated:e})=>e?Cb:Ro`\n            background-color: var(--card-skeleton-color-from);\n          `}\n  }\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    background-color: var(--card-skeleton-color-from);\n  }\n`;function Rb(e){if(\"treeitem\"===e.getAttribute(\"role\")&&e.focus(),\"none\"===e.getAttribute(\"role\")){const t=e.firstChild;t&&t instanceof HTMLElement&&t.focus()}}Xm(Symbol.for(\"@sanity/ui/context/toast\"),null);const Lb=Xm(Symbol.for(\"@sanity/ui/context/tree\"),null);(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{children:r,space:o=1,onFocus:s,...l}=t,c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[u,h]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(u),g=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>[]),[]),[m,b]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),[y,w]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}),x=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(y);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,(()=>c.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{f.current=u}),[u]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{x.current=y}),[y]);const S=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t,n,r)=>(w((r=>({...r,[t]:{element:e,expanded:n}}))),r&&h(e),()=>{w((e=>{const n={...e};return delete n[t],n}))})),[]),E=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{w((n=>{const r=n[e];return r?{...n,[e]:{...r,expanded:t}}:n}))}),[]),A=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({version:0,focusedElement:u||m[0]||null,level:0,path:g,registerItem:S,setExpanded:E,setFocusedElement:h,space:o,state:y})),[u,m,g,S,E,o,y]),P=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{var t;if(f.current){if(\"ArrowDown\"===e.key){e.preventDefault();const t=function(e,t,n){var r;const o=t.indexOf(n),i=t.slice(o),a=t.length;for(let t=1;t<a;t+=1){if(!i[t])continue;const n=i[t].getAttribute(\"data-tree-key\");if(!n)continue;const o=n.split(\"/\");o.pop();const a=[];let s=!0;for(let t=0;t<o.length;t+=1)if(a.push(o[t]),null==(r=e[a.join(\"/\")])||!r.expanded){s=!1;break}if(s)return i[t]}return null}(x.current,m,f.current);return void(t&&(Rb(t),h(t)))}if(\"ArrowUp\"===e.key){e.preventDefault();const t=function(e,t,n){var r;const o=t.indexOf(n),i=t.slice(0,o);for(let t=i.length-1;t>=0;t-=1){const n=i[t].getAttribute(\"data-tree-key\");if(!n)continue;const o=n.split(\"/\");o.pop();const a=[];let s=!0;for(let t=0;t<o.length;t+=1)if(a.push(o[t]),null==(r=e[a.join(\"/\")])||!r.expanded){s=!1;break}if(s)return i[t]}return null}(x.current,m,f.current);return void(t&&(Rb(t),h(t)))}if(\"ArrowLeft\"===e.key){e.preventDefault();const t=f.current.getAttribute(\"data-tree-key\");if(!t)return;const n=x.current[t];if(!n)return;if(n.expanded)w((e=>{const n=e[t];return n?{...e,[t]:{...n,expanded:!1}}:e}));else{const e=t.split(\"/\");e.pop();const n=e.join(\"/\"),r=n&&x.current[n];r&&(r.element.focus(),h(r.element))}return}if(\"ArrowRight\"===e.key){e.preventDefault();const n=f.current.getAttribute(\"data-tree-key\");if(!n)return;return void(null!=(t=x.current[n])&&t.expanded||w((e=>{const t=e[n];return t?{...e,[n]:{...t,expanded:!0}}:e})))}}}),[m]),T=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{h(e.target),null==s||s(e)}),[s]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!c.current)return;const e=Array.from(c.current.querySelectorAll('[data-ui=\"TreeItem\"]'));b(e)}),[r,c]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Lb.Provider,{value:A,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Pb,{as:\"ul\",\"data-ui\":\"Tree\",...l,onFocus:T,onKeyDown:P,ref:c,role:\"tree\",space:o,children:r})})}))).displayName=\"Tree\";const Db=$o(Qv)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`,$b=$o(Yv)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n`,Mb=$o(Qv)`\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: var(--card-bg-color);\n    white-space: nowrap;\n  }\n`;const Fb=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function(t){const{focused:n,hovered:r,rect:o,showActions:s,sanity:l,wasMaybeCollapsed:c}=t,u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!h.current&&!c&&!0===n&&u.current){const e=u.current;(0,scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(u.current,{behavior:t=>{0!==t.length&&e.scrollIntoView({behavior:\"smooth\",block:\"center\",inline:\"nearest\"})},scrollMode:\"if-needed\",block:\"center\",inline:\"nearest\"})}h.current=!0===n}),[n,c]);const p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({width:`${o.w}px`,height:`${o.h}px`,transform:`translate(${o.x}px, ${o.y}px)`})),[o]),f=\"path\"in l?function(e){const{id:t,type:n,path:r,baseUrl:o,tool:i,workspace:a}=e;return (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_4__.createEditUrl)({baseUrl:o,workspace:a,tool:i,type:n,id:t,path:(0,_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_5__.b)(_sanity_client_csm__WEBPACK_IMPORTED_MODULE_4__.studioPath.fromString(r))})}(l):l.href;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Db,{\"data-focused\":n?\"\":void 0,\"data-hovered\":r?\"\":void 0,ref:u,style:p,children:s&&r?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($b,{gap:1,paddingBottom:1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Iv,{as:\"a\",href:f,target:\"_blank\",rel:\"noopener\",referrerPolicy:\"no-referrer-when-downgrade\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mb,{padding:2,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Wv,{size:1,weight:\"medium\",children:\"Open in Studio\"})})})}):null})})),Ob=(e,t)=>{const{type:n}=t;switch(n){case\"element/register\":return e.find((e=>e.id===t.id))?e:[...e,{id:t.id,activated:!1,focused:!1,hovered:!1,rect:t.rect,sanity:t.sanity}];case\"element/activate\":return e.map((e=>e.id===t.id?{...e,activated:!0}:e));case\"element/unregister\":return e.filter((e=>e.id!==t.id));case\"element/deactivate\":return e.map((e=>e.id===t.id?{...e,activated:!1,hovered:!1}:e));case\"element/mouseenter\":return e.map((e=>e.id===t.id?{...e,rect:t.rect,hovered:!0}:{...e,hovered:!1}));case\"element/mouseleave\":return e.map((e=>e.id===t.id?{...e,hovered:!1}:e));case\"element/updateRect\":return e.map((e=>e.id===t.id?{...e,rect:t.rect}:e));case\"element/click\":return e.map((e=>({...e,focused:e.id===t.id&&\"clicked\"})));case\"overlay/blur\":case\"presentation/blur\":return e.map((e=>({...e,focused:!1})));case\"presentation/focus\":{const n=e.find((e=>\"clicked\"===e.focused));return e.map((e=>{const r=\"path\"in e.sanity&&e.sanity.id===t.data.id&&e.sanity.path===t.data.path;return n&&e===n&&r?e:{...e,focused:r&&n?\"duplicate\":r}}))}default:return e}};function Vb(e,t){let n=e.focusPath,r=!1,o=e.perspective;if(\"presentation/focus\"===t.type){const o=e.focusPath;n=t.data.path,o!==n&&(r=o.slice(n.length).startsWith(\"[\"))}return\"presentation/perspective\"===t.type&&(o=t.data.perspective),{...e,elements:Ob(e.elements,t),focusPath:n,perspective:o,wasMaybeCollapsed:r}}const Bb=$o.div`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex:e})=>null!=e?e:\"9999999\"};\n`;function _b(e){let t,n;return t=requestAnimationFrame((()=>{n=requestAnimationFrame(e)})),()=>{void 0!==t&&cancelAnimationFrame(t),void 0!==n&&cancelAnimationFrame(n)}}const qb=t=>{const{channel:n,history:r,zIndex:o}=t,[s,l]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(),[{elements:c,wasMaybeCollapsed:u,perspective:h},f]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(Vb,{elements:[],focusPath:\"\",wasMaybeCollapsed:!1,perspective:\"published\"}),[g,m]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[b,y]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=n.onStatusUpdate(l),t=n.subscribe(((e,t)=>{var n;\"presentation/focus\"===e&&null!=(n=t.path)&&n.length||\"presentation/blur\"===e||\"presentation/perspective\"===e?f({type:e,data:t}):\"presentation/navigate\"===e?null==r||r.update(t):\"presentation/toggleOverlay\"===e&&y((e=>!e))}));return()=>{t(),e()}}),[n,r]);const w=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0),x=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{null==n||n.send(\"visual-editing/documents\",{documents:e,perspective:t})}),[n]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=c.map((e=>{const{sanity:t}=e;return\"id\"in t?{...t,id:\"isDraft\"in t?`${_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_5__.j}${t.id}`:t.id}:null})).filter((e=>!!e)),t=new Set(e.map((e=>e.id)));if(!w.current||!function(e,t){if(e===t)return!0;if(e.size!==t.size)return!1;for(const n of e)if(!t.has(n))return!1;return!0}(t,w.current.nodeIds)||h!==w.current.perspective){const n=Array.from(t).map((t=>{const n=e.find((e=>e.id===t)),{type:r,projectId:o,dataset:i}=n;return o&&i?{_id:t,_type:r,_projectId:o,_dataset:i}:{_id:t,_type:r}}));w.current={nodeIds:t,perspective:h},x(n,h)}}),[c,h,x]);const k=function(e,t,n){const r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(e)return r.current=(0,_chunks_es_controller_js__WEBPACK_IMPORTED_MODULE_6__.c)({handler:t,overlayElement:e,preventDefault:n}),()=>{var e;null==(e=r.current)||e.destroy(),r.current=void 0}}),[e,t,n]),r}(g,(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(\"element/click\"===e.type){const{sanity:t}=e;n.send(\"overlay/focus\",t)}else\"overlay/activate\"===e.type?n.send(\"overlay/toggle\",{enabled:!0}):\"overlay/deactivate\"===e.type&&n.send(\"overlay/toggle\",{enabled:!1});f(e)}),[n]),!!n.inFrame);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{var e,t;b?null==(e=k.current)||e.activate():null==(t=k.current)||t.deactivate()}),[n,k,b]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=e=>{var t;const n=e.target;if((fb(r=n)&&\"A\"===r.nodeName||fb(n)&&n.closest(\"a\"))&&e.altKey){e.preventDefault(),e.stopPropagation();const n=new MouseEvent(e.type,{...e,altKey:!1,bubbles:!0,cancelable:!0});null==(t=e.target)||t.dispatchEvent(n)}var r},t=e=>{(0,_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_5__.c)(e)&&y((e=>!e))},n=e=>{(0,_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_5__.c)(e)&&y((e=>!e)),(0,_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_5__.p)([\"mod\",\"\\\\\"],e)&&y((e=>!e))};return window.addEventListener(\"click\",e),window.addEventListener(\"keydown\",n),window.addEventListener(\"keyup\",t),()=>{window.removeEventListener(\"click\",e),window.removeEventListener(\"keydown\",n),window.removeEventListener(\"keyup\",t)}}),[y]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(r)return r.subscribe((e=>{e.title=e.title||document.title,n.send(\"overlay/navigate\",e)}))}),[n,r]);const[S,A]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[R,L]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),D=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(b)return _b((()=>{A(!0),_b((()=>{L(!0),D.current=setTimeout((()=>{L(!1),A(!1)}),1500)}))}));D.current&&(clearTimeout(D.current),A(!1),L(!1))}),[b]);const $=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>!n||n.inFrame&&\"connected\"!==s?[]:c.filter((e=>e.activated||e.focused))),[n,c,s]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Km,{theme:Xg,tone:\"transparent\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Bb,{\"data-fading-out\":R?\"\":void 0,\"data-overlays\":S?\"\":void 0,ref:m,$zIndex:o,children:$.map((({id:t,focused:r,hovered:o,rect:i,sanity:a})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Fb,{rect:i,focused:r,hovered:o,showActions:!n.inFrame,sanity:a,wasMaybeCollapsed:r&&u},t)))})})},Nb=e=>{const{channel:t,refresh:n}=e,r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0),o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>t.subscribe(((e,i)=>{var a,s;if(\"presentation/refresh\"===e&&\"manual\"===i.source){clearTimeout(r.current);const e=n(i);if(!1===e)return;t.send(\"visual-editing/refreshing\",i);let o=!1;r.current=window.setTimeout((()=>{t.send(\"visual-editing/refreshed\",i),o=!0}),3e3),null==(a=null==e?void 0:e.finally)||a.call(e,(()=>{o||(clearTimeout(r.current),t.send(\"visual-editing/refreshed\",i))}))}else if(\"presentation/refresh\"===e&&\"mutation\"===i.source){clearTimeout(o.current);const e=n(i);if(!1===e)return;t.send(\"visual-editing/refreshing\",i),o.current=window.setTimeout((()=>{var e;const r=n(i);!1!==r&&(t.send(\"visual-editing/refreshing\",i),null!=(e=null==r?void 0:r.finally)&&e.call(r,(()=>{t.send(\"visual-editing/refreshed\",i)}))||t.send(\"visual-editing/refreshed\",i))}),1e3),null!=(s=null==e?void 0:e.finally)&&s.call(e,(()=>{t.send(\"visual-editing/refreshed\",i)}))||t.send(\"visual-editing/refreshed\",i)}}))),[t,n]),null},zb=[\"channel/disconnect\",\"channel/response\",\"channel/heartbeat\"],jb=[\"handshake/syn\",\"handshake/syn-ack\",\"handshake/ack\"],Ib=e=>zb.some((t=>t===e)),Hb=e=>jb.some((t=>t===e)),Ub=({data:e={}})=>\"object\"==typeof e&&null!==e&&!Array.isArray(e)&&!(\"domain\"in e)&&[\"id\",\"type\",\"from\",\"to\"].every((t=>t in e))&&e.type.startsWith(\"handshake/\");function Wb(e){const t=window.self!==window.top||window.opener,n={buffer:[],id:null,origin:null,source:null,status:\"connecting\"};function r(t,r){if(Hb(t)||Ib(t)||\"connecting\"!==n.status&&\"reconnecting\"!==n.status){if(n.id&&n.origin&&n.source){const o={connectionId:n.id,data:r,domain:\"sanity/channels\",from:e.id,id:(0,_chunks_es_controller_js__WEBPACK_IMPORTED_MODULE_6__.v)(),to:e.connectTo,type:t};try{n.source.postMessage(o,{targetOrigin:n.origin})}catch{throw new Error(`Failed to postMessage '${o.id}' on '${e.id}'`)}}}else n.buffer.push({type:t,data:r})}function o(t){if(Ub(t))console.error(\"Visual editing package mismatch detected! Please ensure you are using the latest version of Sanity Studio and any packages listed here:\\nhttps://github.com/sanity-io/visual-editing\");else if(function(t){const{data:n}=t;return\"sanity/channels\"===n.domain&&n.to===e.id&&n.from===e.connectTo&&\"channel/response\"!==n.type}(t)){const{data:e}=t;if(n.origin&&t.origin!==n.origin)return;if(t.source&&n.source!==t.source&&(n.source=t.source),Hb(e.type)&&e.data){if(\"handshake/syn\"===e.type)return n.origin=t.origin,n.id=e.data.id,s(\"connecting\"),void r(\"handshake/syn-ack\",{id:n.id});if(\"handshake/ack\"===e.type&&e.data.id===n.id)return void s(\"connected\")}else if(e.connectionId===n.id&&t.origin===n.origin){if(\"channel/disconnect\"===e.type)return void s(\"disconnected\");{const t=[e.type,e.data];i.forEach((e=>{e(...t)})),r(\"channel/response\",{responseTo:e.id})}return}}}const i=new Set;const a=new Set;function s(e){n.status=e,a.forEach((t=>{t(e)})),\"connected\"===e&&function(){const e=[...n.buffer];n.buffer.splice(0,n.buffer.length),e.forEach((({type:e,data:t})=>{r(e,t)}))}()}return window.addEventListener(\"message\",o,!1),s(\"connecting\"),{destroy:function(){[\"disconnected\"].includes(n.status)||s(\"disconnected\"),i.clear(),a.clear(),window.removeEventListener(\"message\",o,!1)},inFrame:t,send:function(e,t){r(e,t)},subscribe:function(e){return i.add(e),()=>i.delete(e)},onStatusUpdate:function(e){return a.add(e),()=>a.delete(e)}}}const Gb=r=>{const{history:o,refresh:a,zIndex:s}=r,l=function(){const[e,t]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=Wb({id:\"overlays\",connectTo:\"presentation\"});return t(e),()=>{e.destroy()}}),[]),e}();return l&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qb,{channel:l,history:o,zIndex:s}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(V,{channel:l}),a&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Nb,{channel:l,refresh:a})]})};//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/react/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/scroll-into-view-if-needed/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/scroll-into-view-if-needed/dist/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ e; }\n/* harmony export */ });\n/* harmony import */ var compute_scroll_into_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! compute-scroll-into-view */ \"(app-pages-browser)/./node_modules/compute-scroll-into-view/dist/index.js\");\nconst o=t=>!1===t?{block:\"end\",inline:\"nearest\"}:(t=>t===Object(t)&&0!==Object.keys(t).length)(t)?t:{block:\"start\",inline:\"nearest\"};function e(e,r){if(!e.isConnected||!(t=>{let o=t;for(;o&&o.parentNode;){if(o.parentNode===document)return!0;o=o.parentNode instanceof ShadowRoot?o.parentNode.host:o.parentNode}return!1})(e))return;const n=(t=>{const o=window.getComputedStyle(t);return{top:parseFloat(o.scrollMarginTop)||0,right:parseFloat(o.scrollMarginRight)||0,bottom:parseFloat(o.scrollMarginBottom)||0,left:parseFloat(o.scrollMarginLeft)||0}})(e);if((t=>\"object\"==typeof t&&\"function\"==typeof t.behavior)(r))return r.behavior((0,compute_scroll_into_view__WEBPACK_IMPORTED_MODULE_0__.compute)(e,r));const l=\"boolean\"==typeof r||null==r?void 0:r.behavior;for(const{el:a,top:i,left:s}of (0,compute_scroll_into_view__WEBPACK_IMPORTED_MODULE_0__.compute)(e,o(r))){const t=i-n.top+n.bottom,o=s-n.left+n.right;a.scroll({top:t,left:o,behavior:l})}}//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zY3JvbGwtaW50by12aWV3LWlmLW5lZWRlZC9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1ELG1CQUFtQiw2QkFBNkIscURBQXFELGdDQUFnQyxnQkFBZ0IseUJBQXlCLFFBQVEsS0FBSyxnQkFBZ0IsRUFBRSxvQ0FBb0Msb0VBQW9FLFNBQVMsWUFBWSxhQUFhLG1DQUFtQyxPQUFPLGlLQUFpSyxLQUFLLCtFQUErRSxpRUFBQyxPQUFPLHVEQUF1RCxVQUFVLGtCQUFrQixHQUFHLGlFQUFDLFVBQVUsNENBQTRDLFVBQVUsd0JBQXdCLEdBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zY3JvbGwtaW50by12aWV3LWlmLW5lZWRlZC9kaXN0L2luZGV4LmpzPzNhMTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e2NvbXB1dGUgYXMgdH1mcm9tXCJjb21wdXRlLXNjcm9sbC1pbnRvLXZpZXdcIjtjb25zdCBvPXQ9PiExPT09dD97YmxvY2s6XCJlbmRcIixpbmxpbmU6XCJuZWFyZXN0XCJ9Oih0PT50PT09T2JqZWN0KHQpJiYwIT09T2JqZWN0LmtleXModCkubGVuZ3RoKSh0KT90OntibG9jazpcInN0YXJ0XCIsaW5saW5lOlwibmVhcmVzdFwifTtmdW5jdGlvbiBlKGUscil7aWYoIWUuaXNDb25uZWN0ZWR8fCEodD0+e2xldCBvPXQ7Zm9yKDtvJiZvLnBhcmVudE5vZGU7KXtpZihvLnBhcmVudE5vZGU9PT1kb2N1bWVudClyZXR1cm4hMDtvPW8ucGFyZW50Tm9kZSBpbnN0YW5jZW9mIFNoYWRvd1Jvb3Q/by5wYXJlbnROb2RlLmhvc3Q6by5wYXJlbnROb2RlfXJldHVybiExfSkoZSkpcmV0dXJuO2NvbnN0IG49KHQ9Pntjb25zdCBvPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQpO3JldHVybnt0b3A6cGFyc2VGbG9hdChvLnNjcm9sbE1hcmdpblRvcCl8fDAscmlnaHQ6cGFyc2VGbG9hdChvLnNjcm9sbE1hcmdpblJpZ2h0KXx8MCxib3R0b206cGFyc2VGbG9hdChvLnNjcm9sbE1hcmdpbkJvdHRvbSl8fDAsbGVmdDpwYXJzZUZsb2F0KG8uc2Nyb2xsTWFyZ2luTGVmdCl8fDB9fSkoZSk7aWYoKHQ9Plwib2JqZWN0XCI9PXR5cGVvZiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmJlaGF2aW9yKShyKSlyZXR1cm4gci5iZWhhdmlvcih0KGUscikpO2NvbnN0IGw9XCJib29sZWFuXCI9PXR5cGVvZiByfHxudWxsPT1yP3ZvaWQgMDpyLmJlaGF2aW9yO2Zvcihjb25zdHtlbDphLHRvcDppLGxlZnQ6c31vZiB0KGUsbyhyKSkpe2NvbnN0IHQ9aS1uLnRvcCtuLmJvdHRvbSxvPXMtbi5sZWZ0K24ucmlnaHQ7YS5zY3JvbGwoe3RvcDp0LGxlZnQ6byxiZWhhdmlvcjpsfSl9fWV4cG9ydHtlIGFzIGRlZmF1bHR9Oy8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/scroll-into-view-if-needed/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/valibot/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/valibot/dist/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BIC_REGEX: function() { return /* binding */ BIC_REGEX; },\n/* harmony export */   CUID2_REGEX: function() { return /* binding */ CUID2_REGEX; },\n/* harmony export */   DECIMAL_REGEX: function() { return /* binding */ DECIMAL_REGEX; },\n/* harmony export */   EMAIL_REGEX: function() { return /* binding */ EMAIL_REGEX; },\n/* harmony export */   EMOJI_REGEX: function() { return /* binding */ EMOJI_REGEX; },\n/* harmony export */   HEXADECIMAL_REGEX: function() { return /* binding */ HEXADECIMAL_REGEX; },\n/* harmony export */   HEX_COLOR_REGEX: function() { return /* binding */ HEX_COLOR_REGEX; },\n/* harmony export */   IMEI_REGEX: function() { return /* binding */ IMEI_REGEX; },\n/* harmony export */   IPV4_REGEX: function() { return /* binding */ IPV4_REGEX; },\n/* harmony export */   IPV6_REGEX: function() { return /* binding */ IPV6_REGEX; },\n/* harmony export */   IP_REGEX: function() { return /* binding */ IP_REGEX; },\n/* harmony export */   ISO_DATE_REGEX: function() { return /* binding */ ISO_DATE_REGEX; },\n/* harmony export */   ISO_DATE_TIME_REGEX: function() { return /* binding */ ISO_DATE_TIME_REGEX; },\n/* harmony export */   ISO_TIMESTAMP_REGEX: function() { return /* binding */ ISO_TIMESTAMP_REGEX; },\n/* harmony export */   ISO_TIME_REGEX: function() { return /* binding */ ISO_TIME_REGEX; },\n/* harmony export */   ISO_TIME_SECOND_REGEX: function() { return /* binding */ ISO_TIME_SECOND_REGEX; },\n/* harmony export */   ISO_WEEK_REGEX: function() { return /* binding */ ISO_WEEK_REGEX; },\n/* harmony export */   MAC48_REGEX: function() { return /* binding */ MAC48_REGEX; },\n/* harmony export */   MAC64_REGEX: function() { return /* binding */ MAC64_REGEX; },\n/* harmony export */   MAC_REGEX: function() { return /* binding */ MAC_REGEX; },\n/* harmony export */   OCTAL_REGEX: function() { return /* binding */ OCTAL_REGEX; },\n/* harmony export */   ULID_REGEX: function() { return /* binding */ ULID_REGEX; },\n/* harmony export */   UUID_REGEX: function() { return /* binding */ UUID_REGEX; },\n/* harmony export */   ValiError: function() { return /* binding */ ValiError; },\n/* harmony export */   _addIssue: function() { return /* binding */ _addIssue; },\n/* harmony export */   _isAllowedObjectKey: function() { return /* binding */ _isAllowedObjectKey; },\n/* harmony export */   _isLuhnAlgo: function() { return /* binding */ _isLuhnAlgo; },\n/* harmony export */   _stringify: function() { return /* binding */ _stringify; },\n/* harmony export */   any: function() { return /* binding */ any; },\n/* harmony export */   array: function() { return /* binding */ array; },\n/* harmony export */   arrayAsync: function() { return /* binding */ arrayAsync; },\n/* harmony export */   bic: function() { return /* binding */ bic; },\n/* harmony export */   bigint: function() { return /* binding */ bigint; },\n/* harmony export */   blob: function() { return /* binding */ blob; },\n/* harmony export */   boolean: function() { return /* binding */ boolean; },\n/* harmony export */   brand: function() { return /* binding */ brand; },\n/* harmony export */   bytes: function() { return /* binding */ bytes; },\n/* harmony export */   check: function() { return /* binding */ check; },\n/* harmony export */   checkAsync: function() { return /* binding */ checkAsync; },\n/* harmony export */   config: function() { return /* binding */ config; },\n/* harmony export */   creditCard: function() { return /* binding */ creditCard; },\n/* harmony export */   cuid2: function() { return /* binding */ cuid2; },\n/* harmony export */   custom: function() { return /* binding */ custom; },\n/* harmony export */   customAsync: function() { return /* binding */ customAsync; },\n/* harmony export */   date: function() { return /* binding */ date; },\n/* harmony export */   decimal: function() { return /* binding */ decimal; },\n/* harmony export */   deleteGlobalConfig: function() { return /* binding */ deleteGlobalConfig; },\n/* harmony export */   deleteGlobalMessage: function() { return /* binding */ deleteGlobalMessage; },\n/* harmony export */   deleteSchemaMessage: function() { return /* binding */ deleteSchemaMessage; },\n/* harmony export */   deleteSpecificMessage: function() { return /* binding */ deleteSpecificMessage; },\n/* harmony export */   email: function() { return /* binding */ email; },\n/* harmony export */   emoji: function() { return /* binding */ emoji; },\n/* harmony export */   empty: function() { return /* binding */ empty; },\n/* harmony export */   endsWith: function() { return /* binding */ endsWith; },\n/* harmony export */   entriesFromList: function() { return /* binding */ entriesFromList; },\n/* harmony export */   enum_: function() { return /* binding */ enum_; },\n/* harmony export */   every: function() { return /* binding */ every; },\n/* harmony export */   excludes: function() { return /* binding */ excludes; },\n/* harmony export */   fallback: function() { return /* binding */ fallback; },\n/* harmony export */   fallbackAsync: function() { return /* binding */ fallbackAsync; },\n/* harmony export */   finite: function() { return /* binding */ finite; },\n/* harmony export */   flatten: function() { return /* binding */ flatten; },\n/* harmony export */   forward: function() { return /* binding */ forward; },\n/* harmony export */   forwardAsync: function() { return /* binding */ forwardAsync; },\n/* harmony export */   getDefault: function() { return /* binding */ getDefault; },\n/* harmony export */   getDefaults: function() { return /* binding */ getDefaults; },\n/* harmony export */   getDefaultsAsync: function() { return /* binding */ getDefaultsAsync; },\n/* harmony export */   getDotPath: function() { return /* binding */ getDotPath; },\n/* harmony export */   getFallback: function() { return /* binding */ getFallback; },\n/* harmony export */   getFallbacks: function() { return /* binding */ getFallbacks; },\n/* harmony export */   getFallbacksAsync: function() { return /* binding */ getFallbacksAsync; },\n/* harmony export */   getGlobalConfig: function() { return /* binding */ getGlobalConfig; },\n/* harmony export */   getGlobalMessage: function() { return /* binding */ getGlobalMessage; },\n/* harmony export */   getSchemaMessage: function() { return /* binding */ getSchemaMessage; },\n/* harmony export */   getSpecificMessage: function() { return /* binding */ getSpecificMessage; },\n/* harmony export */   hash: function() { return /* binding */ hash; },\n/* harmony export */   hexColor: function() { return /* binding */ hexColor; },\n/* harmony export */   hexadecimal: function() { return /* binding */ hexadecimal; },\n/* harmony export */   imei: function() { return /* binding */ imei; },\n/* harmony export */   includes: function() { return /* binding */ includes; },\n/* harmony export */   instance: function() { return /* binding */ instance; },\n/* harmony export */   integer: function() { return /* binding */ integer; },\n/* harmony export */   intersect: function() { return /* binding */ intersect; },\n/* harmony export */   intersectAsync: function() { return /* binding */ intersectAsync; },\n/* harmony export */   ip: function() { return /* binding */ ip; },\n/* harmony export */   ipv4: function() { return /* binding */ ipv4; },\n/* harmony export */   ipv6: function() { return /* binding */ ipv6; },\n/* harmony export */   is: function() { return /* binding */ is; },\n/* harmony export */   isOfKind: function() { return /* binding */ isOfKind; },\n/* harmony export */   isOfType: function() { return /* binding */ isOfType; },\n/* harmony export */   isValiError: function() { return /* binding */ isValiError; },\n/* harmony export */   isoDate: function() { return /* binding */ isoDate; },\n/* harmony export */   isoDateTime: function() { return /* binding */ isoDateTime; },\n/* harmony export */   isoTime: function() { return /* binding */ isoTime; },\n/* harmony export */   isoTimeSecond: function() { return /* binding */ isoTimeSecond; },\n/* harmony export */   isoTimestamp: function() { return /* binding */ isoTimestamp; },\n/* harmony export */   isoWeek: function() { return /* binding */ isoWeek; },\n/* harmony export */   keyof: function() { return /* binding */ keyof; },\n/* harmony export */   lazy: function() { return /* binding */ lazy; },\n/* harmony export */   lazyAsync: function() { return /* binding */ lazyAsync; },\n/* harmony export */   length: function() { return /* binding */ length; },\n/* harmony export */   literal: function() { return /* binding */ literal; },\n/* harmony export */   looseObject: function() { return /* binding */ looseObject; },\n/* harmony export */   looseObjectAsync: function() { return /* binding */ looseObjectAsync; },\n/* harmony export */   looseTuple: function() { return /* binding */ looseTuple; },\n/* harmony export */   looseTupleAsync: function() { return /* binding */ looseTupleAsync; },\n/* harmony export */   mac: function() { return /* binding */ mac; },\n/* harmony export */   mac48: function() { return /* binding */ mac48; },\n/* harmony export */   mac64: function() { return /* binding */ mac64; },\n/* harmony export */   map: function() { return /* binding */ map; },\n/* harmony export */   mapAsync: function() { return /* binding */ mapAsync; },\n/* harmony export */   maxBytes: function() { return /* binding */ maxBytes; },\n/* harmony export */   maxLength: function() { return /* binding */ maxLength; },\n/* harmony export */   maxSize: function() { return /* binding */ maxSize; },\n/* harmony export */   maxValue: function() { return /* binding */ maxValue; },\n/* harmony export */   mimeType: function() { return /* binding */ mimeType; },\n/* harmony export */   minBytes: function() { return /* binding */ minBytes; },\n/* harmony export */   minLength: function() { return /* binding */ minLength; },\n/* harmony export */   minSize: function() { return /* binding */ minSize; },\n/* harmony export */   minValue: function() { return /* binding */ minValue; },\n/* harmony export */   multipleOf: function() { return /* binding */ multipleOf; },\n/* harmony export */   nan: function() { return /* binding */ nan; },\n/* harmony export */   never: function() { return /* binding */ never; },\n/* harmony export */   nonEmpty: function() { return /* binding */ nonEmpty; },\n/* harmony export */   nonNullable: function() { return /* binding */ nonNullable; },\n/* harmony export */   nonNullableAsync: function() { return /* binding */ nonNullableAsync; },\n/* harmony export */   nonNullish: function() { return /* binding */ nonNullish; },\n/* harmony export */   nonNullishAsync: function() { return /* binding */ nonNullishAsync; },\n/* harmony export */   nonOptional: function() { return /* binding */ nonOptional; },\n/* harmony export */   nonOptionalAsync: function() { return /* binding */ nonOptionalAsync; },\n/* harmony export */   notBytes: function() { return /* binding */ notBytes; },\n/* harmony export */   notLength: function() { return /* binding */ notLength; },\n/* harmony export */   notSize: function() { return /* binding */ notSize; },\n/* harmony export */   notValue: function() { return /* binding */ notValue; },\n/* harmony export */   null_: function() { return /* binding */ null_; },\n/* harmony export */   nullable: function() { return /* binding */ nullable; },\n/* harmony export */   nullableAsync: function() { return /* binding */ nullableAsync; },\n/* harmony export */   nullish: function() { return /* binding */ nullish; },\n/* harmony export */   nullishAsync: function() { return /* binding */ nullishAsync; },\n/* harmony export */   number: function() { return /* binding */ number; },\n/* harmony export */   object: function() { return /* binding */ object; },\n/* harmony export */   objectAsync: function() { return /* binding */ objectAsync; },\n/* harmony export */   objectWithRest: function() { return /* binding */ objectWithRest; },\n/* harmony export */   objectWithRestAsync: function() { return /* binding */ objectWithRestAsync; },\n/* harmony export */   octal: function() { return /* binding */ octal; },\n/* harmony export */   omit: function() { return /* binding */ omit; },\n/* harmony export */   optional: function() { return /* binding */ optional; },\n/* harmony export */   optionalAsync: function() { return /* binding */ optionalAsync; },\n/* harmony export */   parse: function() { return /* binding */ parse; },\n/* harmony export */   parseAsync: function() { return /* binding */ parseAsync; },\n/* harmony export */   parser: function() { return /* binding */ parser; },\n/* harmony export */   parserAsync: function() { return /* binding */ parserAsync; },\n/* harmony export */   partial: function() { return /* binding */ partial; },\n/* harmony export */   partialAsync: function() { return /* binding */ partialAsync; },\n/* harmony export */   pick: function() { return /* binding */ pick; },\n/* harmony export */   picklist: function() { return /* binding */ picklist; },\n/* harmony export */   pipe: function() { return /* binding */ pipe; },\n/* harmony export */   pipeAsync: function() { return /* binding */ pipeAsync; },\n/* harmony export */   readonly: function() { return /* binding */ readonly; },\n/* harmony export */   record: function() { return /* binding */ record; },\n/* harmony export */   recordAsync: function() { return /* binding */ recordAsync; },\n/* harmony export */   regex: function() { return /* binding */ regex; },\n/* harmony export */   required: function() { return /* binding */ required; },\n/* harmony export */   requiredAsync: function() { return /* binding */ requiredAsync; },\n/* harmony export */   safeInteger: function() { return /* binding */ safeInteger; },\n/* harmony export */   safeParse: function() { return /* binding */ safeParse; },\n/* harmony export */   safeParseAsync: function() { return /* binding */ safeParseAsync; },\n/* harmony export */   safeParser: function() { return /* binding */ safeParser; },\n/* harmony export */   safeParserAsync: function() { return /* binding */ safeParserAsync; },\n/* harmony export */   set: function() { return /* binding */ set; },\n/* harmony export */   setAsync: function() { return /* binding */ setAsync; },\n/* harmony export */   setGlobalConfig: function() { return /* binding */ setGlobalConfig; },\n/* harmony export */   setGlobalMessage: function() { return /* binding */ setGlobalMessage; },\n/* harmony export */   setSchemaMessage: function() { return /* binding */ setSchemaMessage; },\n/* harmony export */   setSpecificMessage: function() { return /* binding */ setSpecificMessage; },\n/* harmony export */   size: function() { return /* binding */ size; },\n/* harmony export */   some: function() { return /* binding */ some; },\n/* harmony export */   startsWith: function() { return /* binding */ startsWith; },\n/* harmony export */   strictObject: function() { return /* binding */ strictObject; },\n/* harmony export */   strictObjectAsync: function() { return /* binding */ strictObjectAsync; },\n/* harmony export */   strictTuple: function() { return /* binding */ strictTuple; },\n/* harmony export */   strictTupleAsync: function() { return /* binding */ strictTupleAsync; },\n/* harmony export */   string: function() { return /* binding */ string; },\n/* harmony export */   symbol: function() { return /* binding */ symbol; },\n/* harmony export */   toLowerCase: function() { return /* binding */ toLowerCase; },\n/* harmony export */   toMaxValue: function() { return /* binding */ toMaxValue; },\n/* harmony export */   toMinValue: function() { return /* binding */ toMinValue; },\n/* harmony export */   toUpperCase: function() { return /* binding */ toUpperCase; },\n/* harmony export */   transform: function() { return /* binding */ transform; },\n/* harmony export */   transformAsync: function() { return /* binding */ transformAsync; },\n/* harmony export */   trim: function() { return /* binding */ trim; },\n/* harmony export */   trimEnd: function() { return /* binding */ trimEnd; },\n/* harmony export */   trimStart: function() { return /* binding */ trimStart; },\n/* harmony export */   tuple: function() { return /* binding */ tuple; },\n/* harmony export */   tupleAsync: function() { return /* binding */ tupleAsync; },\n/* harmony export */   tupleWithRest: function() { return /* binding */ tupleWithRest; },\n/* harmony export */   tupleWithRestAsync: function() { return /* binding */ tupleWithRestAsync; },\n/* harmony export */   ulid: function() { return /* binding */ ulid; },\n/* harmony export */   undefined_: function() { return /* binding */ undefined_; },\n/* harmony export */   union: function() { return /* binding */ union; },\n/* harmony export */   unionAsync: function() { return /* binding */ unionAsync; },\n/* harmony export */   unknown: function() { return /* binding */ unknown; },\n/* harmony export */   unwrap: function() { return /* binding */ unwrap; },\n/* harmony export */   url: function() { return /* binding */ url; },\n/* harmony export */   uuid: function() { return /* binding */ uuid; },\n/* harmony export */   value: function() { return /* binding */ value; },\n/* harmony export */   variant: function() { return /* binding */ variant; },\n/* harmony export */   variantAsync: function() { return /* binding */ variantAsync; },\n/* harmony export */   void_: function() { return /* binding */ void_; }\n/* harmony export */ });\n// src/regex.ts\nvar BIC_REGEX = /^[A-Z]{6}(?!00)[A-Z\\d]{2}(?:[A-Z\\d]{3})?$/u;\nvar CUID2_REGEX = /^[a-z][\\da-z]*$/u;\nvar DECIMAL_REGEX = /^\\d+$/u;\nvar EMAIL_REGEX = /^[\\w+-]+(?:\\.[\\w+-]+)*@[\\da-z]+(?:[.-][\\da-z]+)*\\.[a-z]{2,}$/iu;\nvar EMOJI_REGEX = /^[\\p{Extended_Pictographic}\\p{Emoji_Component}]+$/u;\nvar HEXADECIMAL_REGEX = /^(?:0h|0x)?[\\da-f]+$/iu;\nvar HEX_COLOR_REGEX = /^#(?:[\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/iu;\nvar IMEI_REGEX = /^\\d{15}$|^\\d{2}-\\d{6}-\\d{6}-\\d$/u;\nvar IPV4_REGEX = (\n  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive\n  /^(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])(?:\\.(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])){3}$/u\n);\nvar IPV6_REGEX = /^(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:|(?:[\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,5}(?::[\\da-f]{1,4}){1,2}|(?:[\\da-f]{1,4}:){1,4}(?::[\\da-f]{1,4}){1,3}|(?:[\\da-f]{1,4}:){1,3}(?::[\\da-f]{1,4}){1,4}|(?:[\\da-f]{1,4}:){1,2}(?::[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:(?::[\\da-f]{1,4}){1,6}|:(?:(?::[\\da-f]{1,4}){1,7}|:)|fe80:(?::[\\da-f]{0,4}){0,4}%[\\da-z]+|::(?:f{4}(?::0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)|(?:[\\da-f]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d))$/iu;\nvar IP_REGEX = /^(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])(?:\\.(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])){3}$|^(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:|(?:[\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,5}(?::[\\da-f]{1,4}){1,2}|(?:[\\da-f]{1,4}:){1,4}(?::[\\da-f]{1,4}){1,3}|(?:[\\da-f]{1,4}:){1,3}(?::[\\da-f]{1,4}){1,4}|(?:[\\da-f]{1,4}:){1,2}(?::[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:(?::[\\da-f]{1,4}){1,6}|:(?:(?::[\\da-f]{1,4}){1,7}|:)|fe80:(?::[\\da-f]{0,4}){0,4}%[\\da-z]+|::(?:f{4}(?::0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)|(?:[\\da-f]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d))$/iu;\nvar ISO_DATE_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])$/u;\nvar ISO_DATE_TIME_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_REGEX = /^(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_SECOND_REGEX = /^(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}$/u;\nvar ISO_TIMESTAMP_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}(?:\\.\\d{1,9})?(?:Z|[+-](?:0\\d|1\\d|2[0-3])(?::?[0-5]\\d)?)$/u;\nvar ISO_WEEK_REGEX = /^\\d{4}-W(?:0[1-9]|[1-4]\\d|5[0-3])$/u;\nvar MAC48_REGEX = /^(?:[\\da-f]{2}:){5}[\\da-f]{2}$|^(?:[\\da-f]{2}-){5}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){2}[\\da-f]{4}$/iu;\nvar MAC64_REGEX = /^(?:[\\da-f]{2}:){7}[\\da-f]{2}$|^(?:[\\da-f]{2}-){7}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){3}[\\da-f]{4}$|^(?:[\\da-f]{4}:){3}[\\da-f]{4}$/iu;\nvar MAC_REGEX = /^(?:[\\da-f]{2}:){5}[\\da-f]{2}$|^(?:[\\da-f]{2}-){5}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){2}[\\da-f]{4}$|^(?:[\\da-f]{2}:){7}[\\da-f]{2}$|^(?:[\\da-f]{2}-){7}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){3}[\\da-f]{4}$|^(?:[\\da-f]{4}:){3}[\\da-f]{4}$/iu;\nvar OCTAL_REGEX = /^(?:0o)?[0-7]+$/iu;\nvar ULID_REGEX = /^[\\da-hjkmnp-tv-z]{26}$/iu;\nvar UUID_REGEX = /^[\\da-f]{8}(?:-[\\da-f]{4}){3}-[\\da-f]{12}$/iu;\n\n// src/storages/globalConfig/globalConfig.ts\nvar store;\nfunction setGlobalConfig(config2) {\n  store = { ...store, ...config2 };\n}\nfunction getGlobalConfig(config2) {\n  return {\n    lang: config2?.lang ?? store?.lang,\n    message: config2?.message,\n    abortEarly: config2?.abortEarly ?? store?.abortEarly,\n    abortPipeEarly: config2?.abortPipeEarly ?? store?.abortPipeEarly,\n    skipPipe: config2?.skipPipe\n  };\n}\nfunction deleteGlobalConfig() {\n  store = void 0;\n}\n\n// src/storages/globalMessage/globalMessage.ts\nvar store2;\nfunction setGlobalMessage(message, lang) {\n  if (!store2)\n    store2 = /* @__PURE__ */ new Map();\n  store2.set(lang, message);\n}\nfunction getGlobalMessage(lang) {\n  return store2?.get(lang);\n}\nfunction deleteGlobalMessage(lang) {\n  store2?.delete(lang);\n}\n\n// src/storages/schemaMessage/schemaMessage.ts\nvar store3;\nfunction setSchemaMessage(message, lang) {\n  if (!store3)\n    store3 = /* @__PURE__ */ new Map();\n  store3.set(lang, message);\n}\nfunction getSchemaMessage(lang) {\n  return store3?.get(lang);\n}\nfunction deleteSchemaMessage(lang) {\n  store3?.delete(lang);\n}\n\n// src/storages/specificMessage/specificMessage.ts\nvar store4;\nfunction setSpecificMessage(reference, message, lang) {\n  if (!store4)\n    store4 = /* @__PURE__ */ new Map();\n  if (!store4.get(reference))\n    store4.set(reference, /* @__PURE__ */ new Map());\n  store4.get(reference).set(lang, message);\n}\nfunction getSpecificMessage(reference, lang) {\n  return store4?.get(reference)?.get(lang);\n}\nfunction deleteSpecificMessage(reference, lang) {\n  store4?.get(reference)?.delete(lang);\n}\n\n// src/utils/_stringify/_stringify.ts\nfunction _stringify(input) {\n  let type = typeof input;\n  if (type === \"object\") {\n    type = (input && Object.getPrototypeOf(input)?.constructor?.name) ?? \"null\";\n  }\n  return type === \"string\" ? `\"${input}\"` : type === \"number\" || type === \"bigint\" || type === \"boolean\" ? `${input}` : type;\n}\n\n// src/utils/_addIssue/_addIssue.ts\nfunction _addIssue(context, label, dataset, config2, other) {\n  const input = other && \"input\" in other ? other.input : dataset.value;\n  const expected = other?.expected ?? context.expects;\n  const received = other?.received ?? _stringify(input);\n  const issue = {\n    kind: context.kind,\n    type: context.type,\n    input,\n    expected,\n    received,\n    message: `Invalid ${label}: ${expected ? `Expected ${expected} but r` : \"R\"}eceived ${received}`,\n    // @ts-expect-error\n    requirement: context.requirement,\n    path: other?.path,\n    issues: other?.issues,\n    lang: config2.lang,\n    abortEarly: config2.abortEarly,\n    abortPipeEarly: config2.abortPipeEarly,\n    skipPipe: config2.skipPipe\n  };\n  const isSchema = context.kind === \"schema\";\n  const message = (\n    // @ts-expect-error\n    context.message ?? getSpecificMessage(context.reference, issue.lang) ?? (isSchema ? getSchemaMessage(issue.lang) : null) ?? config2.message ?? getGlobalMessage(issue.lang)\n  );\n  if (message) {\n    issue.message = typeof message === \"function\" ? message(issue) : message;\n  }\n  if (isSchema) {\n    dataset.typed = false;\n  }\n  if (dataset.issues) {\n    dataset.issues.push(issue);\n  } else {\n    dataset.issues = [issue];\n  }\n}\n\n// src/utils/_isAllowedObjectKey/_isAllowedObjectKey.ts\nfunction _isAllowedObjectKey(key) {\n  return key !== \"__proto__\" && key !== \"prototype\" && key !== \"constructor\";\n}\n\n// src/utils/_isLuhnAlgo/_isLuhnAlgo.ts\nvar NON_DIGIT_REGEX = /\\D/gu;\nfunction _isLuhnAlgo(input) {\n  const number2 = input.replace(NON_DIGIT_REGEX, \"\");\n  let length2 = number2.length;\n  let bit = 1;\n  let sum = 0;\n  while (length2) {\n    const value2 = +number2[--length2];\n    bit ^= 1;\n    sum += bit ? [0, 2, 4, 6, 8, 1, 3, 5, 7, 9][value2] : value2;\n  }\n  return sum % 10 === 0;\n}\n\n// src/utils/entriesFromList/entriesFromList.ts\nfunction entriesFromList(list, schema) {\n  const entries = {};\n  for (const key of list) {\n    entries[key] = schema;\n  }\n  return entries;\n}\n\n// src/utils/getDotPath/getDotPath.ts\nfunction getDotPath(issue) {\n  if (issue.path) {\n    let key = \"\";\n    for (const item of issue.path) {\n      if (\"key\" in item && (typeof item.key === \"string\" || typeof item.key === \"number\")) {\n        if (key) {\n          key += `.${item.key}`;\n        } else {\n          key += item.key;\n        }\n      } else {\n        return null;\n      }\n    }\n    return key;\n  }\n  return null;\n}\n\n// src/utils/isOfKind/isOfKind.ts\nfunction isOfKind(kind, object2) {\n  return object2.kind === kind;\n}\n\n// src/utils/isOfType/isOfType.ts\nfunction isOfType(type, object2) {\n  return object2.type === type;\n}\n\n// src/utils/isValiError/isValiError.ts\nfunction isValiError(error) {\n  return error instanceof ValiError;\n}\n\n// src/utils/ValiError/ValiError.ts\nvar ValiError = class extends Error {\n  /**\n   * The error issues.\n   */\n  issues;\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(issues) {\n    super(issues[0].message);\n    this.name = \"ValiError\";\n    this.issues = issues;\n  }\n};\n\n// src/actions/bic/bic.ts\nfunction bic(message) {\n  return {\n    kind: \"validation\",\n    type: \"bic\",\n    reference: bic,\n    async: false,\n    expects: null,\n    requirement: BIC_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"BIC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/bytes/bytes.ts\nfunction bytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"bytes\",\n    reference: bytes,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 !== this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/brand/brand.ts\nfunction brand(name) {\n  return {\n    kind: \"transformation\",\n    type: \"brand\",\n    reference: brand,\n    async: false,\n    name,\n    _run(dataset) {\n      return dataset;\n    }\n  };\n}\n\n// src/actions/check/check.ts\nfunction check(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: check,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/check/checkAsync.ts\nfunction checkAsync(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: checkAsync,\n    async: true,\n    expects: null,\n    requirement,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.typed && !await this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/creditCard/creditCard.ts\nvar CREDIT_CARD_REGEX = /^(?:\\d{14,19}|\\d{4}(?: \\d{3,6}){2,4}|\\d{4}(?:-\\d{3,6}){2,4})$/u;\nvar SANITIZE_REGEX = /[- ]/gu;\nvar PROVIDER_REGEX_LIST = [\n  // American Express\n  /^3[47]\\d{13}$/u,\n  // Diners Club\n  /^3(?:0[0-5]|[68]\\d)\\d{11,13}$/u,\n  // Discover\n  /^6(?:011|5\\d{2})\\d{12,15}$/u,\n  // JCB\n  /^(?:2131|1800|35\\d{3})\\d{11}$/u,\n  // Mastercard\n  /^5[1-5]\\d{2}|(?:222\\d|22[3-9]\\d|2[3-6]\\d{2}|27[01]\\d|2720)\\d{12}$/u,\n  // UnionPay\n  /^(?:6[27]\\d{14,17}|81\\d{14,17})$/u,\n  // Visa\n  /^4\\d{12}(?:\\d{3,6})?$/u\n];\nfunction creditCard(message) {\n  return {\n    kind: \"validation\",\n    type: \"credit_card\",\n    reference: creditCard,\n    async: false,\n    expects: null,\n    requirement(input) {\n      let sanitized;\n      return CREDIT_CARD_REGEX.test(input) && // Remove any hyphens and blanks\n      (sanitized = input.replace(SANITIZE_REGEX, \"\")) && // Check if it matches a provider\n      PROVIDER_REGEX_LIST.some((regex2) => regex2.test(sanitized)) && // Check if passes luhn algorithm\n      _isLuhnAlgo(sanitized);\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"credit card\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/cuid2/cuid2.ts\nfunction cuid2(message) {\n  return {\n    kind: \"validation\",\n    type: \"cuid2\",\n    reference: cuid2,\n    async: false,\n    expects: null,\n    requirement: CUID2_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"Cuid2\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/decimal/decimal.ts\nfunction decimal(message) {\n  return {\n    kind: \"validation\",\n    type: \"decimal\",\n    reference: decimal,\n    async: false,\n    expects: null,\n    requirement: DECIMAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"decimal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/email/email.ts\nfunction email(message) {\n  return {\n    kind: \"validation\",\n    type: \"email\",\n    reference: email,\n    expects: null,\n    async: false,\n    requirement: EMAIL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"email\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/emoji/emoji.ts\nfunction emoji(message) {\n  return {\n    kind: \"validation\",\n    type: \"emoji\",\n    reference: emoji,\n    async: false,\n    expects: null,\n    requirement: EMOJI_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"emoji\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/empty/empty.ts\nfunction empty(message) {\n  return {\n    kind: \"validation\",\n    type: \"empty\",\n    reference: empty,\n    async: false,\n    expects: \"0\",\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length > 0) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/endsWith/endsWith.ts\nfunction endsWith(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"ends_with\",\n    reference: endsWith,\n    async: false,\n    expects: `\"${requirement}\"`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.endsWith(this.requirement)) {\n        _addIssue(this, \"end\", dataset, config2, {\n          received: `\"${dataset.value.slice(-this.requirement.length)}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/every/every.ts\nfunction every(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"every\",\n    reference: every,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.every(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/excludes/excludes.ts\nfunction excludes(requirement, message) {\n  const received = _stringify(requirement);\n  return {\n    kind: \"validation\",\n    type: \"excludes\",\n    reference: excludes,\n    async: false,\n    expects: `!${received}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.includes(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2, { received });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/finite/finite.ts\nfunction finite(message) {\n  return {\n    kind: \"validation\",\n    type: \"finite\",\n    reference: finite,\n    async: false,\n    expects: null,\n    requirement: Number.isFinite,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"finite\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hash/hash.ts\nvar HASH_LENGTHS = {\n  md4: 32,\n  md5: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8,\n  adler32: 8\n};\nfunction hash(types, message) {\n  return {\n    kind: \"validation\",\n    type: \"hash\",\n    reference: hash,\n    expects: null,\n    async: false,\n    requirement: RegExp(\n      types.map((type) => `^[a-f0-9]{${HASH_LENGTHS[type]}}$`).join(\"|\"),\n      \"iu\"\n    ),\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hash\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hexadecimal/hexadecimal.ts\nfunction hexadecimal(message) {\n  return {\n    kind: \"validation\",\n    type: \"hexadecimal\",\n    reference: hexadecimal,\n    async: false,\n    expects: null,\n    requirement: HEXADECIMAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hexadecimal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hexColor/hexColor.ts\nfunction hexColor(message) {\n  return {\n    kind: \"validation\",\n    type: \"hex_color\",\n    reference: hexColor,\n    async: false,\n    expects: null,\n    requirement: HEX_COLOR_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hex color\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/imei/imei.ts\nfunction imei(message) {\n  return {\n    kind: \"validation\",\n    type: \"imei\",\n    reference: imei,\n    async: false,\n    expects: null,\n    requirement(input) {\n      return IMEI_REGEX.test(input) && _isLuhnAlgo(input);\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"IMEI\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/includes/includes.ts\nfunction includes(requirement, message) {\n  const expects = _stringify(requirement);\n  return {\n    kind: \"validation\",\n    type: \"includes\",\n    reference: includes,\n    async: false,\n    expects,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.includes(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2, {\n          received: `!${expects}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/integer/integer.ts\nfunction integer(message) {\n  return {\n    kind: \"validation\",\n    type: \"integer\",\n    reference: integer,\n    async: false,\n    expects: null,\n    requirement: Number.isInteger,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"integer\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ip/ip.ts\nfunction ip(message) {\n  return {\n    kind: \"validation\",\n    type: \"ip\",\n    reference: ip,\n    async: false,\n    expects: null,\n    requirement: IP_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IP\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ipv4/ipv4.ts\nfunction ipv4(message) {\n  return {\n    kind: \"validation\",\n    type: \"ipv4\",\n    reference: ipv4,\n    async: false,\n    expects: null,\n    requirement: IPV4_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IPv4\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ipv6/ipv6.ts\nfunction ipv6(message) {\n  return {\n    kind: \"validation\",\n    type: \"ipv6\",\n    reference: ipv6,\n    async: false,\n    expects: null,\n    requirement: IPV6_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IPv6\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoDate/isoDate.ts\nfunction isoDate(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_date\",\n    reference: isoDate,\n    async: false,\n    expects: null,\n    requirement: ISO_DATE_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"date\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoDateTime/isoDateTime.ts\nfunction isoDateTime(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_date_time\",\n    reference: isoDateTime,\n    async: false,\n    expects: null,\n    requirement: ISO_DATE_TIME_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"date-time\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTime/isoTime.ts\nfunction isoTime(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_time\",\n    reference: isoTime,\n    async: false,\n    expects: null,\n    requirement: ISO_TIME_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"time\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTimeSecond/isoTimeSecond.ts\nfunction isoTimeSecond(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_time_second\",\n    reference: isoTimeSecond,\n    async: false,\n    expects: null,\n    requirement: ISO_TIME_SECOND_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"time-second\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTimestamp/isoTimestamp.ts\nfunction isoTimestamp(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_timestamp\",\n    reference: isoTimestamp,\n    async: false,\n    expects: null,\n    requirement: ISO_TIMESTAMP_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"timestamp\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoWeek/isoWeek.ts\nfunction isoWeek(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_week\",\n    reference: isoWeek,\n    async: false,\n    expects: null,\n    requirement: ISO_WEEK_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"week\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/length/length.ts\nfunction length(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"length\",\n    reference: length,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length !== this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac/mac.ts\nfunction mac(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac\",\n    reference: mac,\n    async: false,\n    expects: null,\n    requirement: MAC_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac48/mac48.ts\nfunction mac48(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac48\",\n    reference: mac48,\n    async: false,\n    expects: null,\n    requirement: MAC48_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"48-bit MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac64/mac64.ts\nfunction mac64(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac64\",\n    reference: mac64,\n    async: false,\n    expects: null,\n    requirement: MAC64_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"64-bit MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxBytes/maxBytes.ts\nfunction maxBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_bytes\",\n    reference: maxBytes,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 > this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxLength/maxLength.ts\nfunction maxLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_length\",\n    reference: maxLength,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length > this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxSize/maxSize.ts\nfunction maxSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_size\",\n    reference: maxSize,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size > this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxValue/maxValue.ts\nfunction maxValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_value\",\n    reference: maxValue,\n    async: false,\n    expects: `<=${requirement instanceof Date ? requirement.toJSON() : _stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value > this.requirement) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mimeType/mimeType.ts\nfunction mimeType(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"mime_type\",\n    reference: mimeType,\n    async: false,\n    expects: requirement.map((option) => `\"${option}\"`).join(\" | \") || \"never\",\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.includes(dataset.value.type)) {\n        _addIssue(this, \"MIME type\", dataset, config2, {\n          received: `\"${dataset.value.type}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minBytes/minBytes.ts\nfunction minBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_bytes\",\n    reference: minBytes,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 < this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minLength/minLength.ts\nfunction minLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_length\",\n    reference: minLength,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length < this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minSize/minSize.ts\nfunction minSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_size\",\n    reference: minSize,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size < this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minValue/minValue.ts\nfunction minValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_value\",\n    reference: minValue,\n    async: false,\n    expects: `>=${requirement instanceof Date ? requirement.toJSON() : _stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value < this.requirement) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/multipleOf/multipleOf.ts\nfunction multipleOf(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"multiple_of\",\n    reference: multipleOf,\n    async: false,\n    expects: `%${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value % this.requirement !== 0) {\n        _addIssue(this, \"multiple\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/nonEmpty/nonEmpty.ts\nfunction nonEmpty(message) {\n  return {\n    kind: \"validation\",\n    type: \"non_empty\",\n    reference: nonEmpty,\n    async: false,\n    expects: \"!0\",\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length === 0) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: \"0\"\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notBytes/notBytes.ts\nfunction notBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_bytes\",\n    reference: notBytes,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 === this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notLength/notLength.ts\nfunction notLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_length\",\n    reference: notLength,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length === this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notSize/notSize.ts\nfunction notSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_size\",\n    reference: notSize,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size === this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notValue/notValue.ts\nfunction notValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_value\",\n    reference: notValue,\n    async: false,\n    expects: requirement instanceof Date ? `!${requirement.toJSON()}` : `!${_stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && this.requirement <= dataset.value && this.requirement >= dataset.value) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/octal/octal.ts\nfunction octal(message) {\n  return {\n    kind: \"validation\",\n    type: \"octal\",\n    reference: octal,\n    async: false,\n    expects: null,\n    requirement: OCTAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"octal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/readonly/readonly.ts\nfunction readonly() {\n  return {\n    kind: \"transformation\",\n    type: \"readonly\",\n    reference: readonly,\n    async: false,\n    _run(dataset) {\n      return dataset;\n    }\n  };\n}\n\n// src/actions/regex/regex.ts\nfunction regex(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"regex\",\n    reference: regex,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"format\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/safeInteger/safeInteger.ts\nfunction safeInteger(message) {\n  return {\n    kind: \"validation\",\n    type: \"safe_integer\",\n    reference: safeInteger,\n    async: false,\n    expects: null,\n    requirement: Number.isSafeInteger,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"safe integer\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/size/size.ts\nfunction size(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"size\",\n    reference: size,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size !== this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/some/some.ts\nfunction some(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"some\",\n    reference: some,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.some(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/startsWith/startsWith.ts\nfunction startsWith(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"starts_with\",\n    reference: startsWith,\n    async: false,\n    expects: `\"${requirement}\"`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.startsWith(this.requirement)) {\n        _addIssue(this, \"start\", dataset, config2, {\n          received: `\"${dataset.value.slice(0, this.requirement.length)}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toLowerCase/toLowerCase.ts\nfunction toLowerCase() {\n  return {\n    kind: \"transformation\",\n    type: \"to_lower_case\",\n    reference: toLowerCase,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.toLowerCase();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toMaxValue/toMaxValue.ts\nfunction toMaxValue(requirement) {\n  return {\n    kind: \"transformation\",\n    type: \"to_max_value\",\n    reference: toMaxValue,\n    async: false,\n    requirement,\n    _run(dataset) {\n      dataset.value = dataset.value > this.requirement ? this.requirement : dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toMinValue/toMinValue.ts\nfunction toMinValue(requirement) {\n  return {\n    kind: \"transformation\",\n    type: \"to_min_value\",\n    reference: toMinValue,\n    async: false,\n    requirement,\n    _run(dataset) {\n      dataset.value = dataset.value < this.requirement ? this.requirement : dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toUpperCase/toUpperCase.ts\nfunction toUpperCase() {\n  return {\n    kind: \"transformation\",\n    type: \"to_upper_case\",\n    reference: toUpperCase,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.toUpperCase();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/transform/transform.ts\nfunction transform(action) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: transform,\n    async: false,\n    action,\n    _run(dataset) {\n      dataset.value = action(dataset.value);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/transform/transformAsync.ts\nfunction transformAsync(action) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: transformAsync,\n    async: true,\n    action,\n    async _run(dataset) {\n      dataset.value = await action(dataset.value);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trim/trim.ts\nfunction trim() {\n  return {\n    kind: \"transformation\",\n    type: \"trim\",\n    reference: trim,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trim();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trimEnd/trimEnd.ts\nfunction trimEnd() {\n  return {\n    kind: \"transformation\",\n    type: \"trim_end\",\n    reference: trimEnd,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trimEnd();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trimStart/trimStart.ts\nfunction trimStart() {\n  return {\n    kind: \"transformation\",\n    type: \"trim_start\",\n    reference: trimStart,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trimStart();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ulid/ulid.ts\nfunction ulid(message) {\n  return {\n    kind: \"validation\",\n    type: \"ulid\",\n    reference: ulid,\n    async: false,\n    expects: null,\n    requirement: ULID_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"ULID\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/url/url.ts\nfunction url(message) {\n  return {\n    kind: \"validation\",\n    type: \"url\",\n    reference: url,\n    async: false,\n    expects: null,\n    requirement(input) {\n      try {\n        new URL(input);\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"URL\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/uuid/uuid.ts\nfunction uuid(message) {\n  return {\n    kind: \"validation\",\n    type: \"uuid\",\n    reference: uuid,\n    async: false,\n    expects: null,\n    requirement: UUID_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"UUID\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/value/value.ts\nfunction value(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"value\",\n    reference: value,\n    async: false,\n    expects: requirement instanceof Date ? requirement.toJSON() : _stringify(requirement),\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !(this.requirement <= dataset.value && this.requirement >= dataset.value)) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/config/config.ts\nfunction config(schema, config2) {\n  return {\n    ...schema,\n    _run(dataset, config_) {\n      return schema._run(dataset, { ...config_, ...config2 });\n    }\n  };\n}\n\n// src/methods/getFallback/getFallback.ts\nfunction getFallback(schema, dataset, config2) {\n  return typeof schema.fallback === \"function\" ? (\n    // @ts-expect-error\n    schema.fallback(dataset, config2)\n  ) : (\n    // @ts-expect-error\n    schema.fallback\n  );\n}\n\n// src/methods/fallback/fallback.ts\nfunction fallback(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    _run(dataset, config2) {\n      schema._run(dataset, config2);\n      return dataset.issues ? { typed: true, value: getFallback(this, dataset, config2) } : dataset;\n    }\n  };\n}\n\n// src/methods/fallback/fallbackAsync.ts\nfunction fallbackAsync(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    async: true,\n    async _run(dataset, config2) {\n      schema._run(dataset, config2);\n      return dataset.issues ? (\n        // @ts-expect-error\n        { typed: true, value: await getFallback(this, dataset, config2) }\n      ) : dataset;\n    }\n  };\n}\n\n// src/methods/flatten/flatten.ts\nfunction flatten(issues) {\n  const flatErrors = {};\n  for (const issue of issues) {\n    if (issue.path) {\n      const dotPath = getDotPath(issue);\n      if (dotPath) {\n        if (!flatErrors.nested) {\n          flatErrors.nested = {};\n        }\n        if (flatErrors.nested[dotPath]) {\n          flatErrors.nested[dotPath].push(issue.message);\n        } else {\n          flatErrors.nested[dotPath] = [issue.message];\n        }\n      } else {\n        if (flatErrors.other) {\n          flatErrors.other.push(issue.message);\n        } else {\n          flatErrors.other = [issue.message];\n        }\n      }\n    } else {\n      if (flatErrors.root) {\n        flatErrors.root.push(issue.message);\n      } else {\n        flatErrors.root = [issue.message];\n      }\n    }\n  }\n  return flatErrors;\n}\n\n// src/methods/forward/forward.ts\nfunction forward(action, pathKeys) {\n  return {\n    ...action,\n    _run(dataset, config2) {\n      const prevIssues = dataset.issues && [...dataset.issues];\n      action._run(dataset, config2);\n      if (dataset.issues) {\n        for (const issue of dataset.issues) {\n          if (!prevIssues?.includes(issue)) {\n            let pathInput = dataset.value;\n            for (const key of pathKeys) {\n              const pathValue = pathInput[key];\n              const pathItem = {\n                type: \"unknown\",\n                origin: \"value\",\n                input: pathInput,\n                key,\n                value: pathValue\n              };\n              if (issue.path) {\n                issue.path.push(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              if (!pathValue) {\n                break;\n              }\n              pathInput = pathValue;\n            }\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/forward/forwardAsync.ts\nfunction forwardAsync(action, pathKeys) {\n  return {\n    ...action,\n    async: true,\n    async _run(dataset, config2) {\n      const prevIssues = dataset.issues && [...dataset.issues];\n      await action._run(dataset, config2);\n      if (dataset.issues) {\n        for (const issue of dataset.issues) {\n          if (!prevIssues?.includes(issue)) {\n            let pathInput = dataset.value;\n            for (const key of pathKeys) {\n              const pathValue = pathInput[key];\n              const pathItem = {\n                type: \"unknown\",\n                origin: \"value\",\n                input: pathInput,\n                key,\n                value: pathValue\n              };\n              if (issue.path) {\n                issue.path.push(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              if (!pathValue) {\n                break;\n              }\n              pathInput = pathValue;\n            }\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/getDefault/getDefault.ts\nfunction getDefault(schema, dataset, config2) {\n  return typeof schema.default === \"function\" ? (\n    // @ts-expect-error\n    schema.default(dataset, config2)\n  ) : (\n    // @ts-expect-error\n    schema.default\n  );\n}\n\n// src/methods/getDefaults/getDefaults.ts\nfunction getDefaults(schema) {\n  if (\"entries\" in schema) {\n    const object2 = {};\n    for (const key in schema.entries) {\n      object2[key] = getDefaults(schema.entries[key]);\n    }\n    return object2;\n  }\n  if (\"items\" in schema) {\n    return schema.items.map(getDefaults);\n  }\n  return getDefault(schema);\n}\n\n// src/methods/getDefaults/getDefaultsAsync.ts\nasync function getDefaultsAsync(schema) {\n  if (\"entries\" in schema) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getDefaultsAsync(value2)\n        ])\n      )\n    );\n  }\n  if (\"items\" in schema) {\n    return Promise.all(schema.items.map(getDefaultsAsync));\n  }\n  return getDefault(schema);\n}\n\n// src/methods/getFallbacks/getFallbacks.ts\nfunction getFallbacks(schema) {\n  if (\"entries\" in schema) {\n    const object2 = {};\n    for (const key in schema.entries) {\n      object2[key] = getFallbacks(schema.entries[key]);\n    }\n    return object2;\n  }\n  if (\"items\" in schema) {\n    return schema.items.map(getFallbacks);\n  }\n  return getFallback(schema);\n}\n\n// src/methods/getFallbacks/getFallbacksAsync.ts\nasync function getFallbacksAsync(schema) {\n  if (\"entries\" in schema) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getFallbacksAsync(value2)\n        ])\n      )\n    );\n  }\n  if (\"items\" in schema) {\n    return Promise.all(schema.items.map(getFallbacksAsync));\n  }\n  return getFallback(schema);\n}\n\n// src/methods/is/is.ts\nfunction is(schema, input) {\n  return !schema._run({ typed: false, value: input }, { abortEarly: true }).issues;\n}\n\n// src/schemas/any/any.ts\nfunction any() {\n  return {\n    kind: \"schema\",\n    type: \"any\",\n    reference: any,\n    expects: \"any\",\n    async: false,\n    _run(dataset) {\n      dataset.typed = true;\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/array/array.ts\nfunction array(item, message) {\n  return {\n    kind: \"schema\",\n    type: \"array\",\n    reference: array,\n    expects: \"Array\",\n    async: false,\n    item,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < input.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.item._run({ typed: false, value: value2 }, config2);\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/array/arrayAsync.ts\nfunction arrayAsync(item, message) {\n  return {\n    kind: \"schema\",\n    type: \"array\",\n    reference: arrayAsync,\n    expects: \"Array\",\n    async: true,\n    item,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          input.map((value2) => this.item._run({ typed: false, value: value2 }, config2))\n        );\n        for (let key = 0; key < itemDatasets.length; key++) {\n          const itemDataset = itemDatasets[key];\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: input[key]\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/bigint/bigint.ts\nfunction bigint(message) {\n  return {\n    kind: \"schema\",\n    type: \"bigint\",\n    reference: bigint,\n    expects: \"bigint\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"bigint\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/blob/blob.ts\nfunction blob(message) {\n  return {\n    kind: \"schema\",\n    type: \"blob\",\n    reference: blob,\n    expects: \"Blob\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Blob) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/boolean/boolean.ts\nfunction boolean(message) {\n  return {\n    kind: \"schema\",\n    type: \"boolean\",\n    reference: boolean,\n    expects: \"boolean\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"boolean\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/custom/custom.ts\nfunction custom(check2, message) {\n  return {\n    kind: \"schema\",\n    type: \"custom\",\n    reference: custom,\n    expects: \"unknown\",\n    async: false,\n    check: check2,\n    message,\n    _run(dataset, config2) {\n      if (this.check(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/custom/customAsync.ts\nfunction customAsync(check2, message) {\n  return {\n    kind: \"schema\",\n    type: \"custom\",\n    reference: customAsync,\n    expects: \"unknown\",\n    async: true,\n    check: check2,\n    message,\n    async _run(dataset, config2) {\n      if (await this.check(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/date/date.ts\nfunction date(message) {\n  return {\n    kind: \"schema\",\n    type: \"date\",\n    reference: date,\n    expects: \"Date\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Date && !isNaN(dataset.value.getTime())) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/enum/enum.ts\nfunction enum_(enum__, message) {\n  const options = Object.entries(enum__).filter(([key]) => isNaN(+key)).map(([, value2]) => value2);\n  return {\n    kind: \"schema\",\n    type: \"enum\",\n    reference: enum_,\n    expects: options.map(_stringify).join(\" | \") || \"never\",\n    async: false,\n    enum: enum__,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.includes(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/instance/instance.ts\nfunction instance(class_, message) {\n  return {\n    kind: \"schema\",\n    type: \"instance\",\n    reference: instance,\n    expects: class_.name,\n    async: false,\n    class: class_,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof this.class) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/intersect/utils/_merge/_merge.ts\nfunction _merge(value1, value2) {\n  if (typeof value1 === typeof value2) {\n    if (value1 === value2 || value1 instanceof Date && value2 instanceof Date && +value1 === +value2) {\n      return { value: value1 };\n    }\n    if (value1 && value2 && value1.constructor === Object && value2.constructor === Object) {\n      for (const key in value2) {\n        if (key in value1) {\n          const dataset = _merge(value1[key], value2[key]);\n          if (dataset.issue) {\n            return dataset;\n          }\n          value1[key] = dataset.value;\n        } else {\n          value1[key] = value2[key];\n        }\n      }\n      return { value: value1 };\n    }\n    if (Array.isArray(value1) && Array.isArray(value2)) {\n      if (value1.length === value2.length) {\n        for (let index = 0; index < value1.length; index++) {\n          const dataset = _merge(value1[index], value2[index]);\n          if (dataset.issue) {\n            return dataset;\n          }\n          value1[index] = dataset.value;\n        }\n        return { value: value1 };\n      }\n    }\n  }\n  return { issue: true };\n}\n\n// src/schemas/intersect/intersect.ts\nfunction intersect(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"intersect\",\n    reference: intersect,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" & \") || \"never\",\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.length) {\n        const input = dataset.value;\n        let outputs;\n        dataset.typed = true;\n        for (const schema of this.options) {\n          const optionDataset = schema._run(\n            { typed: false, value: input },\n            config2\n          );\n          if (optionDataset.issues) {\n            if (dataset.issues) {\n              dataset.issues.push(...optionDataset.issues);\n            } else {\n              dataset.issues = optionDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!optionDataset.typed) {\n            dataset.typed = false;\n          }\n          if (dataset.typed) {\n            if (outputs) {\n              outputs.push(optionDataset.value);\n            } else {\n              outputs = [optionDataset.value];\n            }\n          }\n        }\n        if (dataset.typed) {\n          dataset.value = outputs[0];\n          for (let index = 1; index < outputs.length; index++) {\n            const mergeDataset = _merge(dataset.value, outputs[index]);\n            if (mergeDataset.issue) {\n              _addIssue(this, \"type\", dataset, config2, {\n                received: \"unknown\"\n              });\n              break;\n            }\n            dataset.value = mergeDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/intersect/intersectAsync.ts\nfunction intersectAsync(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"intersect\",\n    reference: intersectAsync,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" & \") || \"never\",\n    async: true,\n    options,\n    message,\n    async _run(dataset, config2) {\n      if (this.options.length) {\n        const input = dataset.value;\n        let outputs;\n        dataset.typed = true;\n        const optionDatasets = await Promise.all(\n          this.options.map(\n            (schema) => schema._run({ typed: false, value: input }, config2)\n          )\n        );\n        for (const optionDataset of optionDatasets) {\n          if (optionDataset.issues) {\n            if (dataset.issues) {\n              dataset.issues.push(...optionDataset.issues);\n            } else {\n              dataset.issues = optionDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!optionDataset.typed) {\n            dataset.typed = false;\n          }\n          if (dataset.typed) {\n            if (outputs) {\n              outputs.push(optionDataset.value);\n            } else {\n              outputs = [optionDataset.value];\n            }\n          }\n        }\n        if (dataset.typed) {\n          dataset.value = outputs[0];\n          for (let index = 1; index < outputs.length; index++) {\n            const mergeDataset = _merge(dataset.value, outputs[index]);\n            if (mergeDataset.issue) {\n              _addIssue(this, \"type\", dataset, config2, {\n                received: \"unknown\"\n              });\n              break;\n            }\n            dataset.value = mergeDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/lazy/lazy.ts\nfunction lazy(getter) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: lazy,\n    expects: \"unknown\",\n    async: false,\n    getter,\n    _run(dataset, config2) {\n      return this.getter(dataset.value)._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/lazy/lazyAsync.ts\nfunction lazyAsync(getter) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: lazyAsync,\n    expects: \"unknown\",\n    async: true,\n    getter,\n    async _run(dataset, config2) {\n      return (await this.getter(dataset.value))._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/literal/literal.ts\nfunction literal(literal_, message) {\n  return {\n    kind: \"schema\",\n    type: \"literal\",\n    reference: literal,\n    expects: _stringify(literal_),\n    async: false,\n    literal: literal_,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === this.literal) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseObject/looseObject.ts\nfunction looseObject(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: looseObject,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isAllowedObjectKey(key) && !(key in this.entries)) {\n              dataset.value[key] = input[key];\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseObject/looseObjectAsync.ts\nfunction looseObjectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: looseObjectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isAllowedObjectKey(key) && !(key in this.entries)) {\n              dataset.value[key] = input[key];\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseTuple/looseTuple.ts\nfunction looseTuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_tuple\",\n    reference: looseTuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = items.length; key < input.length; key++) {\n            dataset.value.push(input[key]);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseTuple/looseTupleAsync.ts\nfunction looseTupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_tuple\",\n    reference: looseTupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = items.length; key < input.length; key++) {\n            dataset.value.push(input[key]);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/map/map.ts\nfunction map(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"map\",\n    reference: map,\n    expects: \"Map\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Map) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Map();\n        for (const [inputKey, inputValue] of input) {\n          const keyDataset = this.key._run(\n            { typed: false, value: inputKey },\n            config2\n          );\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"key\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of keyDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          const valueDataset = this.value._run(\n            { typed: false, value: inputValue },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"value\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.set(keyDataset.value, valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/map/mapAsync.ts\nfunction mapAsync(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"map\",\n    reference: mapAsync,\n    expects: \"Map\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Map) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Map();\n        const datasets = await Promise.all(\n          [...input].map(\n            ([inputKey, inputValue]) => Promise.all([\n              inputKey,\n              inputValue,\n              this.key._run({ typed: false, value: inputKey }, config2),\n              this.value._run({ typed: false, value: inputValue }, config2)\n            ])\n          )\n        );\n        for (const [\n          inputKey,\n          inputValue,\n          keyDataset,\n          valueDataset\n        ] of datasets) {\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"key\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of keyDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"value\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.set(keyDataset.value, valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nan/nan.ts\nfunction nan(message) {\n  return {\n    kind: \"schema\",\n    type: \"nan\",\n    reference: nan,\n    expects: \"NaN\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (Number.isNaN(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/never/never.ts\nfunction never(message) {\n  return {\n    kind: \"schema\",\n    type: \"never\",\n    reference: never,\n    expects: \"never\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      _addIssue(this, \"type\", dataset, config2);\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullable.ts\nfunction nonNullable(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullable\",\n    reference: nonNullable,\n    expects: \"!null\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullableAsync.ts\nfunction nonNullableAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullable\",\n    reference: nonNullableAsync,\n    expects: \"!null\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === null) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullish.ts\nfunction nonNullish(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullish\",\n    reference: nonNullish,\n    expects: \"!null & !undefined\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullishAsync.ts\nfunction nonNullishAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullish\",\n    reference: nonNullishAsync,\n    expects: \"!null & !undefined\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptional.ts\nfunction nonOptional(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_optional\",\n    reference: nonOptional,\n    expects: \"!undefined\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptionalAsync.ts\nfunction nonOptionalAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_optional\",\n    reference: nonOptionalAsync,\n    expects: \"!undefined\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/null/null.ts\nfunction null_(message) {\n  return {\n    kind: \"schema\",\n    type: \"null\",\n    reference: null_,\n    expects: \"null\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nullable/nullable.ts\nfunction nullable(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullable\",\n    reference: nullable,\n    expects: `${wrapped.expects} | null`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullable/nullableAsync.ts\nfunction nullableAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullable\",\n    reference: nullableAsync,\n    expects: `${wrapped.expects} | null`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === null) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullish/nullish.ts\nfunction nullish(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullish\",\n    reference: nullish,\n    expects: `${wrapped.expects} | null | undefined`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null || dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullish/nullishAsync.ts\nfunction nullishAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullish\",\n    reference: nullishAsync,\n    expects: `${wrapped.expects} | null | undefined`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null || dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/number/number.ts\nfunction number(message) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: number,\n    expects: \"number\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"number\" && !isNaN(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/object/object.ts\nfunction object(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"object\",\n    reference: object,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/object/objectAsync.ts\nfunction objectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"object\",\n    reference: objectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/objectWithRest/objectWithRest.ts\nfunction objectWithRest(entries, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"object_with_rest\",\n    reference: objectWithRest,\n    expects: \"Object\",\n    async: false,\n    entries,\n    rest,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isAllowedObjectKey(key) && !(key in this.entries)) {\n              const value2 = input[key];\n              const valueDataset = this.rest._run(\n                { typed: false, value: value2 },\n                config2\n              );\n              if (valueDataset.issues) {\n                const pathItem = {\n                  type: \"object\",\n                  origin: \"value\",\n                  input,\n                  key,\n                  value: value2\n                };\n                for (const issue of valueDataset.issues) {\n                  if (issue.path) {\n                    issue.path.unshift(pathItem);\n                  } else {\n                    issue.path = [pathItem];\n                  }\n                  dataset.issues?.push(issue);\n                }\n                if (!dataset.issues) {\n                  dataset.issues = valueDataset.issues;\n                }\n                if (config2.abortEarly) {\n                  dataset.typed = false;\n                  break;\n                }\n              }\n              if (!valueDataset.typed) {\n                dataset.typed = false;\n              }\n              dataset.value[key] = valueDataset.value;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/objectWithRest/objectWithRestAsync.ts\nfunction objectWithRestAsync(entries, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"object_with_rest\",\n    reference: objectWithRestAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    rest,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const [normalDatasets, restDatasets] = await Promise.all([\n          // Parse schema of each normal entry\n          Promise.all(\n            Object.entries(this.entries).map(async ([key, schema]) => {\n              const value2 = input[key];\n              return [\n                key,\n                value2,\n                await schema._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          ),\n          // Parse other entries with rest schema\n          Promise.all(\n            Object.entries(input).filter(\n              ([key]) => _isAllowedObjectKey(key) && !(key in this.entries)\n            ).map(\n              async ([key, value2]) => [\n                key,\n                value2,\n                await this.rest._run({ typed: false, value: value2 }, config2)\n              ]\n            )\n          )\n        ]);\n        for (const [key, value2, valueDataset] of normalDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const [key, value2, valueDataset] of restDatasets) {\n            if (valueDataset.issues) {\n              const pathItem = {\n                type: \"object\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of valueDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = valueDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!valueDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/optional/optional.ts\nfunction optional(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: optional,\n    expects: `${wrapped.expects} | undefined`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/optional/optionalAsync.ts\nfunction optionalAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: optionalAsync,\n    expects: `${wrapped.expects} | undefined`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/picklist/picklist.ts\nfunction picklist(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"picklist\",\n    reference: picklist,\n    expects: options.map(_stringify).join(\" | \") || \"never\",\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.includes(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/record/record.ts\nfunction record(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: record,\n    expects: \"Object\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const entryKey in input) {\n          if (_isAllowedObjectKey(entryKey)) {\n            const entryValue = input[entryKey];\n            const keyDataset = this.key._run(\n              { typed: false, value: entryKey },\n              config2\n            );\n            if (keyDataset.issues) {\n              const pathItem = {\n                type: \"record\",\n                origin: \"key\",\n                input,\n                key: entryKey,\n                value: entryValue\n              };\n              for (const issue of keyDataset.issues) {\n                issue.path = [pathItem];\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = keyDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            const valueDataset = this.value._run(\n              { typed: false, value: entryValue },\n              config2\n            );\n            if (valueDataset.issues) {\n              const pathItem = {\n                type: \"record\",\n                origin: \"value\",\n                input,\n                key: entryKey,\n                value: entryValue\n              };\n              for (const issue of valueDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = valueDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!keyDataset.typed || !valueDataset.typed) {\n              dataset.typed = false;\n            }\n            if (keyDataset.typed) {\n              dataset.value[keyDataset.value] = valueDataset.value;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/record/recordAsync.ts\nfunction recordAsync(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: recordAsync,\n    expects: \"Object\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const datasets = await Promise.all(\n          Object.entries(input).filter(([key2]) => _isAllowedObjectKey(key2)).map(\n            ([entryKey, entryValue]) => Promise.all([\n              entryKey,\n              entryValue,\n              this.key._run({ typed: false, value: entryKey }, config2),\n              this.value._run({ typed: false, value: entryValue }, config2)\n            ])\n          )\n        );\n        for (const [\n          entryKey,\n          entryValue,\n          keyDataset,\n          valueDataset\n        ] of datasets) {\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"record\",\n              origin: \"key\",\n              input,\n              key: entryKey,\n              value: entryValue\n            };\n            for (const issue of keyDataset.issues) {\n              issue.path = [pathItem];\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"record\",\n              origin: \"value\",\n              input,\n              key: entryKey,\n              value: entryValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (keyDataset.typed) {\n            dataset.value[keyDataset.value] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/set/set.ts\nfunction set(value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"set\",\n    reference: set,\n    expects: \"Set\",\n    async: false,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Set) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Set();\n        for (const inputValue of input) {\n          const valueDataset = this.value._run(\n            { typed: false, value: inputValue },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"set\",\n              origin: \"value\",\n              input,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.add(valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/set/setAsync.ts\nfunction setAsync(value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"set\",\n    reference: setAsync,\n    expects: \"Set\",\n    async: true,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Set) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Set();\n        const valueDatasets = await Promise.all(\n          [...input].map(\n            async (inputValue) => [\n              inputValue,\n              await this.value._run(\n                { typed: false, value: inputValue },\n                config2\n              )\n            ]\n          )\n        );\n        for (const [inputValue, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"set\",\n              origin: \"value\",\n              input,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.add(valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictObject/strictObject.ts\nfunction strictObject(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_object\",\n    reference: strictObject,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (!(key in this.entries)) {\n              const value2 = input[key];\n              _addIssue(this, \"type\", dataset, config2, {\n                input: value2,\n                expected: \"never\",\n                path: [\n                  {\n                    type: \"object\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: value2\n                  }\n                ]\n              });\n              break;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictObject/strictObjectAsync.ts\nfunction strictObjectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_object\",\n    reference: strictObjectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (!(key in this.entries)) {\n              const value2 = input[key];\n              _addIssue(this, \"type\", dataset, config2, {\n                input: value2,\n                expected: \"never\",\n                path: [\n                  {\n                    type: \"object\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: value2\n                  }\n                ]\n              });\n              break;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictTuple/strictTuple.ts\nfunction strictTuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_tuple\",\n    reference: strictTuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!(dataset.issues && config2.abortEarly) && items.length < input.length) {\n          const value2 = input[items.length];\n          _addIssue(this, \"type\", dataset, config2, {\n            input: value2,\n            expected: \"never\",\n            path: [\n              {\n                type: \"tuple\",\n                origin: \"value\",\n                input,\n                key: items.length,\n                value: value2\n              }\n            ]\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictTuple/strictTupleAsync.ts\nfunction strictTupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_tuple\",\n    reference: strictTupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!(dataset.issues && config2.abortEarly) && items.length < input.length) {\n          const value2 = input[items.length];\n          _addIssue(this, \"type\", dataset, config2, {\n            input: value2,\n            expected: \"never\",\n            path: [\n              {\n                type: \"tuple\",\n                origin: \"value\",\n                input,\n                key: items.length,\n                value: value2\n              }\n            ]\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/string/string.ts\nfunction string(message) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: string,\n    expects: \"string\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"string\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/symbol/symbol.ts\nfunction symbol(message) {\n  return {\n    kind: \"schema\",\n    type: \"symbol\",\n    reference: symbol,\n    expects: \"symbol\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"symbol\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tuple/tuple.ts\nfunction tuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple\",\n    reference: tuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tuple/tupleAsync.ts\nfunction tupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple\",\n    reference: tupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tupleWithRest/tupleWithRest.ts\nfunction tupleWithRest(items, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple_with_rest\",\n    reference: tupleWithRest,\n    expects: \"Array\",\n    async: false,\n    items,\n    rest,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = items.length; key < input.length; key++) {\n            const value2 = input[key];\n            const itemDataset = this.rest._run({ typed: false, value: value2 }, config2);\n            if (itemDataset.issues) {\n              const pathItem = {\n                type: \"tuple\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of itemDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = itemDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!itemDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value.push(itemDataset.value);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tupleWithRest/tupleWithRestAsync.ts\nfunction tupleWithRestAsync(items, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple_with_rest\",\n    reference: tupleWithRestAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    rest,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const [normalDatasets, restDatasets] = await Promise.all([\n          // Parse schema of each normal item\n          Promise.all(\n            items.map(async (item, key) => {\n              const value2 = input[key];\n              return [\n                key,\n                value2,\n                await item._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          ),\n          // Parse other items with rest schema\n          Promise.all(\n            input.slice(items.length).map(async (value2, key) => {\n              return [\n                key + items.length,\n                value2,\n                await rest._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          )\n        ]);\n        for (const [key, value2, itemDataset] of normalDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const [key, value2, itemDataset] of restDatasets) {\n            if (itemDataset.issues) {\n              const pathItem = {\n                type: \"tuple\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of itemDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = itemDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!itemDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value.push(itemDataset.value);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/undefined/undefined.ts\nfunction undefined_(message) {\n  return {\n    kind: \"schema\",\n    type: \"undefined\",\n    reference: undefined_,\n    expects: \"undefined\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/union/utils/_subIssues/_subIssues.ts\nfunction _subIssues(datasets) {\n  let issues;\n  if (datasets) {\n    for (const dataset of datasets) {\n      if (issues) {\n        issues.push(...dataset.issues);\n      } else {\n        issues = dataset.issues;\n      }\n    }\n  }\n  return issues;\n}\n\n// src/schemas/union/union.ts\nfunction union(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: union,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" | \") || \"never\",\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      let validDataset;\n      let typedDatasets;\n      let untypedDatasets;\n      for (const schema of this.options) {\n        const optionDataset = schema._run(\n          { typed: false, value: dataset.value },\n          config2\n        );\n        if (optionDataset.typed) {\n          if (optionDataset.issues) {\n            if (typedDatasets) {\n              typedDatasets.push(optionDataset);\n            } else {\n              typedDatasets = [optionDataset];\n            }\n          } else {\n            validDataset = optionDataset;\n            break;\n          }\n        } else {\n          if (untypedDatasets) {\n            untypedDatasets.push(optionDataset);\n          } else {\n            untypedDatasets = [optionDataset];\n          }\n        }\n      }\n      if (validDataset) {\n        return validDataset;\n      }\n      if (typedDatasets) {\n        if (typedDatasets.length === 1) {\n          return typedDatasets[0];\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(typedDatasets)\n        });\n        dataset.typed = true;\n      } else if (untypedDatasets?.length === 1) {\n        return untypedDatasets[0];\n      } else {\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(untypedDatasets)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/union/unionAsync.ts\nfunction unionAsync(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: unionAsync,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" | \") || \"never\",\n    async: true,\n    options,\n    message,\n    async _run(dataset, config2) {\n      let validDataset;\n      let typedDatasets;\n      let untypedDatasets;\n      for (const schema of this.options) {\n        const optionDataset = await schema._run(\n          { typed: false, value: dataset.value },\n          config2\n        );\n        if (optionDataset.typed) {\n          if (optionDataset.issues) {\n            if (typedDatasets) {\n              typedDatasets.push(optionDataset);\n            } else {\n              typedDatasets = [optionDataset];\n            }\n          } else {\n            validDataset = optionDataset;\n            break;\n          }\n        } else {\n          if (untypedDatasets) {\n            untypedDatasets.push(optionDataset);\n          } else {\n            untypedDatasets = [optionDataset];\n          }\n        }\n      }\n      if (validDataset) {\n        return validDataset;\n      }\n      if (typedDatasets) {\n        if (typedDatasets.length === 1) {\n          return typedDatasets[0];\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(typedDatasets)\n        });\n        dataset.typed = true;\n      } else if (untypedDatasets?.length === 1) {\n        return untypedDatasets[0];\n      } else {\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(untypedDatasets)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/unknown/unknown.ts\nfunction unknown() {\n  return {\n    kind: \"schema\",\n    type: \"unknown\",\n    reference: unknown,\n    expects: \"unknown\",\n    async: false,\n    _run(dataset) {\n      dataset.typed = true;\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/variant/utils/_discriminators/_discriminators.ts\nfunction _discriminators(key, options, set2 = /* @__PURE__ */ new Set()) {\n  for (const schema of options) {\n    if (schema.type === \"variant\") {\n      _discriminators(key, schema.options, set2);\n    } else {\n      set2.add(schema.entries[key].expects);\n    }\n  }\n  return set2;\n}\n\n// src/schemas/variant/variant.ts\nfunction variant(key, options, message) {\n  let expectedDiscriminators;\n  return {\n    kind: \"schema\",\n    type: \"variant\",\n    reference: variant,\n    expects: \"Object\",\n    async: false,\n    key,\n    options,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        const discriminator = input[this.key];\n        if (this.key in input) {\n          let outputDataset;\n          for (const schema of this.options) {\n            if (schema.type === \"variant\" || !schema.entries[this.key]._run(\n              { typed: false, value: discriminator },\n              config2\n            ).issues) {\n              const optionDataset = schema._run(\n                { typed: false, value: input },\n                config2\n              );\n              if (!optionDataset.issues) {\n                return optionDataset;\n              }\n              if (!outputDataset || !outputDataset.typed && optionDataset.typed) {\n                outputDataset = optionDataset;\n              }\n            }\n          }\n          if (outputDataset) {\n            return outputDataset;\n          }\n        }\n        if (!expectedDiscriminators) {\n          expectedDiscriminators = [..._discriminators(this.key, this.options)].join(\" | \") || \"never\";\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          input: discriminator,\n          expected: expectedDiscriminators,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: discriminator\n            }\n          ]\n        });\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/variant/variantAsync.ts\nfunction variantAsync(key, options, message) {\n  let expectedDiscriminators;\n  return {\n    kind: \"schema\",\n    type: \"variant\",\n    reference: variantAsync,\n    expects: \"Object\",\n    async: true,\n    key,\n    options,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        const discriminator = input[this.key];\n        if (this.key in input) {\n          let outputDataset;\n          for (const schema of this.options) {\n            if (schema.type === \"variant\" || !(await schema.entries[this.key]._run(\n              { typed: false, value: discriminator },\n              config2\n            )).issues) {\n              const optionDataset = await schema._run(\n                { typed: false, value: input },\n                config2\n              );\n              if (!optionDataset.issues) {\n                return optionDataset;\n              }\n              if (!outputDataset || !outputDataset.typed && optionDataset.typed) {\n                outputDataset = optionDataset;\n              }\n            }\n          }\n          if (outputDataset) {\n            return outputDataset;\n          }\n        }\n        if (!expectedDiscriminators) {\n          expectedDiscriminators = [..._discriminators(this.key, this.options)].join(\" | \") || \"never\";\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          input: discriminator,\n          expected: expectedDiscriminators,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: discriminator\n            }\n          ]\n        });\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/void/void.ts\nfunction void_(message) {\n  return {\n    kind: \"schema\",\n    type: \"void\",\n    reference: void_,\n    expects: \"void\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/keyof/keyof.ts\nfunction keyof(schema, message) {\n  return picklist(Object.keys(schema.entries), message);\n}\n\n// src/methods/omit/omit.ts\nfunction omit(schema, keys) {\n  const entries = {\n    ...schema.entries\n  };\n  for (const key of keys) {\n    delete entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/parse/parse.ts\nfunction parse(schema, input, config2) {\n  const dataset = schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  if (dataset.issues) {\n    throw new ValiError(dataset.issues);\n  }\n  return dataset.value;\n}\n\n// src/methods/parse/parseAsync.ts\nasync function parseAsync(schema, input, config2) {\n  const dataset = await schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  if (dataset.issues) {\n    throw new ValiError(dataset.issues);\n  }\n  return dataset.value;\n}\n\n// src/methods/parser/parser.ts\nfunction parser(schema, config2) {\n  const func = (input) => parse(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/parser/parserAsync.ts\nfunction parserAsync(schema, config2) {\n  const func = (input) => parseAsync(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/partial/partial.ts\nfunction partial(schema, keys) {\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? optional(schema.entries[key]) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/partial/partialAsync.ts\nfunction partialAsync(schema, keys) {\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? optionalAsync(schema.entries[key]) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/pick/pick.ts\nfunction pick(schema, keys) {\n  const entries = {};\n  for (const key of keys) {\n    entries[key] = schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/pipe/pipe.ts\nfunction pipe(...pipe2) {\n  return {\n    ...pipe2[0],\n    pipe: pipe2,\n    _run(dataset, config2) {\n      for (let index = 0; index < pipe2.length; index++) {\n        dataset = pipe2[index]._run(dataset, config2);\n        const nextAction = pipe2[index + 1];\n        if (config2.skipPipe || dataset.issues && (config2.abortEarly || config2.abortPipeEarly || // TODO: This behavior must be documented!\n        nextAction?.kind === \"schema\" || nextAction?.kind === \"transformation\")) {\n          dataset.typed = false;\n          break;\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/pipe/pipeAsync.ts\nfunction pipeAsync(...pipe2) {\n  return {\n    ...pipe2[0],\n    pipe: pipe2,\n    async: true,\n    async _run(dataset, config2) {\n      for (let index = 0; index < pipe2.length; index++) {\n        dataset = await pipe2[index]._run(dataset, config2);\n        const nextAction = pipe2[index + 1];\n        if (config2.skipPipe || dataset.issues && (config2.abortEarly || config2.abortPipeEarly || // TODO: This behavior must be documented!\n        nextAction?.kind === \"schema\" || nextAction?.kind === \"transformation\")) {\n          dataset.typed = false;\n          break;\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/required/required.ts\nfunction required(schema, arg2, arg3) {\n  const keys = Array.isArray(arg2) ? arg2 : void 0;\n  const message = Array.isArray(arg2) ? arg3 : arg2;\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? nonOptional(schema.entries[key], message) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/required/requiredAsync.ts\nfunction requiredAsync(schema, arg2, arg3) {\n  const keys = Array.isArray(arg2) ? arg2 : void 0;\n  const message = Array.isArray(arg2) ? arg3 : arg2;\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? nonOptionalAsync(schema.entries[key], message) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/safeParse/safeParse.ts\nfunction safeParse(schema, input, config2) {\n  const dataset = schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  return {\n    typed: dataset.typed,\n    success: !dataset.issues,\n    output: dataset.value,\n    issues: dataset.issues\n  };\n}\n\n// src/methods/safeParse/safeParseAsync.ts\nasync function safeParseAsync(schema, input, config2) {\n  const dataset = await schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  return {\n    typed: dataset.typed,\n    success: !dataset.issues,\n    output: dataset.value,\n    issues: dataset.issues\n  };\n}\n\n// src/methods/safeParser/safeParser.ts\nfunction safeParser(schema, config2) {\n  const func = (input) => safeParse(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/safeParser/safeParserAsync.ts\nfunction safeParserAsync(schema, config2) {\n  const func = (input) => safeParseAsync(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/unwrap/unwrap.ts\nfunction unwrap(schema) {\n  return schema.wrapped;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/valibot/dist/index.js\n"));

/***/ })

}]);